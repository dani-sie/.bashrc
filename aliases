linux_version() {
    cat /etc/os-release
}

ssh_iniciar() {
    eval "$(ssh-agent -s)"
}

ssh_activar() {
    if [ -z "$1" ]; then
        echo "Usage: ssh_activar <key_name>"
        return 1
    fi
    ssh-add ~/.ssh/"$1"
}

docker_containers(){
    sudo docker ps -a
}

docker_containers_run() {
    if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ] || [ -z "$4" ]; then
        echo "Usage: docker_run <originPort> <destinationPort> <image_name> <container_name>"
        return 1
    fi
    sudo docker run -d -p "$2:$1" --name "$4" "$3"
}

docker_containers_run_always() {
    if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ] || [ -z "$4" ]; then
        echo "Usage: docker_run <originPort> <destinationPort> <image_name> <container_name>"
        return 1
    fi
    sudo docker run -dp "$2:$1" --name "$4" -w /app -v "$(pwd):/app" "$3"
}



docker_containers_stop() {
    if [ -z "$1" ]; then
        echo "Usage: docker_stop <container_name_or_id> | all"
        return 1
    fi

    if [ "$1" = "all" ]; then
        sudo docker stop $(sudo docker ps -q)
    else
        sudo docker stop "$1"
    fi
}

docker_containers_delete() {
    if [ -z "$1" ]; then
        echo "Usage: docker_delete <container_name_or_id> | all"
        return 1
    fi

    if [ "$1" = "all" ]; then
        sudo docker rm $(sudo docker ps -aq)
    else
        sudo docker rm "$1"
    fi
}

docker_images(){
    sudo docker images
}

docker_images_build() {
    if [ -z "$1" ]; then
        echo "Usage: docker_build <image_name>"
        return 1
    fi
    sudo docker build --network=host -t "$1" .
}

docker_images_delete() {
    if [ -z "$1" ]; then
        echo "Usage: docker_delete_image <image_name_or_id> | all"
        return 1
    fi

    if [ "$1" = "all" ]; then
        sudo docker rmi $(sudo docker images -q)
    else
        sudo docker rmi "$1"
    fi
}

docker_install() {
    sudo apt-get update
    sudo apt-get install -y ca-certificates curl
    sudo install -m 0755 -d /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
    sudo chmod a+r /etc/apt/keyrings/docker.asc

    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      
    sudo apt-get update
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
}

alias venv_iniciar='python3 -m venv .venv'
alias venv_activar='source .venv/bin/activate'
alias venv_desactivar='deactivate'

alias bitnami_reiniciar='sudo /opt/bitnami/ctlscript.sh restart'
alias bitnami_bncert='sudo /opt/bitnami/bncert-tool'
alias bitnami_bashrc='. ~/.bashrc'
alias bitnami_phpini='sudo nano /opt/bitnami/php/etc/php.ini'
alias errorlog='cat  /opt/bitnami/apache2/logs/error_log'
alias clear-errorlog='sudo truncate -s0  /opt/bitnami/apache2/logs/error_log'

