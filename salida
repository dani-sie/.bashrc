========== ESTRUCTURA DE CARPETAS ==========
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega1_docs.yml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega1_k8s.yml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega2.yml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega3.yml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega3_email.yml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_unit.yml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.gitignore
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/.gitignore
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/dictionaries
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/dictionaries/project.xml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/inspectionProfiles
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/inspectionProfiles/profiles_settings.xml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/misc.xml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/modules.xml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/nub.iml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/s202514-proyecto-grupo20.iml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/vcs.xml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.vale.ini
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/LICENSE
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/README.md
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/config.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/README.md
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/components.png
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/components.puml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/deployment.png
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/deployment.puml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/desarrollo.png
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/desarrollo.puml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/entities.png
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/entities.puml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/networks.png
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/networks.puml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-network.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-network.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-network.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-network.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-deployment.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-secret.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-service.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-network.yaml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/makefile
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/.dockerignore
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/.gitignore
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/Dockerfile
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/README.md
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/docker-compose.yml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/poetry.lock
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/pyproject.toml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/models.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/offer_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/assembly.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/config.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/exceptions.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/models
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/models/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/models/offer.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/ports
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/ports/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/ports/offer_repository_port.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/services
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/services/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/services/validation_service.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/base_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/create_offer_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/delete_all_offers_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/delete_offer_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_all_offers_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_filter_offers_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_offer_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_offers_count_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/main.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/routers
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/routers/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/routers/offer_router.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/errors.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/api/offers.postman_collection.json
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/dockerfile
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/adapters
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/adapters/bd
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/adapters/bd/test_offer_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/conftest.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/models
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/models/test_offer.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/ports
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/ports/test_offer_repository_port.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/services
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/services/test_validation_service.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_base_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_create_offer_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_delete_all_offers_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_delete_offer_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_all_offers_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_filter_offers_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_offer_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_offers_count_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/test_assembly.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/test_config.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/Dockerfile
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/README.md
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/poetry.lock
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/pyproject.toml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/models.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/post_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/assembly.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/config.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/models
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/models/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/models/post.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/ports
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/ports/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/ports/post_repository_port.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/base_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/create_post_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/delete_all_post_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/delete_post_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_all_post_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_post_filter_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_post_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/main.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/routers
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/routers/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/routers/post_router.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/errors.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/adapter
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/adapter/test_post_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/api/mocks.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/api/test_api.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/use_cases/test_use_cases.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/Dockerfile
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/README.md
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/poetry.lock
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/pyproject.toml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/models.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/route_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/assembly.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/config.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/models
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/models/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/models/route.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/ports
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/ports/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/ports/route_repository_port.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/base_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/create_route_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/delete_route_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/filter_route_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/get_all_route_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/get_route_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/reset_db_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/update_route_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/main.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/routers
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/routers/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/routers/route_router.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/errors.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/adapter
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/adapter/test_router_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/api/mocks.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/api/test_api.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/use_cases/test_use_cases.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/Dockerfile
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/README.md
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/poetry.lock
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/pyproject.toml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/models.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/score_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/assembly.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/config.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/models
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/models/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/models/score.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/ports
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/ports/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/ports/score_repository_port.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/base_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/create_score_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/delete_score_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/get_filter_score_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/get_score_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/reset_score_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/main.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/routers
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/routers/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/routers/score_router.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/errors.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/adapter
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/adapter/test_post_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/api/mocks.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/api/test_api.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/use_cases/test_use_cases.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/Dockerfile
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/README.md
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/poetry.lock
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/pyproject.toml
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/models.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/user_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/assembly.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/config.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/models
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/models/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/models/user.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/ports
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/ports/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/ports/user_repository_port.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/base_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/count_users_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/create_user_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/generate_token_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/get_user_by_token_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/reset_db_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/update_user_use_case.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/main.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/routers
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/routers/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/routers/user_router.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/errors.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/adapter
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/adapter/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/adapter/test_repository_adapter.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/__init__.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_auth_user.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_create_user.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_get_user_by_token.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_update_user.py
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/use_cases
/home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/use_cases/__init__.py
========== FIN DE ESTRUCTURA ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega1_docs.yml ==========
name: Evaluador Documentación Entrega 1
on: workflow_dispatch
jobs:
  vale:
    name: Check documentation with Vale
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: errata-ai/vale-action@v2.1.1
        with:
          version: 3.12.0
          files: docs
          fail_on_error: true
          filter_mode: nofilter
          reporter: local
  validate:
    needs: vale
    name: Verify documentation diagrams
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Download validation script
        uses: wei/curl@master
        with:
          args: https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/validate_puml_files.py --output validate_puml_files.py
      - name: Validate documentation diagrams
        run: python validate_puml_files.py========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega1_docs.yml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega1_k8s.yml ==========
name: Evaluador Implementación Entrega 1
on: workflow_dispatch
jobs:
  k8stest:
    runs-on: ubuntu-latest
    name: Configuration and API tests on Minikube
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18
        registry-url: https://registry.npmjs.org/
    - name: Create evaluator folder
      run: mkdir -p .evaluator
    - name: Download validate scripts
      run: |
        curl -sSL -o .evaluator/validate_cluster.sh https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/validate_cluster.sh
        chmod +x .evaluator/validate_cluster.sh
        curl -sSL -o .evaluator/validate_networks.sh https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/validate_networks.sh
        chmod +x .evaluator/validate_networks.sh
        curl -sSL -o .evaluator/remove_blockers.sh https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/remove_blockers.sh
        chmod +x .evaluator/remove_blockers.sh
        curl -sSL -o .evaluator/run_tests_k8s.sh https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/run_tests_k8s.sh
        chmod +x .evaluator/run_tests_k8s.sh
        curl -sSL -o .evaluator/block_traffic.yml https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/block_traffic.yml
        curl -sSL -o .evaluator/entrega1_users.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/entrega1_users.json
        curl -sSL -o .evaluator/entrega1_posts.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/entrega1_posts.json
        curl -sSL -o .evaluator/entrega1_offers.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/entrega1_offers.json
        curl -sSL -o .evaluator/entrega1_routes.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega1/entrega1_routes.json
    - name: Set up yq
      uses: mikefarah/yq@v4.30.8
    - name: Save folder env variables
      run: |
        echo "USERS_FOLDER=$(yq '.users_app.folder' config.yaml)" >> $GITHUB_ENV
        echo "USERS_IMAGE=$(yq '.users_app.image_name' config.yaml)" >> $GITHUB_ENV
        echo "USERS_VERSION=$(yq '.users_app.image_tag' config.yaml)" >> $GITHUB_ENV
        echo "POSTS_FOLDER=$(yq '.posts_app.folder' config.yaml)" >> $GITHUB_ENV
        echo "POSTS_IMAGE=$(yq '.posts_app.image_name' config.yaml)" >> $GITHUB_ENV
        echo "POSTS_VERSION=$(yq '.posts_app.image_tag' config.yaml)" >> $GITHUB_ENV
        echo "ROUTES_FOLDER=$(yq '.routes_app.folder' config.yaml)" >> $GITHUB_ENV
        echo "ROUTES_IMAGE=$(yq '.routes_app.image_name' config.yaml)" >> $GITHUB_ENV
        echo "ROUTES_VERSION=$(yq '.routes_app.image_tag' config.yaml)" >> $GITHUB_ENV
        echo "OFFERS_FOLDER=$(yq '.offers_app.folder' config.yaml)" >> $GITHUB_ENV
        echo "OFFERS_IMAGE=$(yq '.offers_app.image_name' config.yaml)" >> $GITHUB_ENV
        echo "OFFERS_VERSION=$(yq '.offers_app.image_tag' config.yaml)" >> $GITHUB_ENV
    - name: Start minikube
      id: minikube
      uses: medyagh/setup-minikube@latest
      with:
        cpus: 2
        memory: 3g
        cni: calico
    - name: Build Users Image
      id: buildUsers
      if: always() && steps.minikube.conclusion == 'success'
      run: |
        if [ -f ./${USERS_FOLDER}/Dockerfile ]; then
          eval $(minikube docker-env)
          docker build -t ${USERS_IMAGE}:${USERS_VERSION} -f ${USERS_FOLDER}/Dockerfile ${USERS_FOLDER}
        else
          echo "✔️ ./${USERS_FOLDER}/Dockerfile is missing, skip users application"
          exit 1
        fi
    - name: Build Posts Image
      id: buildPosts
      if: always() && steps.minikube.conclusion == 'success'
      run: |
        if [ -f ./${POSTS_FOLDER}/Dockerfile ]; then
          eval $(minikube docker-env)
          docker build -t ${POSTS_IMAGE}:${POSTS_VERSION} -f ${POSTS_FOLDER}/Dockerfile ${POSTS_FOLDER}
        else
          echo "✔️ ./${POSTS_FOLDER}/Dockerfile is missing, skip posts application"
          exit 1
        fi
    - name: Build Offers Image
      id: buildOffers
      if: always() && steps.minikube.conclusion == 'success'
      run: |
        if [ -f ./${OFFERS_FOLDER}/Dockerfile ]; then
          eval $(minikube docker-env)
          docker build -t ${OFFERS_IMAGE}:${OFFERS_VERSION} -f ${OFFERS_FOLDER}/Dockerfile ${OFFERS_FOLDER}
        else
          echo "✔️ ./${OFFERS_FOLDER}/Dockerfile is missing, skip offers application"
          exit 1
        fi
    - name: Build Routes Image
      id: buildRoutes
      if: always() && steps.minikube.conclusion == 'success'
      run: |
        if [ -f ./${ROUTES_FOLDER}/Dockerfile ]; then
          eval $(minikube docker-env)
          docker build -t ${ROUTES_IMAGE}:${ROUTES_VERSION} -f ${ROUTES_FOLDER}/Dockerfile ${ROUTES_FOLDER}
        else
          echo "✔️ ./${ROUTES_FOLDER}/Dockerfile is missing, skip routes application"
          exit 1
        fi
    - name: Deploy to minikube
      id: deployMinikube
      if: always() && (steps.buildUsers.conclusion == 'success' || steps.buildOffers.conclusion == 'success' || steps.buildPosts.conclusion == 'success' || steps.buildRoutes.conclusion == 'success')
      run: |
        kubectl apply -f k8s
        minikube service list
    - name: Validate cluster
      if: always() && steps.deployMinikube.conclusion == 'success'
      id: vCluster
      run: .evaluator/validate_cluster.sh
    - name: Validate networks
      if: always() && steps.deployMinikube.conclusion == 'success'
      id: vNetworks
      run: .evaluator/validate_networks.sh
    - name: Execute Posts tests
      if: always() && steps.deployMinikube.conclusion == 'success' && steps.buildPosts.conclusion == 'success'
      id: vPosts
      run: .evaluator/run_tests_k8s.sh posts_app .evaluator
    - name: Unblock apps
      if: always() && steps.deployMinikube.conclusion == 'success'
      continue-on-error: true
      run: .evaluator/remove_blockers.sh
    - name: Execute User tests
      if: always() && steps.deployMinikube.conclusion == 'success' && steps.buildUsers.conclusion == 'success'
      id: vUsers
      run: .evaluator/run_tests_k8s.sh users_app .evaluator
    - name: Unblock apps
      if: always() && steps.deployMinikube.conclusion == 'success'
      continue-on-error: true
      run: .evaluator/remove_blockers.sh
    - name: Execute Offers tests
      if: always() && steps.deployMinikube.conclusion == 'success' && steps.buildOffers.conclusion == 'success'
      id: vOffers
      run: .evaluator/run_tests_k8s.sh offers_app .evaluator
    - name: Unblock apps
      if: always() && steps.deployMinikube.conclusion == 'success'
      continue-on-error: true
      run: .evaluator/remove_blockers.sh
    - name: Execute Routes tests
      if: always() && steps.deployMinikube.conclusion == 'success' && steps.buildRoutes.conclusion == 'success'
      id: vRoutes
      run: .evaluator/run_tests_k8s.sh routes_app .evaluator
    - name: Unblock apps
      if: always() && steps.deployMinikube.conclusion == 'success'
      continue-on-error: true
      run: .evaluator/remove_blockers.sh
    - name: Evaluate results
      if: always()
      run: |
          FAIL=0

          if [ "${{ steps.vCluster.outcome }}" = "success" ]; then
            echo "✅ Cluster verification passed."
          else
            echo "❌ Cluster verification failed"
            FAIL=1
          fi

          if [ "${{ steps.vNetworks.outcome }}" = "success" ]; then
            echo "✅ Networks verification passed."
          else
            echo "❌ Networks verification failed"
            FAIL=1
          fi

          if [ "${{ steps.vUsers.outcome }}" = "success" ]; then
            echo "✅ Users tests verification passed."
          else
            echo "❌ Users tests verification failed"
            FAIL=1
          fi

          if [ "${{ steps.vPosts.outcome }}" = "success" ]; then
            echo "✅ Posts tests verification passed."
          else
            echo "❌ Posts tests verification failed"
            FAIL=1
          fi

          if [ "${{ steps.vOffers.outcome }}" = "success" ]; then
            echo "✅ Offers tests verification passed."
          else
            echo "❌ Offers tests verification failed"
            FAIL=1
          fi

          if [ "${{ steps.vRoutes.outcome }}" = "success" ]; then
            echo "✅ Routes tests verification passed."
          else
            echo "❌ Routes tests verification failed"
            FAIL=1
          fi

          if [ "$FAIL" = "1" ]; then
            echo "❌ One or more steps failed!"
            exit 1
          else
            echo "✅ All steps passed."
          fi========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega1_k8s.yml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega2.yml ==========
name: Evaluador Implementación Entrega 2
on: 
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: 'Select the target environment'
        options:
          - student1
          - student2
          - student3
          - student4
      execution:
        type: choice
        required: true
        description: 'Select the execution mode'
        options:
          - run_all
          - run_rf003
          - run_rf004
          - run_rf005
jobs:
  verify_entrega1:
    runs-on: ubuntu-latest
    name: Verify Entrega 1 still works
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18
        registry-url: https://registry.npmjs.org/
    - name: Create evaluator folder
      run: mkdir -p .evaluator
    - name: Download validate scripts
      run: curl -sSL -o .evaluator/entrega2_verify_entrega1_still_works.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/verify_old_endpoints.json
    - name: Set up yq
      uses: mikefarah/yq@v4.30.8
    - name: Save host path to env variable
      id: saveHostPath
      run: |
        BASE_PATH=$(yq '.url' config.yaml)
        if [ -z "$BASE_PATH" ] || [ "$BASE_PATH" = "null" ]; then
          echo "Deployment url is not set properly"
          exit 1
        fi
        echo "BASE_PATH=$BASE_PATH" >> $GITHUB_ENV
    - name: Test entrega 1 still works
      run: newman run ".evaluator/entrega2_verify_entrega1_still_works.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure
  ########################################################
  # Evaluate RF003
  ########################################################
  # This job evaluates the RF003 requirement by blocking each app and checking if the system behaves
  evaluate_rf003:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    name: Evaluate RF003
    needs: verify_entrega1
    if: success() && (inputs.execution == 'run_all' || inputs.execution == 'run_rf003')
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18
        registry-url: https://registry.npmjs.org/
    - name: Create evaluator folder
      run: mkdir -p .evaluator
    - name: Download tests scripts
      run: |
        curl -sSL -o .evaluator/scale.sh https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/scale.sh
        chmod +x .evaluator/scale.sh
        curl -sSL -o .evaluator/evaluate_rf003.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/evaluate_rf003.json
        curl -sSL -o .evaluator/evaluate_rf003_consistency.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/evaluate_rf003_consistency.json
    - name: Set up yq
      uses: mikefarah/yq@v4.30.8
    - name: Save host path to env variable
      id: saveHostPath
      run: |
        BASE_PATH=$(yq '.url' config.yaml)
        if [ -z "$BASE_PATH" ] || [ "$BASE_PATH" = "null" ]; then
          echo "Deployment url is not set properly"
          exit 1
        fi
        echo "BASE_PATH=$BASE_PATH" >> $GITHUB_ENV
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
      continue-on-error: true
    - name: Set Up K8s cluster connection
      id: setupK8s
      run: |
        aws sts get-caller-identity
        CLUSTER_NAME=$(yq '.cluster_name' config.yaml)
        aws eks update-kubeconfig --region us-east-1 --name ${CLUSTER_NAME}
    - name: Verify RF003 is available
      id: verify_rf003
      if: always() && steps.saveHostPath.outcome == 'success'
      run: |
        HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" -I "$BASE_PATH/rf003/posts")
        if [[ "$HTTP_CODE" == "405" || "$HTTP_CODE" == "200" ]]; then
          echo "✅ RF003 is available at $BASE_PATH/rf003/posts"
        else
          echo "❌ RF003 is not available at $BASE_PATH/rf003/posts"
          exit 1
        fi
    - name: Execute RF003 tests
      id: run_rf003
      if: always() && steps.verify_rf003.outcome == 'success'
      run: |
        newman run ".evaluator/evaluate_rf003.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure
        echo "✅ RF003 tests finished successfully"
    - name: Check RF003 consistency if Users App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf003.outcome == 'success'
      id: check_rf003_users
      run: |
        newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Reset"
        .evaluator/scale.sh users-app 0
        newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --env-var USER_TOKEN="FAKETOKEN" --verbose --insecure --folder "Test RF-003"
    - name: Restore & Validate
      id: restore_rf003_users
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf003.outcome == 'success'
      run: |
        .evaluator/scale.sh users-app 1
        kubectl wait --for=condition=ready pod -l app=users-app --timeout=120s
        sleep 5
        if [ "${{ steps.check_rf003_users.outcome }}" = "success" ]; then
          newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Verificar Consistencia"
        else
          echo "❌ Previous step failed, skipping restore validation"
          exit 1
        fi
    - name: Check RF003 consistency if Routes App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf003.outcome == 'success'
      id: check_rf003_routes
      run: |
        newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Reset"
        .evaluator/scale.sh routes-app 0
        newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "RF-003 Crear publicacion"
    - name: Restore & Validate
      id: restore_rf003_routes
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf003.outcome == 'success'
      run: |
        .evaluator/scale.sh routes-app 1
        kubectl wait --for=condition=ready pod -l app=routes-app --timeout=120s
        sleep 5
        if [ "${{ steps.check_rf003_routes.outcome }}" = "success" ]; then
          newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Verificar Consistencia"
        else
          echo "❌ Previous step failed, skipping restore validation"
          exit 1
        fi
    - name: Check RF003 consistency if Posts App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf003.outcome == 'success'
      id: check_rf003_posts
      run: |
        newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --insecure --folder "Reset"
        .evaluator/scale.sh posts-app 0
        newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "RF-003 Crear publicacion"
    - name: Restore & Validate
      id: restore_rf003_posts
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf003.outcome == 'success'
      run: |
        .evaluator/scale.sh posts-app 1
        kubectl wait --for=condition=ready pod -l app=posts-app --timeout=120s
        sleep 5
        if [ "${{ steps.check_rf003_posts.outcome }}" = "success" ]; then
          newman run ".evaluator/evaluate_rf003_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Verificar Consistencia"
        else
          echo "❌ Previous step failed, skipping restore validation"
          exit 1
        fi
    - name: Evaluate results
      if: always()
      run: |
        FAIL=0

        if [ "${{ steps.run_rf003.outcome }}" = "success" ]; then
          echo "✅ RF003 tests finished successfully"
        else
          echo "❌ RF003 tests failed!"
          FAIL=1
        fi

        if [ "${{ steps.check_rf003_users.outcome }}" = "success" ] && [ "${{ steps.restore_rf003_users.outcome }}" = "success" ]; then
          echo "✅ RF003 is consistent when Users App is unreachable."
        else
          echo "❌ RF003 is not consistent when Users App is unreachable"
          FAIL=1
        fi

        if [ "${{ steps.check_rf003_routes.outcome }}" = "success" ] && [ "${{ steps.restore_rf003_routes.outcome }}" = "success" ]; then
          echo "✅ RF003 is consistent when Routes App is unreachable."
        else
          echo "❌ RF003 is not consistent when Routes App is unreachable"
          FAIL=1
        fi

        if [ "${{ steps.check_rf003_posts.outcome }}" = "success" ] && [ "${{ steps.restore_rf003_posts.outcome }}" = "success" ]; then
          echo "✅ RF003 is consistent when Posts App is unreachable."
        else
          echo "❌ RF003 is not consistent when Posts App is unreachable"
          FAIL=1
        fi

        if [ "$FAIL" = "1" ]; then
          echo "❌ One or more consistency tests failed!"
          exit 1
        else
          echo "✅ All consistency tests passed."
        fi

  ########################################################
  # Evaluate RF004
  ########################################################
  # This job evaluates the RF004 requirement by blocking each app and checking if the system behaves
  evaluate_rf004:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    name: Evaluate RF004
    needs: evaluate_rf003
    if: always() && ((inputs.execution == 'run_all' && needs.evaluate_rf003.result != 'cancelled' && needs.evaluate_rf003.result != 'skipped') || inputs.execution == 'run_rf004')
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18
        registry-url: https://registry.npmjs.org/
    - name: Create evaluator folder
      run: mkdir -p .evaluator
    - name: Download tests scripts
      run: |
        curl -sSL -o .evaluator/scale.sh https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/scale.sh
        chmod +x .evaluator/scale.sh
        curl -sSL -o .evaluator/evaluate_rf004.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/evaluate_rf004.json
        curl -sSL -o .evaluator/evaluate_rf004_consistency.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/evaluate_rf004_consistency.json
    - name: Set up yq
      uses: mikefarah/yq@v4.30.8
    - name: Save host path to env variable
      id: saveHostPath
      run: |
        BASE_PATH=$(yq '.url' config.yaml)
        if [ -z "$BASE_PATH" ] || [ "$BASE_PATH" = "null" ]; then
          echo "Deployment url is not set properly"
          exit 1
        fi
        echo "BASE_PATH=$BASE_PATH" >> $GITHUB_ENV
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
      continue-on-error: true
    - name: Set Up K8s cluster connection
      id: setupK8s
      run: |
        aws sts get-caller-identity
        CLUSTER_NAME=$(yq '.cluster_name' config.yaml)
        aws eks update-kubeconfig --region us-east-1 --name ${CLUSTER_NAME}
    - name: Verify RF004 is available
      id: verify_rf004
      if: always() && steps.saveHostPath.outcome == 'success'
      run: |
        HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" -I "$BASE_PATH/rf004/posts/bf8792d2-3097-11ee-be56-0242ac120002/offers")
        if [[ "$HTTP_CODE" == "405" || "$HTTP_CODE" == "200" ]]; then
          echo "✅ RF004 is available at $BASE_PATH/rf004/posts/xxxxx/offers"
        else
          echo "❌ RF004 is not available at $BASE_PATH/rf004/posts/xxxxx/offers"
          exit 1
        fi
    - name: Execute RF004 tests
      id: run_rf004
      if: always() && steps.verify_rf004.outcome == 'success'
      run: |
        newman run ".evaluator/evaluate_rf004.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure
        echo "✅ RF004 tests finished successfully"
    - name: Check RF004 consistency if Users App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf004.outcome == 'success'
      id: check_rf004_users
      run: |
        newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Reset"
        .evaluator/scale.sh users-app 0
        newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --env-var USER_TOKEN="FAKETOKEN" --env-var POST_ID="bf8792d2-3097-11ee-be56-0242ac120002" --verbose --insecure --folder "Test RF-004"
    - name: Restore & Validate
      id: restore_rf004_users
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf004.outcome == 'success'
      run: |
        .evaluator/scale.sh users-app 1
        kubectl wait --for=condition=ready pod -l app=users-app --timeout=120s
        sleep 5
        if [ "${{ steps.check_rf004_users.outcome }}" = "success" ]; then
          newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Verificar Consistencia"
        else
          echo "❌ Previous step failed, skipping restore validation"
          exit 1
        fi
    - name: Check RF004 consistency if Offers App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf004.outcome == 'success'
      id: check_rf004_offers
      run: |
        newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Reset"
        .evaluator/scale.sh offers-app 0
        newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "RF-004 Crear oferta"
    - name: Restore & Validate
      id: restore_rf004_offers
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf004.outcome == 'success'
      run: |
        .evaluator/scale.sh offers-app 1
        kubectl wait --for=condition=ready pod -l app=offers-app --timeout=120s
        sleep 5
        if [ "${{ steps.check_rf004_offers.outcome }}" = "success" ]; then
          newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Verificar Consistencia"
        else
          echo "❌ Previous step failed, skipping restore validation"
          exit 1
        fi
    - name: Check RF004 consistency if Posts App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf004.outcome == 'success'
      id: check_rf004_posts
      run: |
        newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --insecure --folder "Reset"
        newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --insecure --folder "Crear Recursos"
        .evaluator/scale.sh posts-app 0
        newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --env-var POST_ID="bf8792d2-3097-11ee-be56-0242ac120002" --verbose --insecure --folder "Sesion & RF-004"
    - name: Restore & Validate
      id: restore_rf004_posts
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf004.outcome == 'success'
      run: |
        .evaluator/scale.sh posts-app 1
        kubectl wait --for=condition=ready pod -l app=posts-app --timeout=120s
        sleep 5
        if [ "${{ steps.check_rf004_posts.outcome }}" = "success" ]; then
          newman run ".evaluator/evaluate_rf004_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Verificar Consistencia"
        else
          echo "❌ Previous step failed, skipping restore validation"
          exit 1
        fi
    - name: Evaluate results
      if: always()
      run: |
        FAIL=0

        if [ "${{ steps.run_rf004.outcome }}" = "success" ]; then
          echo "✅ RF004 tests finished successfully"
        else
          echo "❌ RF004 tests failed!"
          FAIL=1
        fi

        if [ "${{ steps.check_rf004_users.outcome }}" = "success" ] && [ "${{ steps.restore_rf004_users.outcome }}" = "success" ]; then
          echo "✅ RF004 is consistent when Users App is unreachable."
        else
          echo "❌ RF004 is not consistent when Users App is unreachable"
          FAIL=1
        fi

        if [ "${{ steps.check_rf004_offers.outcome }}" = "success" ] && [ "${{ steps.restore_rf004_offers.outcome }}" = "success" ]; then
          echo "✅ RF004 is consistent when Offers App is unreachable."
        else
          echo "❌ RF004 is not consistent when Offers App is unreachable"
          FAIL=1
        fi

        if [ "${{ steps.check_rf004_posts.outcome }}" = "success" ] && [ "${{ steps.restore_rf004_posts.outcome }}" = "success" ]; then
          echo "✅ RF004 is consistent when Posts App is unreachable."
        else
          echo "❌ RF004 is not consistent when Posts App is unreachable"
          FAIL=1
        fi

        if [ "$FAIL" = "1" ]; then
          echo "❌ One or more consistency tests failed!"
          exit 1
        else
          echo "✅ All consistency tests passed."
        fi

  ########################################################
  # Evaluate RF005
  ########################################################
  # This job evaluates the RF005 requirement by blocking each app and checking if the system behaves
  evaluate_rf005:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    name: Evaluate RF005
    needs: evaluate_rf004
    if: always() && ((inputs.execution == 'run_all' && needs.evaluate_rf004.result != 'cancelled' && needs.evaluate_rf004.result != 'skipped') || inputs.execution == 'run_rf005')
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18
        registry-url: https://registry.npmjs.org/
    - name: Create evaluator folder
      run: mkdir -p .evaluator
    - name: Download tests scripts
      run: |
        curl -sSL -o .evaluator/scale.sh https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/scale.sh
        chmod +x .evaluator/scale.sh
        curl -sSL -o .evaluator/evaluate_rf005.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/evaluate_rf005.json
        curl -sSL -o .evaluator/evaluate_rf005_consistency.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega2/evaluate_rf005_consistency.json
    - name: Set up yq
      uses: mikefarah/yq@v4.30.8
    - name: Save host path to env variable
      id: saveHostPath
      run: |
        BASE_PATH=$(yq '.url' config.yaml)
        if [ -z "$BASE_PATH" ] || [ "$BASE_PATH" = "null" ]; then
          echo "Deployment url is not set properly"
          exit 1
        fi
        echo "BASE_PATH=$BASE_PATH" >> $GITHUB_ENV
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
      continue-on-error: true
    - name: Set Up K8s cluster connection
      id: setupK8s
      run: |
        aws sts get-caller-identity
        CLUSTER_NAME=$(yq '.cluster_name' config.yaml)
        aws eks update-kubeconfig --region us-east-1 --name ${CLUSTER_NAME}
    - name: Verify RF005 is available
      id: verify_rf005
      if: always() && steps.saveHostPath.outcome == 'success'
      run: |
        HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" -I "$BASE_PATH/rf005/posts/bf8792d2-3097-11ee-be56-0242ac120002")
        if [[ "$HTTP_CODE" == "405" || "$HTTP_CODE" == "200" ]]; then
          echo "✅ RF005 is available at $BASE_PATH/rf005/posts"
        else
          echo "❌ RF005 is not available at $BASE_PATH/rf005/posts"
          exit 1
        fi
    - name: Execute RF005 tests
      id: run_rf005
      if: always() && steps.verify_rf005.outcome == 'success'
      run: |
        newman run ".evaluator/evaluate_rf005.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure
        echo "✅ RF005 tests finished successfully"
    - name: Check RF005 consistency if Users App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf005.outcome == 'success'
      id: check_rf005_users
      run: |
        newman run ".evaluator/evaluate_rf005_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Reset"
        .evaluator/scale.sh users-app 0
        newman run ".evaluator/evaluate_rf005_consistency.json" --env-var BASE_PATH=$BASE_PATH --env-var USER_TOKEN="FAKETOKEN" --env-var POST_ID="bf8792d2-3097-11ee-be56-0242ac120002" --verbose --insecure --folder "Test RF-005"
    - name: Restore & Validate
      id: restore_rf005_users
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf005.outcome == 'success'
      run: |
        .evaluator/scale.sh users-app 1
        kubectl wait --for=condition=ready pod -l app=users-app --timeout=120s
        sleep 5
    - name: Check RF005 consistency if Posts App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf005.outcome == 'success'
      id: check_rf005_posts
      run: |
        newman run ".evaluator/evaluate_rf005_consistency.json" --env-var BASE_PATH=$BASE_PATH --insecure --folder "Reset"
        newman run ".evaluator/evaluate_rf005_consistency.json" --env-var BASE_PATH=$BASE_PATH --insecure --folder "Crear Recursos"
        .evaluator/scale.sh posts-app 0
        newman run ".evaluator/evaluate_rf005_consistency.json" --env-var BASE_PATH=$BASE_PATH --env-var POST_ID="bf8792d2-3097-11ee-be56-0242ac120002" --verbose --insecure --folder "Sesion & RF-005"
    - name: Restore & Validate
      id: restore_rf005_posts
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf005.outcome == 'success'
      run: |
        .evaluator/scale.sh posts-app 1
        kubectl wait --for=condition=ready pod -l app=posts-app --timeout=120s
        sleep 5
    - name: Check RF005 consistency if Offers App is unreachable
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf005.outcome == 'success'
      id: check_rf005_offers
      run: |
        newman run ".evaluator/evaluate_rf005_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Reset"
        newman run ".evaluator/evaluate_rf005_consistency.json" --env-var BASE_PATH=$BASE_PATH --insecure --folder "Crear Recursos"
        .evaluator/scale.sh offers-app 0
        newman run ".evaluator/evaluate_rf005_consistency.json" --env-var BASE_PATH=$BASE_PATH --verbose --insecure --folder "Post & Sesion & RF-005"
    - name: Restore & Validate
      id: restore_rf005_offers
      if: always() && steps.setupK8s.outcome == 'success' && steps.verify_rf005.outcome == 'success'
      run: |
        .evaluator/scale.sh offers-app 1
        kubectl wait --for=condition=ready pod -l app=offers-app --timeout=120s
        sleep 5
    - name: Evaluate results
      if: always()
      run: |
        FAIL=0

        if [ "${{ steps.run_rf005.outcome }}" = "success" ]; then
          echo "✅ RF005 tests finished successfully"
        else
          echo "❌ RF005 tests failed!"
          FAIL=1
        fi

        if [ "${{ steps.check_rf005_users.outcome }}" = "success" ] && [ "${{ steps.restore_rf005_users.outcome }}" = "success" ]; then
          echo "✅ RF005 is consistent when Users App is unreachable."
        else
          echo "❌ RF005 is not consistent when Users App is unreachable"
          FAIL=1
        fi

        if [ "${{ steps.check_rf005_offers.outcome }}" = "success" ] && [ "${{ steps.restore_rf005_offers.outcome }}" = "success" ]; then
          echo "✅ RF005 is consistent when Offers App is unreachable."
        else
          echo "❌ RF005 is not consistent when Offers App is unreachable"
          FAIL=1
        fi

        if [ "${{ steps.check_rf005_posts.outcome }}" = "success" ] && [ "${{ steps.restore_rf005_posts.outcome }}" = "success" ]; then
          echo "✅ RF005 is consistent when Posts App is unreachable."
        else
          echo "❌ RF005 is not consistent when Posts App is unreachable"
          FAIL=1
        fi

        if [ "$FAIL" = "1" ]; then
          echo "❌ One or more consistency tests failed!"
          exit 1
        else
          echo "✅ All consistency tests passed."
        fi========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega2.yml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega3.yml ==========
name: Evaluador Implementación Entrega 3
on: workflow_dispatch
jobs:
  evaluate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - name: Create evaluator folder
        run: mkdir -p .evaluator
      - name: Download validate scripts
        run: curl -sSL -o .evaluator/entrega3.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega3/entrega3.json
      - name: Set up yq
        uses: mikefarah/yq@v4.30.8
      - name: Save host path to env variable
        run: echo "BASE_PATH=$(yq '.url' config.yaml)" >> $GITHUB_ENV
      - name: Test entrega 3 - Reset
        run: newman run ".evaluator/entrega3.json" --env-var BASE_PATH=$BASE_PATH --verbose --folder "Reset" --insecure
      - name: Test entrega 3 - RF-007 Verificar identidad
        run: newman run ".evaluator/entrega3.json" --env-var BASE_PATH=$BASE_PATH --verbose --folder "RF-007 Verificar identidad" --insecure
        if: always()
      - name: Test entrega 3 works - RF-006 Tarjetas
        run: newman run ".evaluator/entrega3.json" --env-var BASE_PATH=$BASE_PATH --verbose --folder "RF-006 Tarjetas" --insecure
        if: always()========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega3.yml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega3_email.yml ==========
name: Evaluador Implementación Entrega 3 con Email
on:
  workflow_dispatch:
    inputs:
      email:
        description: 'Email'
        required: true
jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - name: Create evaluator folder
        run: mkdir -p .evaluator
      - name: Download validate scripts
        run: curl -sSL -o .evaluator/entrega3.json https://raw.githubusercontent.com/MISW-4301-Desarrollo-Apps-en-la-Nube/proyecto-monitor/main/entrega3/entrega3.json
      - name: Set up yq
        uses: mikefarah/yq@v4.30.8
      - name: Save host path to env variable
        run: echo "BASE_PATH=$(yq '.url' config.yaml)" >> $GITHUB_ENV
      - name: Test entrega 3 works
        run: newman run ".evaluator/entrega3.json" --env-var BASE_PATH=$BASE_PATH --env-var EMAIL=${{ github.event.inputs.email }} --verbose --insecure========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_entrega3_email.yml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_unit.yml ==========
name: Evaluador Pruebas Unitarias
# Actualice este pipeline si usted decide trabajar en una tecnología diferente a Python.
on:
  workflow_dispatch:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  posts_app:
    runs-on: ubuntu-latest
    name: Verify posts_app
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testpost_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 2.1.1
      - name: Run linter checkers in posts_app
        run: make lintcheck DIR=posts_app
      - name: Export Postgres env vars
        run: |
          echo "POSTGRES_USER=testuser" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=testpass" >> $GITHUB_ENV
          echo "POSTGRES_DB=testpost_db" >> $GITHUB_ENV
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
      - name: Run unit tests
        run: make unittest DIR=posts_app
  offers_app:
    runs-on: ubuntu-latest
    name: Verify offers_app
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testoffer_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 2.1.1
      - name: Export Postgres env vars
        run: |
          echo "POSTGRES_USER=testuser" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=testpass" >> $GITHUB_ENV
          echo "POSTGRES_DB=testoffer_db" >> $GITHUB_ENV
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
      - name: Run unit tests
        run: make unittest DIR=offers_app
  routes_app:
    runs-on: ubuntu-latest
    name: Verify routes_app
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testroute_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 2.1.1
      - name: Run linter checkers in pots_app
        run: make lintcheck DIR=routes_app
      - name: Export Postgres env vars
        run: |
          echo "POSTGRES_USER=testuser" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=testpass" >> $GITHUB_ENV
          echo "POSTGRES_DB=testroute_db" >> $GITHUB_ENV
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
      - name: Run unit tests
        run: make unittest DIR=routes_app

  users_app:
    runs-on: ubuntu-latest
    name: Verify users_app
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testusers_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 2.1.1
      - name: Run linter checkers in users_app
        run: make lintcheck DIR=users_app
      - name: Export Postgres env vars
        run: |
          echo "POSTGRES_USER=testuser" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=testpass" >> $GITHUB_ENV
          echo "POSTGRES_DB=testusers_db" >> $GITHUB_ENV
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
      - name: Run unit tests
        run: make unittest DIR=users_app

  score_app:
    runs-on: ubuntu-latest
    name: Verify score_app
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testusers_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 2.1.1
      - name: Run linter checkers in score_app
        run: make lintcheck DIR=score_app
      - name: Export Postgres env vars
        run: |
          echo "POSTGRES_USER=testuser" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=testpass" >> $GITHUB_ENV
          echo "POSTGRES_DB=testusers_db" >> $GITHUB_ENV
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
      - name: Run unit tests
        run: make unittest DIR=score_app========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.github/workflows/ci_evaluador_unit.yml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.gitignore ==========
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore 
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer, 
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Cursor
#  Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#  exclude from AI features like autocomplete and code analysis. Recommended for sensitive data
#  refer to https://docs.cursor.com/context/ignore-files
.cursorignore
.cursorindexingignore

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.gitignore ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/.gitignore ==========
# Default ignored files
/shelf/
/workspace.xml
# Editor-based HTTP Client requests
/httpRequests/
# Datasource local storage ignored files
/dataSources/
/dataSources.local.xml
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/.gitignore ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/dictionaries/project.xml ==========
<component name="ProjectDictionaryState">
  <dictionary name="project">
    <words>
      <w>verificar</w>
    </words>
  </dictionary>
</component>========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/dictionaries/project.xml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/inspectionProfiles/profiles_settings.xml ==========
<component name="InspectionProjectProfileManager">
  <settings>
    <option name="USE_PROJECT_PROFILE" value="false" />
    <version value="1.0" />
  </settings>
</component>========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/inspectionProfiles/profiles_settings.xml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/misc.xml ==========
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="Black">
    <option name="sdkName" value="Python 3.11 (s202514-proyecto-grupo20)" />
  </component>
  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 virtualenv at ~/Library/Caches/pypoetry/virtualenvs/users-app-p37SWCmG-py3.11" project-jdk-type="Python SDK" />
</project>========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/misc.xml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/modules.xml ==========
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectModuleManager">
    <modules>
      <module fileurl="file://$PROJECT_DIR$/.idea/s202514-proyecto-grupo20.iml" filepath="$PROJECT_DIR$/.idea/s202514-proyecto-grupo20.iml" />
    </modules>
  </component>
</project>========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/modules.xml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/nub.iml ==========
<?xml version="1.0" encoding="UTF-8"?>
<module type="PYTHON_MODULE" version="4">
  <component name="NewModuleRootManager">
    <content url="file://$MODULE_DIR$" />
    <orderEntry type="jdk" jdkName="Python 3.12" jdkType="Python SDK" />
    <orderEntry type="sourceFolder" forTests="false" />
  </component>
  <component name="PyDocumentationSettings">
    <option name="format" value="PLAIN" />
    <option name="myDocStringFormat" value="Plain" />
  </component>
  <component name="TestRunnerService">
    <option name="PROJECT_TEST_RUNNER" value="py.test" />
  </component>
</module>========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/nub.iml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/s202514-proyecto-grupo20.iml ==========
<?xml version="1.0" encoding="UTF-8"?>
<module type="PYTHON_MODULE" version="4">
  <component name="NewModuleRootManager">
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/users_app" isTestSource="false" />
      <excludeFolder url="file://$MODULE_DIR$/.venv" />
    </content>
    <orderEntry type="jdk" jdkName="Python 3.11 virtualenv at ~/Library/Caches/pypoetry/virtualenvs/users-app-p37SWCmG-py3.11" jdkType="Python SDK" />
    <orderEntry type="sourceFolder" forTests="false" />
  </component>
  <component name="PyDocumentationSettings">
    <option name="format" value="PLAIN" />
    <option name="myDocStringFormat" value="Plain" />
  </component>
  <component name="TestRunnerService">
    <option name="PROJECT_TEST_RUNNER" value="py.test" />
  </component>
</module>========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/s202514-proyecto-grupo20.iml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/vcs.xml ==========
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="VcsDirectoryMappings">
    <mapping directory="" vcs="Git" />
  </component>
</project>========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.idea/vcs.xml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.vale.ini ==========
StylesPath = styles

MinAlertLevel = error

Packages = Google

[*.{md}]
# ^ This section applies to only Markdown files.
#
# You can change (or add) file extensions here
# to apply these settings to other file types.
#
# For example, to apply these settings to both
# Markdown and reStructuredText:
#
# [*.{md,rst}]
BasedOnStyles = Vale, Google
Vale.Spelling = NO========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/.vale.ini ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/LICENSE ==========
MIT License

Copyright (c) 2025 MISW-4301 - Aplicaciones nativas en la nube

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/LICENSE ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/README.md ==========
# proyecto-base  

## Link video entrega 1
https://drive.google.com/file/d/1waPHGSGcrwvHqv9uevznEYiC4UMnucGo/view?usp=sharing

## Tabla de contenido

- [proyecto-base](#proyecto-base)
  - [Tabla de contenido](#tabla-de-contenido)
  - [Estructura del Proyecto](#estructura-del-proyecto)
  - [Archivo de configuración](#archivo-de-configuración)
  - [Estructura de cada aplicación](#estructura-de-cada-aplicación)

## Estructura del Proyecto

```
.
├── github/
│   └── workflows/          # Pipelines del repositorio
├── k8s/                    # Archivos para despliegue en k8s
├── docs/                   # Archivos de documentación técnica
├── <aplicación>            # Archivos de aplicación. Una carpeta por cada una.
├── vale.ini                # Configuración para Vale. NO MODIFICAR
├── config.yaml             # Configuración del repositorio. Modifíquelo como primera tarea
├── Makefile                # Scripts para evaluación. NO MODIFICAR las reglas actuales
└── README.md               # Este archivo
```

1. **github/workflows**: los archivos en esta carpeta no se pueden modificar a excepción del archivo `ci_evaluador_unit.yml` el cuál debe ser utilizado para agregar un job por cada aplicación.
   * `ci_evaluador_entrega1_k8s.yml` verifica configuración de k8s y ejecuta pruebas sobre cada aplicación. Su modificación anula su entrega.
   * `ci_evaluador_entrega1_docs.yml` verifica que los diagramas de la documentación contengan los componentes esperados, hace una revisión gramática sobre el contenido del markdown. Su modificación anula su entrega.
   * `ci_evaluador_unit.yml` ejecuta pruebas unitarias. Modifique este archivo agregando un job por aplicación.
2. **k8s**: Archivos de configuración y despliegue de sus aplicaciones. Puede crear un archivo por aplicación o todos en un mismo archivo. La decisión de la estructura es suya.
3. **docs**: Archivos de la documentación técnica. Debe existir un archivo `README.md` para que se genere la página de la documentación en `github pages` y la carpeta `diagrams` con los archivos `puml` en esta. La estructura de la documentación es decisión del equipo.
4. **<aplicación>**: Una carpeta por cada aplicación. A continuación se habla en más detalle de su estructura.
5. **makefile**: El archivo `makefile` es utilizado por los pipelines evaluadores, **NO** modifique los scripts que encontrará allí, pero si puede agregar nuevos si así lo requiere.

## Archivo de configuración

El archivo `config.yaml` es el archivo más importante en el repositorio. Este archivo contiene la configuración que se usa en los pipelines para evaluar su entrega y se define la calificación de cada miembro del equipo. Si este archivo no está correctamente configurado, su entrega no puede ser calificada y será de cero.

## Estructura de cada aplicación

Cada aplicación debe seguir las siguientes reglas:

1. Cada aplicación debe estar en una carpeta independente y construida en el lenguaje de su preferencia. En este repositorio encontrará cómo ejemplo la aplicación `pets_app` construida en `Python`, `Poetry`, `FastAPI` y `Pytest`.
2. Dentro de cada carpeta de aplicación debe estar el archivo `Dockerfile` que permite la ejecución de la aplicación. Este archivo debe estar en la raiz de la carpeta y no en otras ubicaciones.
3. El nombre de la carpeta es decisión libre del equipo pero debe estar registrado en el archivo `config.yaml` o de lo contrario no podrá ser evaluado.
4. El nombre y tag de cada imagen deben ser agregadas en el archivo `config.yaml` y deben corresponder a los mismos que se usan en la configuración de despliegue de k8s. Si la configuración de este archivo no es correcta, su evaluación fallará y la nota será de cero.

## Instalación y Configuración

### **Prerrequisitos**
- Python 3.11
- Poetry
- Docker
- Minikube
- kubectl

### **Inicio Rápido**

#### 1. **Desarrollo Local (por microservicio)**
```bash
# Navegar al microservicio, en este caso se hace el ejemplo con users_app

cd users_app/

# Instalar dependencias
poetry install

# Activar entorno virtual
poetry env activate

# Ejecutar el servicio esto se hace desde cada microservicio
poetry run uvicorn entrypoints.api.main:app --reload

# Ejecutar pruebas -- Testing con cobertura

poetry  run pytest --cov=src -v -s --cov-fail-under=70 --cov-report term-missing

```
#### 2. **Despliegue en Minikube**
```bash

# Variables de entorno
Actualizar las variables de entorno que se encuentran dentro de los archivos secrets para la configuración de K8

# Iniciar Minikube
minikube start

# Configurar Docker environment
eval $(minikube docker-env)

# Build imágenes (en cada directorio de servicio)
docker build -t users-app:tag .
docker build -t posts-app:tag .
docker build -t routes-app:tag .
docker build -t offers-app:tag .

# Desplegar en Kubernetes (desde raíz del proyecto)
# Asegurar de configurar los secretos y configmaps si es necesario
kubectl apply -f k8s/

# Acceder a los servicios
minikube service users-app-service
minikube service posts-app-service
minikube service routes-app-service
minikube service offers-app-service
```
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/README.md ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/config.yaml ==========
team:
   name: Cloud Coders
   members:
      - user: s.betancourth@uniandes.edu.co
        percentage: 100
      - user: y.arcea@uniandes.edu.co
        percentage: 100
      - user:  ma.pinzons1@uniandes.edu.co
        percentage: 100
      - user: dani-sie@uniandes.edu.co
        percentage: 100
board: https://github.com/orgs/MISW-4301-Desarrollo-Apps-en-la-Nube/projects/258
docs: https://bookish-bassoon-mr77vjo.pages.github.io/

offers_app:
  folder: offers_app
  image_name: offers-app
  image_tag: 1.0.0
  authors:
    - y.arcea@uniandes.edu.co
users_app:
  folder: users_app
  image_name: users-app
  image_tag: 1.0.0
  authors:
    - ma.pinzons1@uniandes.edu.co

routes_app:
  folder: routes_app
  image_name: routes-app
  image_tag: 1.0.0
  authors:
    - dani-sie@uniandes.edu.co

posts_app:
  folder: posts_app
  image_name: posts-app
  image_tag: 1.0.0
  authors:
    - s.betancourth@uniandes.edu.co

score_app:
  folder: score_app
  image_name: score-app
  image_tag: 1.0.0
  authors:
    - s.betancourth@uniandes.edu.co

========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/config.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/README.md ==========

## Equipo de Desarrollo - Cloud Coders

### ** Link video Entrega 1 ** 
https://drive.google.com/file/d/1waPHGSGcrwvHqv9uevznEYiC4UMnucGo/view?usp=sharing

### **Líder del Grupo**
**Sebastian Betancourth** - Team Lead & Backend Developer

### **Miembros del Equipo**

| Miembro | Rol | GitHub | Email | Especialización |
|---------|-----|---------|-------|-----------------|
| **Sebastian Betancourth Zapata** | Desarrollador Backend | [@sebastian-blip](https://github.com/sebastian-blip) | s.betancourth@uniandes.edu.co | Arquitectura de Software, DevOps, Cloud (AWS) |
| **Alejandra Pinzon** | Automatizador de Pruebas | [@AlejaRck](https://github.com/AlejaRck) | ma.pinzons1@uniandes.edu.co | Backend, Automatización, DevOps |
| **Daniel Sierra Rincon** | Arquitecto de Integraciones | [@dani-sie](https://github.com/dani-sie) | dani-sie@uniandes.edu.co | Microservicios, Kubernetes, CI/CD |
| **Adriana Arce** | Frontend Developer | [@YuelyArce](https://github.com/YuelyArce) | y.arcea@uniandes.edu.co | IA, Analítica de Datos, Arquitectura |

### **Reglas del Equipo**
1. **Comunicación clara y respetuosa** utilizando canales acordados (Slack, correo, WhatsApp)
2. **Decisiones por consenso** del grupo para temas importantes
3. **Cumplimiento de plazos** establecidos para las tareas asignadas
4. **Reuniones semanales** de seguimiento y planeación
5. **Documentación actualizada** y disponible para todos los miembros

*Proyecto desarrollado como parte del curso de desarrollo De Aplicaciones Nativas en la Nube -  Universidad de los Andes - 2025*

---

## Tecnologías Seleccionadas

### **Lenguajes y Frameworks**
- **Python 3.11** - Lenguaje principal de desarrollo
- **FastAPI** - Framework web asíncrono y de alto rendimiento
- **Tortoise ORM** - ORM asíncrono para Python

### **Base de Datos**
- **PostgreSQL** - Base de datos relacional principal

### **Gestión de Dependencias y Entorno**
- **Poetry** - Gestión moderna de dependencias y empaquetado
- **Pyenv** - Gestión de versiones de Python
- **Virtual Environment** - Aislamiento de entornos de desarrollo

### **Testing y Calidad**
- **Pytest** - Framework de testing con soporte para fixtures y plugins
- **Coverage.py** - Medición de cobertura de código (mínimo 70%)
- **Pytest-cov** - Plugin de cobertura para Pytest
- **Pytest-asyncio** - Soporte para testing de código asíncrono

### **Containerización y Orquestación**
- **Docker** - Containerización de aplicaciones
- **Kubernetes** - Orquestación de contenedores
- **Minikube** - Cluster local de Kubernetes para desarrollo

### **Herramientas de Desarrollo**
- **Uvicorn** - Servidor ASGI para FastAPI
- **Postman** - Testing y documentación de APIs
- **Git** - Control de versiones

### **Arquitectura y Patrones**
- **Arquitectura Hexagonal** - Separación clara de capas
- **Microservicios** - Arquitectura distribuida
- **RESTful APIs** - Interfaces de programación

---

## Tabla de Contenido - Vistas de Arquitectura

- [Equipo de Desarrollo](#equipo-de-desarrollo---cloud-coders)
- [Tecnologías Seleccionadas](#tecnologías-seleccionadas)
- [Vistas Arquitectónicas](#vistas-arquitectónicas)
- [Arquitectura del Sistema](#arquitectura-del-sistema)
  - [Microservicios](#microservicios)
  - [Estructura de Cada Microservicio](#estructura-de-carpetas)
- [Instalación y Configuración](#instalación-y-configuración)
  - [Prerrequisitos](#prerrequisitos)
  - [Inicio Rápido](#inicio-rápido)
    - [Desarrollo Local](#1-desarrollo-local-por-microservicio)
    - [Despliegue en Minikube](#2-despliegue-en-minikube)
- [Guía de Desarrollo](#guía-de-desarrollo)
  - [Flujo de Desarrollo](#flujo-de-desarrollo)
  - [Principios Arquitectónicos](#principios-arquitectónicos)
- [Enlaces Útiles](#enlaces-útiles)

### **Vistas Arquitectónicas**

| Vista                    | Descripción                                  | Diagrama                                          | 
|--------------------------|----------------------------------------------|---------------------------------------------------|
| **Vista de Información** | Modelo de datos y relaciones entre entidades | [Diagrama ER](diagrams/entities.png)              | 
| **Vista de Despliegue**  | Infraestructura, contenedores y Kubernetes   | [Diagrama de Despliegue](diagrams/deployment.png) | 
| **Vista de Desarrollo**  | Estructura del proyecto y tecnologías        | [Diagrama de Desarrollo](diagrams/desarrollo.png) | 
| **Vista de Funcional**   | Estructura de componentes                    | [Diagrama de componets](diagrams/components.png)  |  
| **Vista de Network**     | Red definida con su base de datos.           | [Diagrama de Networt](diagrams/networks.png)      |  

---

## Arquitectura del Sistema

### **Microservicios**
El sistema está compuesto por 4 microservicios independientes:

| Servicio | Puerto | Descripción  Responsable |
|----------|--------|-------------|------------|
| **users-app** | 30000 | Gestión de usuarios y autenticación | Alejandra P. |
| **posts-app** | 30001 | Publicaciones de solicitudes de envío |  Sebatian B. |
| **routes-app** | 30002 | Gestión de trayectos y vuelos |  Daniel S. |
| **offers-app** | 30003 | Ofertas de transportistas | Adriana A. |

### **Estructura de Carpetas**

```
.
├── github/
│   └── workflows/          # Pipelines del repositorio
├── k8s/                    # Archivos para despliegue en k8s
├── docs/                   # Archivos de documentación técnica
├── <aplicación>  
          └── ├── src/
              │   ├── domain/             # Capa de dominio
              │   │   ├── models/         # Modelos de dominio
              │   │   ├── ports/          # Puertos (interfaces)
              │   │   └── use_cases/      # Casos de uso
              │   ├── adapters/           # Capa de adaptadores
              │   │   └── database/       # Adaptador de base de datos
              │   └── entrypoints/        # Puntos de entrada
              │       └── api/            # API REST
              ├── tests/                  # Pruebas
              ├── Dockerfile              # Configuración de Docker
              ├── pyproject.toml          # Configuración de Poetry
              └── README.md               # Este archivo
├── vale.ini                # Configuración para Vale. NO MODIFICAR
├── config.yaml             # Configuración del repositorio. Modifíquelo como primera tarea
├── Makefile                # Scripts para evaluación. NO MODIFICAR las reglas actuales
└── README.md               # Este archivo
```
---

## Instalación y Configuración

### **Prerrequisitos**
- Python 3.11
- Poetry
- Docker
- Minikube
- kubectl

### **Inicio Rápido**

#### 1. **Desarrollo Local (por microservicio)**
```bash
# Navegar al microservicio en este caso se hace el ejemplo con users_app
cd users_app/

# Instalar dependencias
poetry install

# Activar entorno virtual
poetry env activate

# Ejecutar servidor de desarrollo
poetry run uvicorn entrypoints.api.main:app --reload

# Ejecutar pruebas -- Testing con cobertura (desde raíz del proyecto)

poetry run pytest --cov=src -v -s --cov-fail-under=70 --cov-report term-missing

```
#### 2. **Despliegue en Minikube**
```bash
# Iniciar Minikube
minikube start

# Configurar Docker environment
eval $(minikube docker-env)

# Build imágenes (en cada directorio de servicio)
docker build -t users-app:tag .
docker build -t posts-app:tag .
docker build -t routes-app:tag .
docker build -t offers-app:tag .

# Desplegar en Kubernetes (desde raíz del proyecto)
kubectl apply -f k8s/

# Acceder a los servicios
minikube service users-app-service
minikube service posts-app-service
minikube service routes-app-service
minikube service offers-app-service
```

## Guía de Desarrollo

### Flujo de Desarrollo

1. **Crear rama** para nueva funcionalidad (`feature/<nombre>`)
2. **Desarrollar** siguiendo la arquitectura hexagonal
3. **Escribir tests** con cobertura ≥70%
4. **Ejecutar linting y formateo** (`black`, `isort`, `ruff`)
5. **Crear Pull Request** con revisión de código

---

## Principios Arquitectónicos

- **Separación de responsabilidades** por capas
- **Inversión de dependencias** usando puertos y adaptadores
- **Testing** como ciudadano de primera clase
- **API-First design**
- **Microservicios autónomos** e independientes

---

## Enlaces Útiles

- [Documentación de FastAPI](https://fastapi.tiangolo.com/)
- [Guía de Tortoise ORM](https://tortoise-orm.readthedocs.io/)
- [Poetry Documentation](https://python-poetry.org/docs/)
- [Kubernetes Documentation](https://kubernetes.io/docs/)
- [Pytest Documentation](https://docs.pytest.org/)

---

📅 Última actualización: 23 de Agosto, 2025  
🏷️ Versión: 1.0.0  
👥 Desarrollado por: Cloud Coders Team  
🎓 Universidad: Universidad de los Andes  
📚 Curso: Desarrollo De Aplicaciones Nativas en la Nube - 2025

========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/README.md ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/components.puml ==========
@startuml vista funcional
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Arquitectura de Microservicios

Person(user, "Users", "Usuario del sistema")

System_Boundary(env, "env") {
    component users_app
    component posts_app
    component offers_app
    component routes_app

    Component users_db
    Component posts_db
    Component offers_db
    Component routes_db
}

Rel_D(user, users_app, "Interactúa con", "HTTPS")
Rel_D(user, posts_app, "Interactúa con", "HTTPS")
Rel_D(user, offers_app, "Interactúa con", "HTTPS")
Rel_D(user, routes_app, "Interactúa con", "HTTPS")

Rel_D(users_app, users_db, "Lee/Escribe", "PostgreSQL")
Rel_D(posts_app, posts_db, "Lee/Escribe", "PostgreSQL")
Rel_D(offers_app, offers_db, "Lee/Escribe", "PostgreSQL")
Rel_D(routes_app, routes_db, "Lee/Escribe", "PostgreSQL")

SHOW_LEGEND()
@enduml========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/components.puml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/deployment.puml ==========
@startuml Kubernetes Deployment
skinparam backgroundColor #FFFFFF
skinparam actor {
    BackgroundColor #EEEEEE
    BorderColor #000000
}
skinparam component {
    BackgroundColor #90EE90
    BorderColor #006400
}
skinparam node {
    BackgroundColor #ADD8E6
    BorderColor #000080
}
skinparam database {
    BackgroundColor #87CEEB
    BorderColor #0000FF
}
skinparam storage {
    BackgroundColor #F5F5DC
    BorderColor #8B4513
}
skinparam rectangle {
    BackgroundColor #FFFACD
    BorderColor #000000
}

actor User

rectangle "k8s Cluster" {

    ' Capa de servicios
    component "users-app-service" as uas
    component "posts-app-service" as pas
    component "offers-app-service" as oas
    component "routes-app-service" as ras

    ' Pods de aplicación
    frame "users-app" as up {
        component "users_app"
    }
    frame "posts-app" as pp {
        component "posts_app"
    }
    frame "offers-app" as op {
        component "offers_app"
    }
    frame "routes-app" as rp {
        component "routes_app"
    }

    ' Servicios de DB
    component "users-db-service" as uds
    component "posts-db-service" as pds
    component "offers-db-service" as ods
    component "routes-db-service" as rds

    ' Pods de DB
    frame "users-db" as udp {
        database "users_db"
    }
    frame "posts-db" as pdp {
        database "posts_db"
    }
    frame "offers-db" as odp {
        database "offers_db"
    }
    frame "routes-db" as rdp {
        database "routes_db"
    }

    ' Volúmenes
    artifact "users-db-volumen" as udv
    artifact "posts-db-volumen" as pdv
    artifact "offers-db-volumen" as odv
    artifact "routes-db-volumen" as rdv
}

rectangle "Convenciones" as legend {
    actor "Usuario"
    node "Contenedor"
    rectangle "Pod - k8s"
    component "Componente"
    node "Service - k8s"
    database "Base de datos"
    storage "Volumen"
    note right : ---> Comunicación externa\n---> Comunicación interna
}

' Conexiones usuario
User -.-> uas : HTTP
User -.-> pas : HTTP
User -.-> oas : HTTP
User -.-> ras : HTTP

' Servicios a aplicaciones
uas --> users_app
pas --> posts_app
oas --> offers_app
ras --> routes_app

' Aplicaciones a servicios DB
users_app --> uds
posts_app --> pds
offers_app --> ods
routes_app --> rds

' Servicios DB a databases
uds --> users_db
pds --> posts_db
ods --> offers_db
rds --> routes_db

' Databases a volúmenes
users_db --> udv
posts_db --> pdv
offers_db --> odv
routes_db --> rdv

@enduml========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/deployment.puml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/desarrollo.puml ==========
@startuml Estructura del Proyecto
skinparam backgroundColor #FFFFFF
skinparam folder {
    BackgroundColor #E8F4FD
    BorderColor #2E86AB
}
skinparam file {
    BackgroundColor #F0F8FF
    BorderColor #4169E1
}
skinparam note {
    BackgroundColor #FFFACD
    BorderColor #DDD
}

title Vista de Desarrollo - Estructura de Carpetas

folder "proyecto-raiz/" {

    folder "users_app/" {
        folder "src/" {
            folder "domain/" {
                folder "models/"
                folder "ports/"
                folder "use_cases/"
            }
            folder "adapters/" {
                folder "database/"
            }
            folder "entrypoints/" {
                folder "api/"
            }
        }
        folder "tests/"
        file "Dockerfile"
        file "pyproject.toml"
        file "README.md"
    }

    folder "posts_app/" {
        note right : Misma estructura\nque users_app/
    }

    folder "routes_app/" {
        note right : Misma estructura\nque users_app/
    }

    folder "offers_app/" {
        note right : Misma estructura\nque users_app/
    }

    folder "k8s/" {
        file "deployments.yaml"
        file "services.yaml"
        file "configmaps.yaml"
        file "secrets.yaml"
        file "ingress.yaml"
        file "namespaces.yaml"
    }
}

note as stack_tech
    **🛠️ Stack Tecnológico**

    **Backend Framework:**
    Python + FastAPI + Tortoise ORM

    **Gestión de Dependencias:**
    Poetry + Pyenv

    **Base de Datos:**
    PostgreSQL

    **Testing:**
    Pytest + Coverage (≥70%)

    **Containerización:**
    Docker + Kubernetes

    **Desarrollo Local:**
    Minikube + kubectl

    **API Testing:**
    Postman
end note

note as commands
    **📝 Comandos Principales**

    **🧪 Testing:**
    `poetry --directory=${DIR} install`
    `poetry --directory=${DIR} run pytest --cov=src -v -s --cov-fail-under=70 --cov-report term-missing`

    **🚀 Ejecución Local:**
    `poetry install`
    `poetry env activate`
    `poetry run uvicorn entrypoints.api.main:app --reload`

    **☸️ Deploy K8s:**
    `minikube start`
    `eval $(minikube docker-env)`
    `docker build -t servicio-app:tag .`
    `kubectl apply -f .`
    `minikube service servicio-app-service`
end note

@enduml========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/desarrollo.puml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/entities.puml ==========
@startuml Vista de Información
skinparam backgroundColor #FFFFFF
skinparam entity {
    BackgroundColor #F0F0F0
    BorderColor #000000
    FontSize 10
}
skinparam rectangle {
    BackgroundColor #FFFACD
    BorderColor #000000
    FontSize 12
}

title Vista de información

rectangle "Convenciones" as legend {
    entity "Entidad" as ent_legend
    legend -> ent_legend : Relación
}

entity "users" as users {
    * id : UUID
    --
    username : string
    email : string
    phoneNumber : string (opcional)
    dni : string (opcional)
    fullName : string (opcional)
    password : string (cifrado)
    salt : string
    token : string
    status : enum
    expireAt : datetime
    createdAt : datetime
    updatedAt : datetime
}

entity "routes" as routes {
    * id : UUID
    --
    flightId : string (único)
    sourceAirportCode : string
    sourceCountry : string
    destinyAirportCode : string
    destinyCountry : string
    bagCost : integer
    plannedStartDate : datetime
    plannedEndDate : datetime
    createdAt : datetime
    updatedAt : datetime
}

entity "posts" as posts {
    * id : UUID
    --
    routeId : UUID (FK)
    userId : UUID (FK)
    expireAt : datetime
    createdAt : datetime
}

entity "offers" as offers {
    * id : UUID
    --
    postId : UUID (FK)
    userId : UUID (FK)
    description : string (140 chars)
    size : enum (LARGE|MEDIUM|SMALL)
    fragile : boolean
    offer : number (dólares)
    createdAt : datetime
}

entity "Score" as Score {
    * id : UUID
    --
    offerId : UUID (FK)
    rating : integer
    comment : string
    createdAt : datetime
}

' Posicionamiento para mantener la estructura original
users ||--|| Post : "1"
Route ||--|| Post : "1"
Post ||--o{ Offer : "*"
Offer ||--|| Score : "1"

@enduml========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/entities.puml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/networks.puml ==========
@startuml Despliegue Microservicios
skinparam backgroundColor #FFFFFF
skinparam cloud {
    BackgroundColor #E6F3FF
    BorderColor #0066CC
}
skinparam rectangle {
    BackgroundColor #F0F8FF
    BorderColor #4169E1
}
skinparam node {
    BackgroundColor #90EE90
    BorderColor #006400
}
skinparam component {
    BackgroundColor #FFE4E1
    BorderColor #DC143C
}
skinparam database {
    BackgroundColor #87CEEB
    BorderColor #000080
}
skinparam note {
    BackgroundColor #FFFACD
    BorderColor #000000
}

title Diagrama de Despliegue - Microservicios

cloud "Internet" {
    [Usuarios externos]
}

note as legend
    **Convenciones**

    📦 Pod - k8s

    ——→ Comunicación externa
    ——→ Comunicación interna

    🔲 Política de red

    ⚙️ Service - k8s

    🔵 NodePort - k8s
end note

rectangle "k8s Cluster" {

    rectangle "users-network" as un #LightGreen {
        node "NodePort\nPort: 30000" as unp
        component "users-app-service" as uas

        frame "users-app" as up {
            component "users_app" as ua
        }

        component "users-db-service" as uds

        frame "users-db" as udp {
            component "users_db" as udb
        }
    }

    rectangle "posts-network" as pn #LightBlue {
        node "NodePort\nPort: 30001" as pnp
        component "posts-app-service" as pas

        frame "posts-app" as pp {
            component "posts_app" as pa
        }

        component "posts-db-service" as pds

        frame "posts-db" as pdp {
            component "posts_db" as pdb
        }
    }

    rectangle "routes-network" as rn #LightYellow {
        node "NodePort\nPort: 30002" as rnp
        component "routes-app-service" as ras

        frame "routes-app" as rp {
            component "routes_app" as ra
        }

        component "routes-db-service" as rds

        frame "routes-db" as rdp {
            component "routes_db" as rdb
        }
    }

    rectangle "offers-network" as on #LightPink {
        node "NodePort\nPort: 30003" as onp
        component "offers-app-service" as oas

        frame "offers-app" as op {
            component "offers_app" as oa
        }

        component "offers-db-service" as ods

        frame "offers-db" as odp {
            component "offers_db" as odb
        }
    }
}

' Conexiones externas
[Usuarios externos] -.-> unp : HTTP:30000
[Usuarios externos] -.-> pnp : HTTP:30001
[Usuarios externos] -.-> rnp : HTTP:30002
[Usuarios externos] -.-> onp : HTTP:30003

' Conexiones users-network
unp --> uas : 80
uas --> ua : 3000
ua --> uds : 5432
uds --> udb : 5432

' Conexiones posts-network
pnp --> pas : 80
pas --> pa : 3000
pa --> pds : 5432
pds --> pdb : 5432

' Conexiones routes-network
rnp --> ras : 80
ras --> ra : 3000
ra --> rds : 5432
rds --> rdb : 5432

' Conexiones offers-network
onp --> oas : 80
oas --> oa : 3000
oa --> ods : 5432
ods --> odb : 5432

@enduml========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/docs/diagrams/networks.puml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: offers-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offers-app
  template:
    metadata:
      labels:
        app: offers-app
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z offers-db-service 5432; do sleep 2; done;']
      containers:
      - name: offers-app
        image: offers-app:1.0.0
        ports:
        - containerPort: 8000
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: offers-app-secret
                key: POSTGRES_USER
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: offers-app-secret
                key: POSTGRES_HOST
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: offers-app-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: offers-app-secret
                key: POSTGRES_DB
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: offers-app-secret
type: Opaque
stringData:
  POSTGRES_USER: "offerssuser"
  POSTGRES_PASSWORD: "offerspassword"
  POSTGRES_DB: "offers_db"
  POSTGRES_HOST: "offers-db-service"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: offers-app-service
spec:
  selector:
    app: offers-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    nodePort: 30003
  type: NodePort========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-app-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: offers-db
  labels:
    app: offers-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offers-db
  template:
    metadata:
      labels:
        app: offers-db
    spec:
      containers:
      - name: offers-db
        image: postgres:16
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: offers-db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: offers-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: offers-db-secret
              key: POSTGRES_DB
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-storage
        emptyDir: {}========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: offers-db-secret
type: Opaque
stringData:
  POSTGRES_USER: "offerssuser"
  POSTGRES_PASSWORD: "offerspassword"
  POSTGRES_DB: "offers_db"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: offers-db-service
spec:
  selector:
    app: offers-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  type: ClusterIP========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-db-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-network.yaml ==========
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: offers-network
spec:
  podSelector:
    matchLabels:
      app: offers-db
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: offers-app
    ports:
    - protocol: TCP
      port: 5432
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: offers-db
    ports:
    - protocol: TCP
      port: 5432
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/offers-network.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: posts-app
  template:
    metadata:
      labels:
        app: posts-app
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z posts-db-service 5432; do sleep 2; done;']
      containers:
      - name: posts-app
        image: posts-app:1.0.0
        ports:
        - containerPort: 8000
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: posts-app-secret
                key: POSTGRES_USER
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: posts-app-secret
                key: POSTGRES_HOST
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: posts-app-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: posts-app-secret
                key: POSTGRES_DB

========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: posts-app-secret
type: Opaque
stringData:
  POSTGRES_USER: "postsuser"
  POSTGRES_PASSWORD: "postspassword"
  POSTGRES_DB: "posts_db"
  POSTGRES_HOST: "posts-db-service"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: posts-app-service
spec:
  selector:
    app: posts-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    nodePort: 30001
  type: NodePort========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-app-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts-db
  labels:
    app: posts-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: posts-db
  template:
    metadata:
      labels:
        app: posts-db
    spec:
      containers:
      - name: posts-db
        image: postgres:16
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: posts-db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: posts-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: posts-db-secret
              key: POSTGRES_DB
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-storage
        emptyDir: {}========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: posts-db-secret
type: Opaque
stringData:
  POSTGRES_USER: "postsuser"
  POSTGRES_PASSWORD: "postspassword"
  POSTGRES_DB: "posts_db"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: posts-db-service
spec:
  selector:
    app: posts-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  type: ClusterIP========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-db-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-network.yaml ==========
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: posts-network
spec:
  podSelector:
    matchLabels:
      app: posts-db
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: posts-app
    ports:
    - protocol: TCP
      port: 5432
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: posts-db
    ports:
    - protocol: TCP
      port: 5432
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/posts-network.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: routes-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: routes-app
  template:
    metadata:
      labels:
        app: routes-app
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z routes-db-service 5432; do sleep 2; done;']
      containers:
      - name: routes-app
        image: routes-app:1.0.0
        ports:
        - containerPort: 8000
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: routes-app-secret
                key: POSTGRES_USER
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: routes-app-secret
                key: POSTGRES_HOST
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: routes-app-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: routes-app-secret
                key: POSTGRES_DB
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: routes-app-secret
type: Opaque
stringData:
  POSTGRES_USER: "routessuser"
  POSTGRES_PASSWORD: "routespassword"
  POSTGRES_DB: "routes_db"
  POSTGRES_HOST: "routes-db-service"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: routes-app-service
spec:
  selector:
    app: routes-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    nodePort: 30002
  type: NodePort========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-app-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: routes-db
  labels:
    app: routes-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: routes-db
  template:
    metadata:
      labels:
        app: routes-db
    spec:
      containers:
      - name: routes-db
        image: postgres:16
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: routes-db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: routes-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: routes-db-secret
              key: POSTGRES_DB
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-storage
        emptyDir: {}========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: routes-db-secret
type: Opaque
stringData:
  POSTGRES_USER: "routessuser"
  POSTGRES_PASSWORD: "routespassword"
  POSTGRES_DB: "routes_db"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: routes-db-service
spec:
  selector:
    app: routes-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  type: ClusterIP========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-db-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-network.yaml ==========
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: routes-network
spec:
  podSelector:
    matchLabels:
      app: routes-db
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: routes-app
    ports:
    - protocol: TCP
      port: 5432
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: routes-db
    ports:
    - protocol: TCP
      port: 5432
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/routes-network.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: score-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: score-app
  template:
    metadata:
      labels:
        app: score-app
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z score-db-service 5432; do sleep 2; done;']
      containers:
      - name: score-app
        image: score-app:1.0.0
        ports:
        - containerPort: 8000
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: score-app-secret
                key: POSTGRES_USER
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: score-app-secret
                key: POSTGRES_HOST
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: score-app-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: score-app-secret
                key: POSTGRES_DB
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: score-app-secret
type: Opaque
stringData:
  POSTGRES_USER: "scoreuser"
  POSTGRES_PASSWORD: "scorepassword"
  POSTGRES_DB: "score_db"
  POSTGRES_HOST: "score-db-service"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: score-app-service
spec:
  selector:
    app: score-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    nodePort: 30004
  type: NodePort========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-app-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: score-db
  labels:
    app: score-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: score-db
  template:
    metadata:
      labels:
        app: score-db
    spec:
      containers:
      - name: score-db
        image: postgres:16
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: score-db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: score-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: score-db-secret
              key: POSTGRES_DB
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-storage
        emptyDir: {}========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: score-db-secret
type: Opaque
stringData:
  POSTGRES_USER: "scoreuser"
  POSTGRES_PASSWORD: "scorepassword"
  POSTGRES_DB: "score_db"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: score-db-service
spec:
  selector:
    app: score-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  type: ClusterIP========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-db-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-network.yaml ==========
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: score-network
spec:
  podSelector:
    matchLabels:
      app: score-db
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: score-app
    ports:
    - protocol: TCP
      port: 5432
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: score-db
    ports:
    - protocol: TCP
      port: 5432
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/score-network.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-app
  template:
    metadata:
      labels:
        app: users-app
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z users-db-service 5432; do sleep 2; done;']
      containers:
      - name: users-app
        image: users-app:1.0.0
        ports:
        - containerPort: 8000
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: users-app-secret
                key: POSTGRES_USER
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: users-app-secret
                key: POSTGRES_HOST
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: users-app-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: users-app-secret
                key: POSTGRES_DB
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: users-app-secret
type: Opaque
stringData:
  POSTGRES_USER: "userssuser"
  POSTGRES_PASSWORD: "userspassword"
  POSTGRES_DB: "users-db"
  POSTGRES_HOST: "users-db-service"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: users-app-service
spec:
  selector:
    app: users-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    nodePort: 30000
  type: NodePort========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-app-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-deployment.yaml ==========
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-db
  labels:
    app: users-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-db
  template:
    metadata:
      labels:
        app: users-db
    spec:
      containers:
      - name: users-db
        image: postgres:16
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: users-db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: users-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: users-db-secret
              key: POSTGRES_DB
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-storage
        emptyDir: {}========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-deployment.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-secret.yaml ==========
apiVersion: v1
kind: Secret
metadata:
  name: users-db-secret
type: Opaque
stringData:
  POSTGRES_USER: "userssuser"
  POSTGRES_PASSWORD: "userspassword"
  POSTGRES_DB: "users-db"========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-secret.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-service.yaml ==========
apiVersion: v1
kind: Service
metadata:
  name: users-db-service
spec:
  selector:
    app: users-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  type: ClusterIP========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-db-service.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-network.yaml ==========
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: users-network
spec:
  podSelector:
    matchLabels:
      app: users-db
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: users-app
    ports:
    - protocol: TCP
      port: 5432
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: users-db
    ports:
    - protocol: TCP
      port: 5432
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/k8s/users-network.yaml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/makefile ==========
# Los pasos en este archivo pueden ser usados para su pipeline de Unit testing
# en el caso que usted decida usar Python.

.PHONY: lintfix lintcheck unittest

lintfix:
	poetry --directory=${DIR} install
	poetry --directory=${DIR} run black .
	poetry --directory=${DIR} run isort . --profile black
	poetry --directory=${DIR} run bandit -c pyproject.toml -r .
	poetry --directory=${DIR} run ruff check --fix

lintcheck:
	poetry --directory=${DIR} install
	poetry --directory=${DIR} run black --check .
	poetry --directory=${DIR} run isort --check . --profile black
	poetry --directory=${DIR} run bandit -c pyproject.toml -r .
	poetry --directory=${DIR} run ruff check

unittest:
	poetry --directory=${DIR} install
	poetry --directory=${DIR} run pytest --cov=src -v -s --cov-fail-under=70 --cov-report term-missing

# Agregue nuevas a partir de esta línea========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/makefile ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/.dockerignore ==========
# Version control
.git
.gitignore

# Python
__pycache__
*.pyc
*.pyo
*.pyd
.Python
env
pip-log.txt
pip-delete-this-directory.txt
.tox
.coverage
.coverage.*
.pytest_cache
nosetests.xml
coverage.xml
*.cover
*.log
.DS_Store

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Documentation
README.md
docs/
*.md

# Testing
tests/
.pytest_cache/

# Build artifacts
build/
dist/
*.egg-info/

# Logs
*.log
logs/

# Temporary files
*.tmp
*.temp

# Docker
Dockerfile*
docker-compose*
.dockerignore
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/.dockerignore ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/.gitignore ==========
./docker-compose.yml========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/.gitignore ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/Dockerfile ==========
# Use Python 3.11 slim image as base
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==2.1.4

# Configure Poetry: Don't create virtual env, install deps to system python
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=0 \
    POETRY_CACHE_DIR=/tmp/poetry_cache \
    POETRY_VIRTUALENVS_CREATE=false

# Create non-root user for security
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid appuser --shell /bin/bash --create-home appuser

# Set work directory
WORKDIR /offers_app

# Copy poetry files
COPY pyproject.toml ./
COPY poetry.lock ./

# Install dependencies
RUN poetry lock && \
    poetry install --only=main --no-root && \
    rm -rf $POETRY_CACHE_DIR

# Copy application code
COPY src/ ./src/

# Change ownership of the app directory to appuser
RUN chown -R appuser:appuser /offers_app
# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

ENV PYTHONPATH=/offers_app/src
# Run the application using poetry
CMD ["poetry", "run", "uvicorn", "entrypoints.api.main:app", "--host", "0.0.0.0", "--port", "8000"]
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/Dockerfile ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/README.md ==========
# Offers App - Microservicio de Ofertas

Este proyecto es una aplicación FastAPI que implementa una arquitectura hexagonal (también conocida como puertos y adaptadores) para gestionar ofertas de transporte. La aplicación se ejecuta haciendo uso de docker y puede ser ejecutada directamente en su ambiente o haciendo uso de k8s.

Este microservicio forma parte de una plataforma de transporte donde los usuarios pueden crear ofertas para transportar paquetes, especificando detalles como el tamaño, si es frágil, y el precio ofrecido.

Haciendo uso de este proyecto usted entenderá:

- Cómo construir una aplicación siguiendo los principios SOLID con tecnologías como Python, FastAPI, Poetry y Pytest.
- Cómo ejecutar la aplicación por medio de Docker siguiendo buenas prácticas como son: stages y rootless.
- Cómo hacer uso de postman para automatizar pruebas de API que pueden ser ejecutadas en cualquier ambiente.
- Cómo ejecutar la aplicación en minikube para posteriormente ser ejecutada en ambientes productivos de k8s.
- Cómo configurar pipelines en github que ejecute pruebas unitarias, linters en Python, y pruebas con newman sobre docker y minikube.

## Tabla de contenido

- [Offers App - Microservicio de Ofertas](#offers-app---microservicio-de-ofertas)
  - [Tabla de contenido](#tabla-de-contenido)
  - [Requisitos](#requisitos)
  - [Estructura del Proyecto](#estructura-del-proyecto)
    - [Carpeta src](#carpeta-src)
      - [Domain](#domain)
      - [Adapters](#adapters)
      - [Entrypoints](#entrypoints)
      - [Configuración y ensamble](#configuración-y-ensamble)
      - [Errores](#errores)
    - [Configuración](#configuración)
  - [Ejecución de la aplicación](#ejecución-de-la-aplicación)
    - [1. Instale las dependencias:](#1-instale-las-dependencias)
    - [2. Ejecución](#2-ejecución)
  - [Ejecutar en Docker](#ejecutar-en-docker)
  - [Ejecutar en minikube](#ejecutar-en-minikube)
  - [API Endpoints](#api-endpoints)
  - [Pet Model](#pet-model)
  - [Pruebas](#pruebas)
    - [Unitarias](#unitarias)
    - [Integración](#integración)
  - [Pipelines](#pipelines)
  - [Cómo contribuir](#cómo-contribuir)
  - [Licencia](#licencia)
  - [Autor](#autor)

## Requisitos

- Python 3.11
- Poetry version 2.1.1
- Docker
- Postman

## Estructura del Proyecto

```
.
├── src/
│   ├── domain/             # Capa de dominio
│   │   ├── models/         # Modelos de dominio
│   │   ├── ports/          # Puertos (interfaces)
│   │   └── use_cases/      # Casos de uso
│   ├── adapters/           # Capa de adaptadores
│   │   └── bd/             # Adaptador de base de datos
│   └── entrypoints/        # Puntos de entrada
│       └── api/            # API REST
├── tests/                  # Pruebas
├── Dockerfile              # Configuración de Docker
├── pyproject.toml          # Configuración de Poetry
└── README.md               # Este archivo
```

### Carpeta src

Esta carpeta contiene el código y la lógica de la aplicación que permite exponer el API y puede integrar otras aplicaciones o componentes si lo requiere.

#### Domain

Carpeta con la lógica de la aplicación. Si tu aplicación está diseñada para cocinar una receta, esta carpeta es la cocina. 

- `/domain/models`: Contiene las clases que representan las entidades necesarias para los casos de uso de la aplicación. Comúnmente estos modelos son usados para el almacenamiento en la base de datos, pero no deben confundirse, estas clases no deben estar acopladas a una base de datos en específico y solo representan las entidades que se van a manipular en los casos de uso. Será responsabilidad de los adaptadores transformarlas y almacenarlas en una determinada base de datos. En este ejemplo los modelos estarán soportados haciendo uso de pydantic por facilidad de validación e integración con FastAPI.

```python
# domain/models/offer.py
class Offer(BaseModel):
    """Offer domain model."""
    id: UUID
    post_id: str
    user_id: str
    description: str
    size: SizeEnum
    fragile: bool
    offer: Decimal
    created_at: datetime
```

- `/domain/ports`: Contiene las interfaces que habilitan la interacción con componentes o lógica externa. Estas clases no son implementaciones sino únicamente el "template" que deben seguir nuestras integraciones. Esto permite desacoplar la implementación, habilitando que se pueda reemplazar fácilmente los componentes con los que se integra la aplicación, siempre y cuando se respecte la definición de las interfaces. En este proyecto encontrará que se hace uso de una clase llamada [Repository](https://martinfowler.com/eaaCatalog/repository.html) la cual sigue un patrón que es comúnmente usado cuando el puerto es usado para almacenamiento de una entidad. Sin embargo, los puertos pueden seguir otros patrones para interactuar con otros componentes, por ejemplo notificaciones.

```python
# domain/ports/offer_repository_port.py
class OfferRepositoryPort(ABC):
    """Offer repository interface."""

    @abstractmethod
    async def create(self, offer: OfferCreate) -> Dict:
        """Create a new offer."""
        pass

    @abstractmethod
    async def get_by_id(self, offer_id: str) -> Optional[Offer]:
        """Get an offer by ID."""
        pass
    ...

# another example
class NotificationDeliveryPort(ABC):
    """Designed to send notifications."""

    @abstractmethod
    def send(self, payload:Dict[str, str], title:str) -> bool:
        """Sends a notification."""
        pass
    ...
```

- `/domain/use_cases`: Contiene los casos de uso de la aplicación, almacenar, consultar, modificar, borrar o cualquier otra funcionalidad. Todos los casos de usos deben compartir el mismo contrato. Para ello deben extender de una interfaz que define como es el comportamiento de los casos de uso, esta interfaz resulta ser clave para permitir que los entrypoints de la aplicación puedan interactuar con los casos de uso sin generar acoplamiento.

```python
# domain/use_cases/base_use_case.py
class BaseUseCase(ABC):
    """Base use case class."""

    @abstractmethod
    async def execute(self, *args, **kwargs):
        """Execute the use case."""
        pass

# domain/use_cases/create_offer_use_case.py
class CreateOfferUseCase(BaseUseCase):
    """Use case for creating an offer."""

    def __init__(self, offer_repository: OfferRepositoryPort):
        self.offer_repository = offer_repository

    async def execute(self, offer: OfferCreate) -> Dict:
        """Create a new offer."""
        return await self.offer_repository.create(offer)
```
#### Adapters

En la carpeta adapters se encuentra la implementación de los puertos definidos en la carpeta de ports. En este proyecto de ejemplo se encuentra una implementación de un almacenamiento en memoria, pero usted puede seguir el mismo schema si quiere realizar una implementación para almacenar en una base de datos.

```python
# adapters/bd/offer_repository_adapter.py
class DBOfferRepositoryAdapter(OfferRepositoryPort):
    """Database implementation of OfferRepository."""

    async def create(self, offer_create: OfferCreate) -> Dict:
        """Create a new offer."""
        offer_db = Offer(
            post_id=offer_create.postId,
            user_id=offer_create.userId,
            description=offer_create.description,
            size=offer_create.size.value,
            fragile=offer_create.fragile,
            offer=offer_create.offer
        )
        await offer_db.save()
        return {
            "id": offer_db.id,
            "userId": str(offer_db.user_id),
            "createdAt": offer_db.created_at.isoformat()
        }
    ...

# Another example
# Disclaimer: We suggest using Async Await if you plan to use SQL databases
class InMemoryOfferRepositoryAdapter(OfferRepositoryPort):
    """In memory implementation of OfferRepository."""

    def __init__(self):
        self.offers = {}

    async def create(self, offer_create: OfferCreate) -> Dict:
        offer_id = str(uuid.uuid4())
        # Implementation details...
    ...
```

#### Entrypoints

Contiene los archivos que servirán como punto de acceso a la aplicación; también podrían considerarse como puertos de ingreso. En esta carpeta se encuentran las funciones o clases que permiten interactuar con los casos de uso. La implementación dependerá principalmente de la tecnología utilizada, cuando se trabaja con FastAPI normalmente se habla de Routers, mientras en Flask se encuentran los Blueprints.

En este proyecto se hace uso de routers donde se definen las rutas y los métodos HTTP que se soportan. Si usted quiere agregar nuevas rutas, debe agregar otro archivo router o modificar el actual siguiendo el mismo patrón.

```python
router = APIRouter(prefix="/offers")

@router.get("/ping", response_class=PlainTextResponse)
def health_check():
    """Healthcheck endpoint."""
    return "pong"
```

Posteriormente debe agregar el router a la aplicación en el archivo `main.py`

```python
app = FastAPI(title=Settings.app_name)
app.include_router(offer_router)
```

#### Configuración y ensamble

- `config.py`: En este archivo se encuentran las funciones que permiten leer las variables de ambiente o constantes que se usan en todo el proyecto. Es una buena práctica consolidar el manejo de las variables de ambiente y constantes a un solo archivo, facilita las pruebas y la mantenibilidad.
- `assembly.py`: Este archivo contiene las funciones que realizan la inyección de dependencias. Como ha podido ver en todos los ejemplos previos, las asociaciones entre las clases y funciones se realizan por medio de interfaces, ninguna clase conoce o usa una implementación en particular. Es en este paquete donde se instancian las implementaciones que se van a usar y las cuales son usadas por cada router:

```python
# assembly.py
repository: DBOfferRepositoryAdapter = DBOfferRepositoryAdapter()

def build_create_offer_use_case() -> BaseUseCase:
    """Get create offer use case."""
    return CreateOfferUseCase(repository)
...

# entrypoints/api/routers/offer_router.py
@router.post("/", response_model=OfferResponse)
async def create_offer(
    offer: OfferCreate, use_case: BaseUseCase = Depends(build_create_offer_use_case)
):
    """Create a new offer."""
    result = await use_case.execute(offer)
    return OfferResponse(**result)
```

#### Errores

En el proyecto se encuentra el archivo `errors.py` el cual está diseñado para albergar todas las clases de excepciones personalizadas que se creen en el proyecto. Recomendamos crear sus propias clases de excepción para tener mayor control del flujo del programa.

```python
class OfferNotFoundError(Exception):
    """Exception raised when an offer is not found."""
    pass
```

Haciendo uso de un handler de excepciones personalizado, puede indicarle a FastAPI que responda un error en particular cuando reciba este tipo de excepciones en un router.

```python
app = FastAPI(title=Settings.app_name)

@app.exception_handler(OfferNotFoundError)
def offer_not_found_exception_handler(request: Request, exc: OfferNotFoundError):
    return JSONResponse(
        status_code=404,
        content={"detail": str(exc)},
    )
...
```

### Configuración

Este proyecto hace uso de [poetry](https://python-poetry.org/) para la gestión de dependencias y configuración de algunas librerías usadas en el proyecto. Encontrará la configuración en el archivo `pyproject.toml` el cuál ya es un estandar para la configuración de proyectos en Python. [Documentación](https://packaging.python.org/en/latest/guides/writing-pyproject-toml/).

> Recomendación: procure evitar otros archivos de configuración como el `setup.cfg`, `setup.py`, `<archivo>.ini` u otros, con el fin de mejorar la mantenibilidad de nuestro código y evitar errores por conflictos de configuración.

Algunos puntos que tener en cuenta en la configuración:

- Agregue todas las dependencias que se usarán en producción en el group por defecto `[tool.poetry.dependencies]`. Esto sucederá por defecto al usar el comando add de poetry: 
```bash
poetry add <libreria>
```
- Agregue las dependencias de desarrollo en el grupo `dev`. Para esto defina el grupo cuando agregue la librería:
```bash
poetry add <librería> --group dev
```
- El archivo contiene las reglas de configuración de linters y herramientas de análisis habilitadas en el proyecto. `[tool.isort]`, `[tool.bandit]`, `[tool.pydoclint]`, `[tool.ruff]`. Si desea modificar las reglas o conocer más de ellas puede revisar los links en cada sección.
- El archivo contiene las reglas de configuración para la ejecución de pruebas con pytest. En la sección `[tool.pytest.ini_options]` puede modificar o agregar nuevas reglas de pruebas. Así como las variables de ambiente que se usarán en las pruebas.

Siempre que modifique el archivo, recomendamos regenerar el archivo de poetry.lock usando:
```bash
poetry lock
```

## Ejecución de la aplicación

### 1. Instale las dependencias:
```bash
poetry install

# Si no existe el archivo poetry.lock ejecute primero
# poetry lock
```
Poetry instalará todas las dependencias en un ambiente virtual gestionado por Poetry.

### 2. Ejecución

Dado que todas las dependencias están instaladas en un ambiente virtualizado y gestionado por Poetry es necesario correr el servidor haciendo uso de Poetry:

#### En macOS/Linux:
```bash
PYTHONPATH=$(pwd)/src poetry run uvicorn entrypoints.api.main:app --host 0.0.0.0 --port 9000
```

#### En Windows (PowerShell):
```powershell
$env:PYTHONPATH = "$(Get-Location)\src"; poetry run uvicorn entrypoints.api.main:app --host 0.0.0.0 --port 9000
```

#### En Windows (Command Prompt):
```cmd
set PYTHONPATH=%cd%\src && poetry run uvicorn entrypoints.api.main:app --host 0.0.0.0 --port 9000
```

El API estará disponible en `http://localhost:9000`

Cargue el archivo `offers_app/tests/api/offers.postman_collection.json` en su postman y reemplace la variable `baseUrl` por la url.

Ejecute las pruebas y verifique que se completa correctamente.

## Ejecutar en Docker

#### En macOS/Linux:
```bash
APP_VERSION = ... # use la misma versión del documento pyproject.toml
APP_NAME = ... # use el mismo definido en el documento pyproject.toml
docker build --rm --platform linux/amd64 -t ${APP_NAME}:${APP_VERSION} -f Dockerfile --target runner --label version=${APP_VERSION} .

docker run --platform linux/amd64 -p 9000:9000 ${APP_NAME}:${APP_VERSION}
```

#### En Windows (PowerShell):
```powershell
$APP_VERSION = "..." # use la misma versión del documento pyproject.toml
$APP_NAME = "..." # use el mismo definido en el documento pyproject.toml
docker build --rm --platform linux/amd64 -t "${APP_NAME}:${APP_VERSION}" -f Dockerfile --target runner --label version=${APP_VERSION} .

docker run --platform linux/amd64 -p 9000:9000 "${APP_NAME}:${APP_VERSION}"
```

#### En Windows (Command Prompt):
```cmd
set APP_VERSION=... rem use la misma versión del documento pyproject.toml
set APP_NAME=... rem use el mismo definido en el documento pyproject.toml
docker build --rm --platform linux/amd64 -t %APP_NAME%:%APP_VERSION% -f Dockerfile --target runner --label version=%APP_VERSION% .

docker run --platform linux/amd64 -p 9000:9000 %APP_NAME%:%APP_VERSION%
```

## Ejecutar en minikube

Después de haber creado la imagen haciendo uso de docker, ejecute:

#### En macOS/Linux:
```bash
minikube start --cpus=2 --memory=3g --cni calico

#make mkbuild
minikube image load ${APP_NAME}:${APP_VERSION}

kubectl apply -f k8s
minikube service offers-service
```

#### En Windows (PowerShell):
```powershell
minikube start --cpus=2 --memory=3g --cni calico

# make mkbuild
minikube image load "${APP_NAME}:${APP_VERSION}"

kubectl apply -f k8s
minikube service offers-service
```

#### En Windows (Command Prompt):
```cmd
minikube start --cpus=2 --memory=3g --cni calico

rem make mkbuild
minikube image load %APP_NAME%:%APP_VERSION%

kubectl apply -f k8s
minikube service offers-service
```

Minikube asignará un puerto para que pueda acceder a su servicio. Puede usarlo en su browser o en postman.

## API Endpoints

- `POST /offers/` - Crea una nueva oferta
- `GET /offers/{offer_id}` - Obtiene una oferta específica
- `GET /offers/` - Obtiene todas las ofertas (con filtros opcionales)
- `DELETE /offers/{offer_id}` - Elimina una oferta
- `POST /offers/reset` - Elimina todas las ofertas
- `GET /offers/count` - Obtiene el conteo de ofertas
- `GET /offers/ping` - Health check endpoint

Accede a la documentación después de ejecutar la aplicación:
- Swagger UI: `http://localhost:9000/docs`

## Offer Model

Una oferta tiene los siguientes campos:
- `id`: UUID (auto-generated)
- `post_id`: String - ID del post al que pertenece la oferta
- `user_id`: String - ID del usuario que crea la oferta
- `description`: String - Descripción de la oferta
- `size`: Enum (LARGE, MEDIUM, SMALL) - Tamaño del paquete
- `fragile`: Boolean - Indica si el paquete es frágil
- `offer`: Decimal - Monto de la oferta
- `created_at`: DateTime (auto-generated)

### OfferCreate Model (Request)
- `postId`: String
- `userId`: String
- `description`: String
- `size`: SizeEnum
- `fragile`: Boolean
- `offer`: Decimal

### OfferResponse Model (Response)
- `id`: UUID
- `userId`: String
- `createdAt`: DateTime

## Pruebas

El proyecto contempla dos paquetes de pruebas: pruebas unitarias y pruebas de API (Integración).

### Unitarias

Cree las pruebas usando la misma estructura de la carpeta src. Si la clase que va a probar es `domain/models/offer.py`, las pruebas deben estar ubicadas en `tests/unit/domain/models/test_offer.py`.

Si está usando pytest para sus pruebas, utilice [fixtures](https://docs.pytest.org/en/stable/explanation/fixtures.html) para crear recursos reutilizables en las pruebas. Esto mejorará su código y permitirá que las pruebas sean consistentes. Estos fixtures deben estar ubicados en un archivo `conftest.py` y no en los archivos de pruebas.

```python
# conftest.py
@pytest.fixture
def valid_offer_data():
    """Fixture providing valid offer data."""
    return {
        "postId": "123456", 
        "userId": "user123", 
        "description": "Transport package",
        "size": SizeEnum.MEDIUM,
        "fragile": False,
        "offer": Decimal("100.0")
    }

# test_offer.py
def test_create_offer_with_valid_data(valid_offer_data):
    """Test creating an offer with valid data."""
    offer = OfferCreate(**valid_offer_data)
    ...
```

Para ejecutar las pruebas unitarias y establecer el porcentaje mínimo de cobertura del conjunto de pruebas en 70%, ejecuta el siguiente comando:

#### En macOS/Linux:
```bash
poetry install
PYTHONPATH=src poetry run pytest tests/unit/ --cov=src -v -s --cov-fail-under=70 --cov-report term-missing
```

#### En Windows (PowerShell):
```powershell
poetry install
$env:PYTHONPATH = "src"; poetry run pytest tests/unit/ --cov=src -v -s --cov-fail-under=70 --cov-report term-missing
```

#### En Windows (Command Prompt):
```cmd
poetry install
set PYTHONPATH=src && poetry run pytest tests/unit/ --cov=src -v -s --cov-fail-under=70 --cov-report term-missing
```

Por último, recuerde que la configuración de pytest está en el archivo `pyproject.toml`, ajuste la sección dependiendo de las necesidades que tenga. Acuda a la [documentación](https://docs.pytest.org/en/stable/reference/customize.html) si lo requiere.

#### Herramientas de Calidad de Código

Antes de ejecutar las pruebas, es recomendable ejecutar las herramientas de calidad de código para asegurar que el código sigue las mejores prácticas:

```bash
# Formatear código con Black
poetry run black .

# Organizar imports con isort
poetry run isort . --profile black

# Verificar seguridad con Bandit
poetry run bandit -c pyproject.toml -r .

# Ejecutar linter con Ruff (con auto-corrección)
poetry run ruff check --fix
```

#### Ejecutar Todas las Pruebas y Verificaciones

Para ejecutar todas las herramientas de calidad y pruebas en una sola secuencia:

```bash
# 1. Instalar dependencias
poetry install

# 2. Ejecutar herramientas de calidad de código
poetry run black .
poetry run isort . --profile black
poetry run bandit -c pyproject.toml -r .
poetry run ruff check --fix

# 3. Ejecutar pruebas unitarias con cobertura
PYTHONPATH=src poetry run pytest tests/unit/ --cov=src -v -s --cov-fail-under=70 --cov-report term-missing
```

### Integración

Las pruebas de integración se realizan por medio de postman y newman. Encontrará un archivo de colección de postman en la carpeta `tests/api/` el cuál puede cargar en su aplicación de postman de manera local. Posteriormente puede ejecutar `Run collection` para verificar que la aplicación está funcionando correctamente.

Estas pruebas son ejecutadas de manera automática en los pipelines de pruebas.

## Pipelines

Utilice los ejemplos en la carpeta `.github/workflows/` de este repositorio para configurar sus pipelines. Estos pipelines son solo una guía y no son obligatorios para todos los proyectos. 

Para más información puede revisar la [documentación oficial](https://github.com/features/actions)

## Cómo contribuir

Sigue las reglas definidas en la carpeta .cursor para agregar nuevos features a este proyecto. Si tiene sugerencias o recomendaciones para mejorar los cursor rules le agradecemos nos las comparta.

## Licencia

Este proyecto está licenciado bajo la Licencia MIT - ver el archivo [LICENSE](LICENSE) para más detalles.

## Autor

- César Forero - [ca.forero10@uniandes.edu.co](mailto:ca.forero10@uniandes.edu.co)========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/README.md ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/docker-compose.yml ==========
services:
  postgres:
    image: postgres:15
    container_name: offers_app_db
    restart: always
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testoffer_db
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d testoffer_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - offers_network

  offers_app:
    build: .
    container_name: offers_app
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testoffer_db
      POSTGRES_PORT: 5432
      LOG_LEVEL: INFO
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - offers_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  offers_network:
    driver: bridge
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/docker-compose.yml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/poetry.lock ==========
# This file is automatically @generated by Poetry 2.1.4 and should not be changed by hand.

[[package]]
name = "aiosqlite"
version = "0.21.0"
description = "asyncio bridge to the standard sqlite3 module"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "aiosqlite-0.21.0-py3-none-any.whl", hash = "sha256:2549cf4057f95f53dcba16f2b64e8e2791d7e1adedb13197dd8ed77bb226d7d0"},
    {file = "aiosqlite-0.21.0.tar.gz", hash = "sha256:131bb8056daa3bc875608c631c678cda73922a2d4ba8aec373b19f18c17e7aa3"},
]

[package.dependencies]
typing_extensions = ">=4.0"

[package.extras]
dev = ["attribution (==1.7.1)", "black (==24.3.0)", "build (>=1.2)", "coverage[toml] (==7.6.10)", "flake8 (==7.0.0)", "flake8-bugbear (==24.12.12)", "flit (==3.10.1)", "mypy (==1.14.1)", "ufmt (==2.5.1)", "usort (==1.0.8.post1)"]
docs = ["sphinx (==8.1.3)", "sphinx-mdinclude (==0.6.1)"]

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "annotated_types-0.7.0-py3-none-any.whl", hash = "sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53"},
    {file = "annotated_types-0.7.0.tar.gz", hash = "sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89"},
]

[[package]]
name = "anyio"
version = "4.9.0"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "anyio-4.9.0-py3-none-any.whl", hash = "sha256:9f76d541cad6e36af7beb62e978876f3b41e3e04f2c1fbf0884604c0a9c4d93c"},
    {file = "anyio-4.9.0.tar.gz", hash = "sha256:673c0c244e15788651a4ff38710fea9675823028a6f08a5eda409e0c9840a028"},
]

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
doc = ["Sphinx (>=8.2,<9.0)", "packaging", "sphinx-autodoc-typehints (>=1.2.0)", "sphinx_rtd_theme"]
test = ["anyio[trio]", "blockbuster (>=1.5.23)", "coverage[toml] (>=7)", "exceptiongroup (>=1.2.0)", "hypothesis (>=4.0)", "psutil (>=5.9)", "pytest (>=7.0)", "trustme", "truststore (>=0.9.1) ; python_version >= \"3.10\"", "uvloop (>=0.21) ; platform_python_implementation == \"CPython\" and platform_system != \"Windows\" and python_version < \"3.14\""]
trio = ["trio (>=0.26.1)"]

[[package]]
name = "asyncpg"
version = "0.30.0"
description = "An asyncio PostgreSQL driver"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:bfb4dd5ae0699bad2b233672c8fc5ccbd9ad24b89afded02341786887e37927e"},
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:dc1f62c792752a49f88b7e6f774c26077091b44caceb1983509edc18a2222ec0"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3152fef2e265c9c24eec4ee3d22b4f4d2703d30614b0b6753e9ed4115c8a146f"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c7255812ac85099a0e1ffb81b10dc477b9973345793776b128a23e60148dd1af"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:578445f09f45d1ad7abddbff2a3c7f7c291738fdae0abffbeb737d3fc3ab8b75"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:c42f6bb65a277ce4d93f3fba46b91a265631c8df7250592dd4f11f8b0152150f"},
    {file = "asyncpg-0.30.0-cp310-cp310-win32.whl", hash = "sha256:aa403147d3e07a267ada2ae34dfc9324e67ccc4cdca35261c8c22792ba2b10cf"},
    {file = "asyncpg-0.30.0-cp310-cp310-win_amd64.whl", hash = "sha256:fb622c94db4e13137c4c7f98834185049cc50ee01d8f657ef898b6407c7b9c50"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:5e0511ad3dec5f6b4f7a9e063591d407eee66b88c14e2ea636f187da1dcfff6a"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:915aeb9f79316b43c3207363af12d0e6fd10776641a7de8a01212afd95bdf0ed"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1c198a00cce9506fcd0bf219a799f38ac7a237745e1d27f0e1f66d3707c84a5a"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3326e6d7381799e9735ca2ec9fd7be4d5fef5dcbc3cb555d8a463d8460607956"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:51da377487e249e35bd0859661f6ee2b81db11ad1f4fc036194bc9cb2ead5056"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:bc6d84136f9c4d24d358f3b02be4b6ba358abd09f80737d1ac7c444f36108454"},
    {file = "asyncpg-0.30.0-cp311-cp311-win32.whl", hash = "sha256:574156480df14f64c2d76450a3f3aaaf26105869cad3865041156b38459e935d"},
    {file = "asyncpg-0.30.0-cp311-cp311-win_amd64.whl", hash = "sha256:3356637f0bd830407b5597317b3cb3571387ae52ddc3bca6233682be88bbbc1f"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:c902a60b52e506d38d7e80e0dd5399f657220f24635fee368117b8b5fce1142e"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:aca1548e43bbb9f0f627a04666fedaca23db0a31a84136ad1f868cb15deb6e3a"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6c2a2ef565400234a633da0eafdce27e843836256d40705d83ab7ec42074efb3"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1292b84ee06ac8a2ad8e51c7475aa309245874b61333d97411aab835c4a2f737"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:0f5712350388d0cd0615caec629ad53c81e506b1abaaf8d14c93f54b35e3595a"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:db9891e2d76e6f425746c5d2da01921e9a16b5a71a1c905b13f30e12a257c4af"},
    {file = "asyncpg-0.30.0-cp312-cp312-win32.whl", hash = "sha256:68d71a1be3d83d0570049cd1654a9bdfe506e794ecc98ad0873304a9f35e411e"},
    {file = "asyncpg-0.30.0-cp312-cp312-win_amd64.whl", hash = "sha256:9a0292c6af5c500523949155ec17b7fe01a00ace33b68a476d6b5059f9630305"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:05b185ebb8083c8568ea8a40e896d5f7af4b8554b64d7719c0eaa1eb5a5c3a70"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:c47806b1a8cbb0a0db896f4cd34d89942effe353a5035c62734ab13b9f938da3"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9b6fde867a74e8c76c71e2f64f80c64c0f3163e687f1763cfaf21633ec24ec33"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:46973045b567972128a27d40001124fbc821c87a6cade040cfcd4fa8a30bcdc4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:9110df111cabc2ed81aad2f35394a00cadf4f2e0635603db6ebbd0fc896f46a4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:04ff0785ae7eed6cc138e73fc67b8e51d54ee7a3ce9b63666ce55a0bf095f7ba"},
    {file = "asyncpg-0.30.0-cp313-cp313-win32.whl", hash = "sha256:ae374585f51c2b444510cdf3595b97ece4f233fde739aa14b50e0d64e8a7a590"},
    {file = "asyncpg-0.30.0-cp313-cp313-win_amd64.whl", hash = "sha256:f59b430b8e27557c3fb9869222559f7417ced18688375825f8f12302c34e915e"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:29ff1fc8b5bf724273782ff8b4f57b0f8220a1b2324184846b39d1ab4122031d"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:64e899bce0600871b55368b8483e5e3e7f1860c9482e7f12e0a771e747988168"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5b290f4726a887f75dcd1b3006f484252db37602313f806e9ffc4e5996cfe5cb"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f86b0e2cd3f1249d6fe6fd6cfe0cd4538ba994e2d8249c0491925629b9104d0f"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:393af4e3214c8fa4c7b86da6364384c0d1b3298d45803375572f415b6f673f38"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:fd4406d09208d5b4a14db9a9dbb311b6d7aeeab57bded7ed2f8ea41aeef39b34"},
    {file = "asyncpg-0.30.0-cp38-cp38-win32.whl", hash = "sha256:0b448f0150e1c3b96cb0438a0d0aa4871f1472e58de14a3ec320dbb2798fb0d4"},
    {file = "asyncpg-0.30.0-cp38-cp38-win_amd64.whl", hash = "sha256:f23b836dd90bea21104f69547923a02b167d999ce053f3d502081acea2fba15b"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6f4e83f067b35ab5e6371f8a4c93296e0439857b4569850b178a01385e82e9ad"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:5df69d55add4efcd25ea2a3b02025b669a285b767bfbf06e356d68dbce4234ff"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a3479a0d9a852c7c84e822c073622baca862d1217b10a02dd57ee4a7a081f708"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:26683d3b9a62836fad771a18ecf4659a30f348a561279d6227dab96182f46144"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:1b982daf2441a0ed314bd10817f1606f1c28b1136abd9e4f11335358c2c631cb"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:1c06a3a50d014b303e5f6fc1e5f95eb28d2cee89cf58384b700da621e5d5e547"},
    {file = "asyncpg-0.30.0-cp39-cp39-win32.whl", hash = "sha256:1b11a555a198b08f5c4baa8f8231c74a366d190755aa4f99aacec5970afe929a"},
    {file = "asyncpg-0.30.0-cp39-cp39-win_amd64.whl", hash = "sha256:8b684a3c858a83cd876f05958823b68e8d14ec01bb0c0d14a6704c5bf9711773"},
    {file = "asyncpg-0.30.0.tar.gz", hash = "sha256:c551e9928ab6707602f44811817f82ba3c446e018bfe1d3abecc8ba5f3eac851"},
]

[package.extras]
docs = ["Sphinx (>=8.1.3,<8.2.0)", "sphinx-rtd-theme (>=1.2.2)"]
gssauth = ["gssapi ; platform_system != \"Windows\"", "sspilib ; platform_system == \"Windows\""]
test = ["distro (>=1.9.0,<1.10.0)", "flake8 (>=6.1,<7.0)", "flake8-pyi (>=24.1.0,<24.2.0)", "gssapi ; platform_system == \"Linux\"", "k5test ; platform_system == \"Linux\"", "mypy (>=1.8.0,<1.9.0)", "sspilib ; platform_system == \"Windows\"", "uvloop (>=0.15.3) ; platform_system != \"Windows\" and python_version < \"3.14.0\""]

[[package]]
name = "bandit"
version = "1.8.3"
description = "Security oriented static analyser for python code."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "bandit-1.8.3-py3-none-any.whl", hash = "sha256:28f04dc0d258e1dd0f99dee8eefa13d1cb5e3fde1a5ab0c523971f97b289bcd8"},
    {file = "bandit-1.8.3.tar.gz", hash = "sha256:f5847beb654d309422985c36644649924e0ea4425c76dec2e89110b87506193a"},
]

[package.dependencies]
colorama = {version = ">=0.3.9", markers = "platform_system == \"Windows\""}
PyYAML = ">=5.3.1"
rich = "*"
stevedore = ">=1.20.0"

[package.extras]
baseline = ["GitPython (>=3.1.30)"]
sarif = ["jschema-to-python (>=1.2.3)", "sarif-om (>=1.0.4)"]
test = ["beautifulsoup4 (>=4.8.0)", "coverage (>=4.5.4)", "fixtures (>=3.0.0)", "flake8 (>=4.0.0)", "pylint (==1.9.4)", "stestr (>=2.5.0)", "testscenarios (>=0.5.0)", "testtools (>=2.3.0)"]
toml = ["tomli (>=1.1.0) ; python_version < \"3.11\""]
yaml = ["PyYAML"]

[[package]]
name = "black"
version = "25.1.0"
description = "The uncompromising code formatter."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "black-25.1.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:759e7ec1e050a15f89b770cefbf91ebee8917aac5c20483bc2d80a6c3a04df32"},
    {file = "black-25.1.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e519ecf93120f34243e6b0054db49c00a35f84f195d5bce7e9f5cfc578fc2da"},
    {file = "black-25.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:055e59b198df7ac0b7efca5ad7ff2516bca343276c466be72eb04a3bcc1f82d7"},
    {file = "black-25.1.0-cp310-cp310-win_amd64.whl", hash = "sha256:db8ea9917d6f8fc62abd90d944920d95e73c83a5ee3383493e35d271aca872e9"},
    {file = "black-25.1.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:a39337598244de4bae26475f77dda852ea00a93bd4c728e09eacd827ec929df0"},
    {file = "black-25.1.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:96c1c7cd856bba8e20094e36e0f948718dc688dba4a9d78c3adde52b9e6c2299"},
    {file = "black-25.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:bce2e264d59c91e52d8000d507eb20a9aca4a778731a08cfff7e5ac4a4bb7096"},
    {file = "black-25.1.0-cp311-cp311-win_amd64.whl", hash = "sha256:172b1dbff09f86ce6f4eb8edf9dede08b1fce58ba194c87d7a4f1a5aa2f5b3c2"},
    {file = "black-25.1.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:4b60580e829091e6f9238c848ea6750efed72140b91b048770b64e74fe04908b"},
    {file = "black-25.1.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:1e2978f6df243b155ef5fa7e558a43037c3079093ed5d10fd84c43900f2d8ecc"},
    {file = "black-25.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:3b48735872ec535027d979e8dcb20bf4f70b5ac75a8ea99f127c106a7d7aba9f"},
    {file = "black-25.1.0-cp312-cp312-win_amd64.whl", hash = "sha256:ea0213189960bda9cf99be5b8c8ce66bb054af5e9e861249cd23471bd7b0b3ba"},
    {file = "black-25.1.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:8f0b18a02996a836cc9c9c78e5babec10930862827b1b724ddfe98ccf2f2fe4f"},
    {file = "black-25.1.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:afebb7098bfbc70037a053b91ae8437c3857482d3a690fefc03e9ff7aa9a5fd3"},
    {file = "black-25.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:030b9759066a4ee5e5aca28c3c77f9c64789cdd4de8ac1df642c40b708be6171"},
    {file = "black-25.1.0-cp313-cp313-win_amd64.whl", hash = "sha256:a22f402b410566e2d1c950708c77ebf5ebd5d0d88a6a2e87c86d9fb48afa0d18"},
    {file = "black-25.1.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:a1ee0a0c330f7b5130ce0caed9936a904793576ef4d2b98c40835d6a65afa6a0"},
    {file = "black-25.1.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:f3df5f1bf91d36002b0a75389ca8663510cf0531cca8aa5c1ef695b46d98655f"},
    {file = "black-25.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:d9e6827d563a2c820772b32ce8a42828dc6790f095f441beef18f96aa6f8294e"},
    {file = "black-25.1.0-cp39-cp39-win_amd64.whl", hash = "sha256:bacabb307dca5ebaf9c118d2d2f6903da0d62c9faa82bd21a33eecc319559355"},
    {file = "black-25.1.0-py3-none-any.whl", hash = "sha256:95e8176dae143ba9097f351d174fdaf0ccd29efb414b362ae3fd72bf0f710717"},
    {file = "black-25.1.0.tar.gz", hash = "sha256:33496d5cd1222ad73391352b4ae8da15253c5de89b93a80b3e2c8d9a19ec2666"},
]

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
packaging = ">=22.0"
pathspec = ">=0.9.0"
platformdirs = ">=2"

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.10)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "click"
version = "8.2.1"
description = "Composable command line interface toolkit"
optional = false
python-versions = ">=3.10"
groups = ["main", "dev"]
files = [
    {file = "click-8.2.1-py3-none-any.whl", hash = "sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b"},
    {file = "click-8.2.1.tar.gz", hash = "sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202"},
]

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"
groups = ["main", "dev"]
files = [
    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},
    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},
]
markers = {main = "platform_system == \"Windows\"", dev = "platform_system == \"Windows\" or sys_platform == \"win32\""}

[[package]]
name = "coverage"
version = "7.8.2"
description = "Code coverage measurement for Python"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "coverage-7.8.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:bd8ec21e1443fd7a447881332f7ce9d35b8fbd2849e761bb290b584535636b0a"},
    {file = "coverage-7.8.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:4c26c2396674816deaeae7ded0e2b42c26537280f8fe313335858ffff35019be"},
    {file = "coverage-7.8.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1aec326ed237e5880bfe69ad41616d333712c7937bcefc1343145e972938f9b3"},
    {file = "coverage-7.8.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:5e818796f71702d7a13e50c70de2a1924f729228580bcba1607cccf32eea46e6"},
    {file = "coverage-7.8.2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:546e537d9e24efc765c9c891328f30f826e3e4808e31f5d0f87c4ba12bbd1622"},
    {file = "coverage-7.8.2-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:ab9b09a2349f58e73f8ebc06fac546dd623e23b063e5398343c5270072e3201c"},
    {file = "coverage-7.8.2-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:fd51355ab8a372d89fb0e6a31719e825cf8df8b6724bee942fb5b92c3f016ba3"},
    {file = "coverage-7.8.2-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:0774df1e093acb6c9e4d58bce7f86656aeed6c132a16e2337692c12786b32404"},
    {file = "coverage-7.8.2-cp310-cp310-win32.whl", hash = "sha256:00f2e2f2e37f47e5f54423aeefd6c32a7dbcedc033fcd3928a4f4948e8b96af7"},
    {file = "coverage-7.8.2-cp310-cp310-win_amd64.whl", hash = "sha256:145b07bea229821d51811bf15eeab346c236d523838eda395ea969d120d13347"},
    {file = "coverage-7.8.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:b99058eef42e6a8dcd135afb068b3d53aff3921ce699e127602efff9956457a9"},
    {file = "coverage-7.8.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:5feb7f2c3e6ea94d3b877def0270dff0947b8d8c04cfa34a17be0a4dc1836879"},
    {file = "coverage-7.8.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:670a13249b957bb9050fab12d86acef7bf8f6a879b9d1a883799276e0d4c674a"},
    {file = "coverage-7.8.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:0bdc8bf760459a4a4187b452213e04d039990211f98644c7292adf1e471162b5"},
    {file = "coverage-7.8.2-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:07a989c867986c2a75f158f03fdb413128aad29aca9d4dbce5fc755672d96f11"},
    {file = "coverage-7.8.2-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:2db10dedeb619a771ef0e2949ccba7b75e33905de959c2643a4607bef2f3fb3a"},
    {file = "coverage-7.8.2-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:e6ea7dba4e92926b7b5f0990634b78ea02f208d04af520c73a7c876d5a8d36cb"},
    {file = "coverage-7.8.2-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:ef2f22795a7aca99fc3c84393a55a53dd18ab8c93fb431004e4d8f0774150f54"},
    {file = "coverage-7.8.2-cp311-cp311-win32.whl", hash = "sha256:641988828bc18a6368fe72355df5f1703e44411adbe49bba5644b941ce6f2e3a"},
    {file = "coverage-7.8.2-cp311-cp311-win_amd64.whl", hash = "sha256:8ab4a51cb39dc1933ba627e0875046d150e88478dbe22ce145a68393e9652975"},
    {file = "coverage-7.8.2-cp311-cp311-win_arm64.whl", hash = "sha256:8966a821e2083c74d88cca5b7dcccc0a3a888a596a04c0b9668a891de3a0cc53"},
    {file = "coverage-7.8.2-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:e2f6fe3654468d061942591aef56686131335b7a8325684eda85dacdf311356c"},
    {file = "coverage-7.8.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:76090fab50610798cc05241bf83b603477c40ee87acd358b66196ab0ca44ffa1"},
    {file = "coverage-7.8.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2bd0a0a5054be160777a7920b731a0570284db5142abaaf81bcbb282b8d99279"},
    {file = "coverage-7.8.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:da23ce9a3d356d0affe9c7036030b5c8f14556bd970c9b224f9c8205505e3b99"},
    {file = "coverage-7.8.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c9392773cffeb8d7e042a7b15b82a414011e9d2b5fdbbd3f7e6a6b17d5e21b20"},
    {file = "coverage-7.8.2-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:876cbfd0b09ce09d81585d266c07a32657beb3eaec896f39484b631555be0fe2"},
    {file = "coverage-7.8.2-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:3da9b771c98977a13fbc3830f6caa85cae6c9c83911d24cb2d218e9394259c57"},
    {file = "coverage-7.8.2-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:9a990f6510b3292686713bfef26d0049cd63b9c7bb17e0864f133cbfd2e6167f"},
    {file = "coverage-7.8.2-cp312-cp312-win32.whl", hash = "sha256:bf8111cddd0f2b54d34e96613e7fbdd59a673f0cf5574b61134ae75b6f5a33b8"},
    {file = "coverage-7.8.2-cp312-cp312-win_amd64.whl", hash = "sha256:86a323a275e9e44cdf228af9b71c5030861d4d2610886ab920d9945672a81223"},
    {file = "coverage-7.8.2-cp312-cp312-win_arm64.whl", hash = "sha256:820157de3a589e992689ffcda8639fbabb313b323d26388d02e154164c57b07f"},
    {file = "coverage-7.8.2-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:ea561010914ec1c26ab4188aef8b1567272ef6de096312716f90e5baa79ef8ca"},
    {file = "coverage-7.8.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:cb86337a4fcdd0e598ff2caeb513ac604d2f3da6d53df2c8e368e07ee38e277d"},
    {file = "coverage-7.8.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:26a4636ddb666971345541b59899e969f3b301143dd86b0ddbb570bd591f1e85"},
    {file = "coverage-7.8.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:5040536cf9b13fb033f76bcb5e1e5cb3b57c4807fef37db9e0ed129c6a094257"},
    {file = "coverage-7.8.2-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dc67994df9bcd7e0150a47ef41278b9e0a0ea187caba72414b71dc590b99a108"},
    {file = "coverage-7.8.2-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:6e6c86888fd076d9e0fe848af0a2142bf606044dc5ceee0aa9eddb56e26895a0"},
    {file = "coverage-7.8.2-cp313-cp313-musllinux_1_2_i686.whl", hash = "sha256:684ca9f58119b8e26bef860db33524ae0365601492e86ba0b71d513f525e7050"},
    {file = "coverage-7.8.2-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:8165584ddedb49204c4e18da083913bdf6a982bfb558632a79bdaadcdafd0d48"},
    {file = "coverage-7.8.2-cp313-cp313-win32.whl", hash = "sha256:34759ee2c65362163699cc917bdb2a54114dd06d19bab860725f94ef45a3d9b7"},
    {file = "coverage-7.8.2-cp313-cp313-win_amd64.whl", hash = "sha256:2f9bc608fbafaee40eb60a9a53dbfb90f53cc66d3d32c2849dc27cf5638a21e3"},
    {file = "coverage-7.8.2-cp313-cp313-win_arm64.whl", hash = "sha256:9fe449ee461a3b0c7105690419d0b0aba1232f4ff6d120a9e241e58a556733f7"},
    {file = "coverage-7.8.2-cp313-cp313t-macosx_10_13_x86_64.whl", hash = "sha256:8369a7c8ef66bded2b6484053749ff220dbf83cba84f3398c84c51a6f748a008"},
    {file = "coverage-7.8.2-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:159b81df53a5fcbc7d45dae3adad554fdbde9829a994e15227b3f9d816d00b36"},
    {file = "coverage-7.8.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e6fcbbd35a96192d042c691c9e0c49ef54bd7ed865846a3c9d624c30bb67ce46"},
    {file = "coverage-7.8.2-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:05364b9cc82f138cc86128dc4e2e1251c2981a2218bfcd556fe6b0fbaa3501be"},
    {file = "coverage-7.8.2-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:46d532db4e5ff3979ce47d18e2fe8ecad283eeb7367726da0e5ef88e4fe64740"},
    {file = "coverage-7.8.2-cp313-cp313t-musllinux_1_2_aarch64.whl", hash = "sha256:4000a31c34932e7e4fa0381a3d6deb43dc0c8f458e3e7ea6502e6238e10be625"},
    {file = "coverage-7.8.2-cp313-cp313t-musllinux_1_2_i686.whl", hash = "sha256:43ff5033d657cd51f83015c3b7a443287250dc14e69910577c3e03bd2e06f27b"},
    {file = "coverage-7.8.2-cp313-cp313t-musllinux_1_2_x86_64.whl", hash = "sha256:94316e13f0981cbbba132c1f9f365cac1d26716aaac130866ca812006f662199"},
    {file = "coverage-7.8.2-cp313-cp313t-win32.whl", hash = "sha256:3f5673888d3676d0a745c3d0e16da338c5eea300cb1f4ada9c872981265e76d8"},
    {file = "coverage-7.8.2-cp313-cp313t-win_amd64.whl", hash = "sha256:2c08b05ee8d7861e45dc5a2cc4195c8c66dca5ac613144eb6ebeaff2d502e73d"},
    {file = "coverage-7.8.2-cp313-cp313t-win_arm64.whl", hash = "sha256:1e1448bb72b387755e1ff3ef1268a06617afd94188164960dba8d0245a46004b"},
    {file = "coverage-7.8.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:496948261eaac5ac9cf43f5d0a9f6eb7a6d4cb3bedb2c5d294138142f5c18f2a"},
    {file = "coverage-7.8.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:eacd2de0d30871eff893bab0b67840a96445edcb3c8fd915e6b11ac4b2f3fa6d"},
    {file = "coverage-7.8.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b039ffddc99ad65d5078ef300e0c7eed08c270dc26570440e3ef18beb816c1ca"},
    {file = "coverage-7.8.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:0e49824808d4375ede9dd84e9961a59c47f9113039f1a525e6be170aa4f5c34d"},
    {file = "coverage-7.8.2-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b069938961dfad881dc2f8d02b47645cd2f455d3809ba92a8a687bf513839787"},
    {file = "coverage-7.8.2-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:de77c3ba8bb686d1c411e78ee1b97e6e0b963fb98b1637658dd9ad2c875cf9d7"},
    {file = "coverage-7.8.2-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:1676628065a498943bd3f64f099bb573e08cf1bc6088bbe33cf4424e0876f4b3"},
    {file = "coverage-7.8.2-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:8e1a26e7e50076e35f7afafde570ca2b4d7900a491174ca357d29dece5aacee7"},
    {file = "coverage-7.8.2-cp39-cp39-win32.whl", hash = "sha256:6782a12bf76fa61ad9350d5a6ef5f3f020b57f5e6305cbc663803f2ebd0f270a"},
    {file = "coverage-7.8.2-cp39-cp39-win_amd64.whl", hash = "sha256:1efa4166ba75ccefd647f2d78b64f53f14fb82622bc94c5a5cb0a622f50f1c9e"},
    {file = "coverage-7.8.2-pp39.pp310.pp311-none-any.whl", hash = "sha256:ec455eedf3ba0bbdf8f5a570012617eb305c63cb9f03428d39bf544cb2b94837"},
    {file = "coverage-7.8.2-py3-none-any.whl", hash = "sha256:726f32ee3713f7359696331a18daf0c3b3a70bb0ae71141b9d3c52be7c595e32"},
    {file = "coverage-7.8.2.tar.gz", hash = "sha256:a886d531373a1f6ff9fad2a2ba4a045b68467b779ae729ee0b3b10ac20033b27"},
]

[package.extras]
toml = ["tomli ; python_full_version <= \"3.11.0a6\""]

[[package]]
name = "faker"
version = "37.3.0"
description = "Faker is a Python package that generates fake data for you."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "faker-37.3.0-py3-none-any.whl", hash = "sha256:48c94daa16a432f2d2bc803c7ff602509699fca228d13e97e379cd860a7e216e"},
    {file = "faker-37.3.0.tar.gz", hash = "sha256:77b79e7a2228d57175133af0bbcdd26dc623df81db390ee52f5104d46c010f2f"},
]

[package.dependencies]
tzdata = "*"

[[package]]
name = "fastapi"
version = "0.115.12"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "fastapi-0.115.12-py3-none-any.whl", hash = "sha256:e94613d6c05e27be7ffebdd6ea5f388112e5e430c8f7d6494a9d1d88d43e814d"},
    {file = "fastapi-0.115.12.tar.gz", hash = "sha256:1e2c2a2646905f9e83d32f04a3f86aff4a286669c6c950ca95b5fd68c2602681"},
]

[package.dependencies]
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0 || >2.0.0,<2.0.1 || >2.0.1,<2.1.0 || >2.1.0,<3.0.0"
starlette = ">=0.40.0,<0.47.0"
typing-extensions = ">=4.8.0"

[package.extras]
all = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.5)", "httpx (>=0.23.0)", "itsdangerous (>=1.1.0)", "jinja2 (>=3.1.5)", "orjson (>=3.2.1)", "pydantic-extra-types (>=2.0.0)", "pydantic-settings (>=2.0.0)", "python-multipart (>=0.0.18)", "pyyaml (>=5.3.1)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)", "uvicorn[standard] (>=0.12.0)"]
standard = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.5)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]

[[package]]
name = "flake8"
version = "7.2.0"
description = "the modular source code checker: pep8 pyflakes and co"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "flake8-7.2.0-py2.py3-none-any.whl", hash = "sha256:93b92ba5bdb60754a6da14fa3b93a9361fd00a59632ada61fd7b130436c40343"},
    {file = "flake8-7.2.0.tar.gz", hash = "sha256:fa558ae3f6f7dbf2b4f22663e5343b6b6023620461f8d4ff2019ef4b5ee70426"},
]

[package.dependencies]
mccabe = ">=0.7.0,<0.8.0"
pycodestyle = ">=2.13.0,<2.14.0"
pyflakes = ">=3.3.0,<3.4.0"

[[package]]
name = "h11"
version = "0.16.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "h11-0.16.0-py3-none-any.whl", hash = "sha256:63cf8bbe7522de3bf65932fda1d9c2772064ffb3dae62d55932da54b31cb6c86"},
    {file = "h11-0.16.0.tar.gz", hash = "sha256:4e35b956cf45792e4caa5885e69fba00bdbc6ffafbfa020300e549b208ee5ff1"},
]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
optional = false
python-versions = ">=3.6"
groups = ["main"]
files = [
    {file = "idna-3.10-py3-none-any.whl", hash = "sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3"},
    {file = "idna-3.10.tar.gz", hash = "sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9"},
]

[package.extras]
all = ["flake8 (>=7.1.1)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "ruff (>=0.6.2)"]

[[package]]
name = "iniconfig"
version = "2.1.0"
description = "brain-dead simple config-ini parsing"
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "iniconfig-2.1.0-py3-none-any.whl", hash = "sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760"},
    {file = "iniconfig-2.1.0.tar.gz", hash = "sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7"},
]

[[package]]
name = "iso8601"
version = "2.1.0"
description = "Simple module to parse ISO 8601 dates"
optional = false
python-versions = ">=3.7,<4.0"
groups = ["main"]
files = [
    {file = "iso8601-2.1.0-py3-none-any.whl", hash = "sha256:aac4145c4dcb66ad8b648a02830f5e2ff6c24af20f4f482689be402db2429242"},
    {file = "iso8601-2.1.0.tar.gz", hash = "sha256:6b1d3829ee8921c4301998c909f7829fa9ed3cbdac0d3b16af2d743aed1ba8df"},
]

[[package]]
name = "isort"
version = "6.0.1"
description = "A Python utility / library to sort Python imports."
optional = false
python-versions = ">=3.9.0"
groups = ["dev"]
files = [
    {file = "isort-6.0.1-py3-none-any.whl", hash = "sha256:2dc5d7f65c9678d94c88dfc29161a320eec67328bc97aad576874cb4be1e9615"},
    {file = "isort-6.0.1.tar.gz", hash = "sha256:1cb5df28dfbc742e490c5e41bad6da41b805b0a8be7bc93cd0fb2a8a890ac450"},
]

[package.extras]
colors = ["colorama"]
plugins = ["setuptools"]

[[package]]
name = "markdown-it-py"
version = "3.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "markdown-it-py-3.0.0.tar.gz", hash = "sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb"},
    {file = "markdown_it_py-3.0.0-py3-none-any.whl", hash = "sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1"},
]

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
code-style = ["pre-commit (>=3.0,<4.0)"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins"]
profiling = ["gprof2dot"]
rtd = ["jupyter_sphinx", "mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx_book_theme"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "mccabe"
version = "0.7.0"
description = "McCabe checker, plugin for flake8"
optional = false
python-versions = ">=3.6"
groups = ["dev"]
files = [
    {file = "mccabe-0.7.0-py2.py3-none-any.whl", hash = "sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e"},
    {file = "mccabe-0.7.0.tar.gz", hash = "sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325"},
]

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
optional = false
python-versions = ">=3.7"
groups = ["dev"]
files = [
    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},
    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},
]

[[package]]
name = "mypy-extensions"
version = "1.1.0"
description = "Type system extensions for programs checked with the mypy type checker."
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "mypy_extensions-1.1.0-py3-none-any.whl", hash = "sha256:1be4cccdb0f2482337c4743e60421de3a356cd97508abadd57d47403e94f5505"},
    {file = "mypy_extensions-1.1.0.tar.gz", hash = "sha256:52e68efc3284861e772bbcd66823fde5ae21fd2fdb51c62a211403730b916558"},
]

[[package]]
name = "packaging"
version = "25.0"
description = "Core utilities for Python packages"
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "packaging-25.0-py3-none-any.whl", hash = "sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484"},
    {file = "packaging-25.0.tar.gz", hash = "sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f"},
]

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "pathspec-0.12.1-py3-none-any.whl", hash = "sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08"},
    {file = "pathspec-0.12.1.tar.gz", hash = "sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712"},
]

[[package]]
name = "pbr"
version = "6.1.1"
description = "Python Build Reasonableness"
optional = false
python-versions = ">=2.6"
groups = ["dev"]
files = [
    {file = "pbr-6.1.1-py2.py3-none-any.whl", hash = "sha256:38d4daea5d9fa63b3f626131b9d34947fd0c8be9b05a29276870580050a25a76"},
    {file = "pbr-6.1.1.tar.gz", hash = "sha256:93ea72ce6989eb2eed99d0f75721474f69ad88128afdef5ac377eb797c4bf76b"},
]

[package.dependencies]
setuptools = "*"

[[package]]
name = "platformdirs"
version = "4.3.8"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "platformdirs-4.3.8-py3-none-any.whl", hash = "sha256:ff7059bb7eb1179e2685604f4aaf157cfd9535242bd23742eadc3c13542139b4"},
    {file = "platformdirs-4.3.8.tar.gz", hash = "sha256:3d512d96e16bcb959a814c9f348431070822a6496326a4be0911c40b5a74c2bc"},
]

[package.extras]
docs = ["furo (>=2024.8.6)", "proselint (>=0.14)", "sphinx (>=8.1.3)", "sphinx-autodoc-typehints (>=3)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest (>=8.3.4)", "pytest-cov (>=6)", "pytest-mock (>=3.14)"]
type = ["mypy (>=1.14.1)"]

[[package]]
name = "pluggy"
version = "1.6.0"
description = "plugin and hook calling mechanisms for python"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pluggy-1.6.0-py3-none-any.whl", hash = "sha256:e920276dd6813095e9377c0bc5566d94c932c33b27a3e3945d8389c374dd4746"},
    {file = "pluggy-1.6.0.tar.gz", hash = "sha256:7dcc130b76258d33b90f61b658791dede3486c3e6bfb003ee5c9bfb396dd22f3"},
]

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["coverage", "pytest", "pytest-benchmark"]

[[package]]
name = "pycodestyle"
version = "2.13.0"
description = "Python style guide checker"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pycodestyle-2.13.0-py2.py3-none-any.whl", hash = "sha256:35863c5974a271c7a726ed228a14a4f6daf49df369d8c50cd9a6f58a5e143ba9"},
    {file = "pycodestyle-2.13.0.tar.gz", hash = "sha256:c8415bf09abe81d9c7f872502a6eee881fbe85d8763dd5b9924bb0a01d67efae"},
]

[[package]]
name = "pydantic"
version = "2.6.4"
description = "Data validation using Python type hints"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "pydantic-2.6.4-py3-none-any.whl", hash = "sha256:cc46fce86607580867bdc3361ad462bab9c222ef042d3da86f2fb333e1d916c5"},
    {file = "pydantic-2.6.4.tar.gz", hash = "sha256:b1704e0847db01817624a6b86766967f552dd9dbf3afba4004409f908dcc84e6"},
]

[package.dependencies]
annotated-types = ">=0.4.0"
pydantic-core = "2.16.3"
typing-extensions = ">=4.6.1"

[package.extras]
email = ["email-validator (>=2.0.0)"]

[[package]]
name = "pydantic-core"
version = "2.16.3"
description = ""
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "pydantic_core-2.16.3-cp310-cp310-macosx_10_12_x86_64.whl", hash = "sha256:75b81e678d1c1ede0785c7f46690621e4c6e63ccd9192af1f0bd9d504bbb6bf4"},
    {file = "pydantic_core-2.16.3-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:9c865a7ee6f93783bd5d781af5a4c43dadc37053a5b42f7d18dc019f8c9d2bd1"},
    {file = "pydantic_core-2.16.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:162e498303d2b1c036b957a1278fa0899d02b2842f1ff901b6395104c5554a45"},
    {file = "pydantic_core-2.16.3-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2f583bd01bbfbff4eaee0868e6fc607efdfcc2b03c1c766b06a707abbc856187"},
    {file = "pydantic_core-2.16.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:b926dd38db1519ed3043a4de50214e0d600d404099c3392f098a7f9d75029ff8"},
    {file = "pydantic_core-2.16.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:716b542728d4c742353448765aa7cdaa519a7b82f9564130e2b3f6766018c9ec"},
    {file = "pydantic_core-2.16.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:fc4ad7f7ee1a13d9cb49d8198cd7d7e3aa93e425f371a68235f784e99741561f"},
    {file = "pydantic_core-2.16.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bd87f48924f360e5d1c5f770d6155ce0e7d83f7b4e10c2f9ec001c73cf475c99"},
    {file = "pydantic_core-2.16.3-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:0df446663464884297c793874573549229f9eca73b59360878f382a0fc085979"},
    {file = "pydantic_core-2.16.3-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:4df8a199d9f6afc5ae9a65f8f95ee52cae389a8c6b20163762bde0426275b7db"},
    {file = "pydantic_core-2.16.3-cp310-none-win32.whl", hash = "sha256:456855f57b413f077dff513a5a28ed838dbbb15082ba00f80750377eed23d132"},
    {file = "pydantic_core-2.16.3-cp310-none-win_amd64.whl", hash = "sha256:732da3243e1b8d3eab8c6ae23ae6a58548849d2e4a4e03a1924c8ddf71a387cb"},
    {file = "pydantic_core-2.16.3-cp311-cp311-macosx_10_12_x86_64.whl", hash = "sha256:519ae0312616026bf4cedc0fe459e982734f3ca82ee8c7246c19b650b60a5ee4"},
    {file = "pydantic_core-2.16.3-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:b3992a322a5617ded0a9f23fd06dbc1e4bd7cf39bc4ccf344b10f80af58beacd"},
    {file = "pydantic_core-2.16.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8d62da299c6ecb04df729e4b5c52dc0d53f4f8430b4492b93aa8de1f541c4aac"},
    {file = "pydantic_core-2.16.3-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2acca2be4bb2f2147ada8cac612f8a98fc09f41c89f87add7256ad27332c2fda"},
    {file = "pydantic_core-2.16.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1b662180108c55dfbf1280d865b2d116633d436cfc0bba82323554873967b340"},
    {file = "pydantic_core-2.16.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e7c6ed0dc9d8e65f24f5824291550139fe6f37fac03788d4580da0d33bc00c97"},
    {file = "pydantic_core-2.16.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:a6b1bb0827f56654b4437955555dc3aeeebeddc47c2d7ed575477f082622c49e"},
    {file = "pydantic_core-2.16.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:e56f8186d6210ac7ece503193ec84104da7ceb98f68ce18c07282fcc2452e76f"},
    {file = "pydantic_core-2.16.3-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:936e5db01dd49476fa8f4383c259b8b1303d5dd5fb34c97de194560698cc2c5e"},
    {file = "pydantic_core-2.16.3-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:33809aebac276089b78db106ee692bdc9044710e26f24a9a2eaa35a0f9fa70ba"},
    {file = "pydantic_core-2.16.3-cp311-none-win32.whl", hash = "sha256:ded1c35f15c9dea16ead9bffcde9bb5c7c031bff076355dc58dcb1cb436c4721"},
    {file = "pydantic_core-2.16.3-cp311-none-win_amd64.whl", hash = "sha256:d89ca19cdd0dd5f31606a9329e309d4fcbb3df860960acec32630297d61820df"},
    {file = "pydantic_core-2.16.3-cp311-none-win_arm64.whl", hash = "sha256:6162f8d2dc27ba21027f261e4fa26f8bcb3cf9784b7f9499466a311ac284b5b9"},
    {file = "pydantic_core-2.16.3-cp312-cp312-macosx_10_12_x86_64.whl", hash = "sha256:0f56ae86b60ea987ae8bcd6654a887238fd53d1384f9b222ac457070b7ac4cff"},
    {file = "pydantic_core-2.16.3-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:c9bd22a2a639e26171068f8ebb5400ce2c1bc7d17959f60a3b753ae13c632975"},
    {file = "pydantic_core-2.16.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4204e773b4b408062960e65468d5346bdfe139247ee5f1ca2a378983e11388a2"},
    {file = "pydantic_core-2.16.3-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:f651dd19363c632f4abe3480a7c87a9773be27cfe1341aef06e8759599454120"},
    {file = "pydantic_core-2.16.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:aaf09e615a0bf98d406657e0008e4a8701b11481840be7d31755dc9f97c44053"},
    {file = "pydantic_core-2.16.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:8e47755d8152c1ab5b55928ab422a76e2e7b22b5ed8e90a7d584268dd49e9c6b"},
    {file = "pydantic_core-2.16.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:500960cb3a0543a724a81ba859da816e8cf01b0e6aaeedf2c3775d12ee49cade"},
    {file = "pydantic_core-2.16.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:cf6204fe865da605285c34cf1172879d0314ff267b1c35ff59de7154f35fdc2e"},
    {file = "pydantic_core-2.16.3-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:d33dd21f572545649f90c38c227cc8631268ba25c460b5569abebdd0ec5974ca"},
    {file = "pydantic_core-2.16.3-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:49d5d58abd4b83fb8ce763be7794d09b2f50f10aa65c0f0c1696c677edeb7cbf"},
    {file = "pydantic_core-2.16.3-cp312-none-win32.whl", hash = "sha256:f53aace168a2a10582e570b7736cc5bef12cae9cf21775e3eafac597e8551fbe"},
    {file = "pydantic_core-2.16.3-cp312-none-win_amd64.whl", hash = "sha256:0d32576b1de5a30d9a97f300cc6a3f4694c428d956adbc7e6e2f9cad279e45ed"},
    {file = "pydantic_core-2.16.3-cp312-none-win_arm64.whl", hash = "sha256:ec08be75bb268473677edb83ba71e7e74b43c008e4a7b1907c6d57e940bf34b6"},
    {file = "pydantic_core-2.16.3-cp38-cp38-macosx_10_12_x86_64.whl", hash = "sha256:b1f6f5938d63c6139860f044e2538baeee6f0b251a1816e7adb6cbce106a1f01"},
    {file = "pydantic_core-2.16.3-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:2a1ef6a36fdbf71538142ed604ad19b82f67b05749512e47f247a6ddd06afdc7"},
    {file = "pydantic_core-2.16.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:704d35ecc7e9c31d48926150afada60401c55efa3b46cd1ded5a01bdffaf1d48"},
    {file = "pydantic_core-2.16.3-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:d937653a696465677ed583124b94a4b2d79f5e30b2c46115a68e482c6a591c8a"},
    {file = "pydantic_core-2.16.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c9803edf8e29bd825f43481f19c37f50d2b01899448273b3a7758441b512acf8"},
    {file = "pydantic_core-2.16.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:72282ad4892a9fb2da25defeac8c2e84352c108705c972db82ab121d15f14e6d"},
    {file = "pydantic_core-2.16.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:7f752826b5b8361193df55afcdf8ca6a57d0232653494ba473630a83ba50d8c9"},
    {file = "pydantic_core-2.16.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:4384a8f68ddb31a0b0c3deae88765f5868a1b9148939c3f4121233314ad5532c"},
    {file = "pydantic_core-2.16.3-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:a4b2bf78342c40b3dc830880106f54328928ff03e357935ad26c7128bbd66ce8"},
    {file = "pydantic_core-2.16.3-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:13dcc4802961b5f843a9385fc821a0b0135e8c07fc3d9949fd49627c1a5e6ae5"},
    {file = "pydantic_core-2.16.3-cp38-none-win32.whl", hash = "sha256:e3e70c94a0c3841e6aa831edab1619ad5c511199be94d0c11ba75fe06efe107a"},
    {file = "pydantic_core-2.16.3-cp38-none-win_amd64.whl", hash = "sha256:ecdf6bf5f578615f2e985a5e1f6572e23aa632c4bd1dc67f8f406d445ac115ed"},
    {file = "pydantic_core-2.16.3-cp39-cp39-macosx_10_12_x86_64.whl", hash = "sha256:bda1ee3e08252b8d41fa5537413ffdddd58fa73107171a126d3b9ff001b9b820"},
    {file = "pydantic_core-2.16.3-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:21b888c973e4f26b7a96491c0965a8a312e13be108022ee510248fe379a5fa23"},
    {file = "pydantic_core-2.16.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:be0ec334369316fa73448cc8c982c01e5d2a81c95969d58b8f6e272884df0074"},
    {file = "pydantic_core-2.16.3-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:b5b6079cc452a7c53dd378c6f881ac528246b3ac9aae0f8eef98498a75657805"},
    {file = "pydantic_core-2.16.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:7ee8d5f878dccb6d499ba4d30d757111847b6849ae07acdd1205fffa1fc1253c"},
    {file = "pydantic_core-2.16.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:7233d65d9d651242a68801159763d09e9ec96e8a158dbf118dc090cd77a104c9"},
    {file = "pydantic_core-2.16.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c6119dc90483a5cb50a1306adb8d52c66e447da88ea44f323e0ae1a5fcb14256"},
    {file = "pydantic_core-2.16.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:578114bc803a4c1ff9946d977c221e4376620a46cf78da267d946397dc9514a8"},
    {file = "pydantic_core-2.16.3-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:d8f99b147ff3fcf6b3cc60cb0c39ea443884d5559a30b1481e92495f2310ff2b"},
    {file = "pydantic_core-2.16.3-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:4ac6b4ce1e7283d715c4b729d8f9dab9627586dafce81d9eaa009dd7f25dd972"},
    {file = "pydantic_core-2.16.3-cp39-none-win32.whl", hash = "sha256:e7774b570e61cb998490c5235740d475413a1f6de823169b4cf94e2fe9e9f6b2"},
    {file = "pydantic_core-2.16.3-cp39-none-win_amd64.whl", hash = "sha256:9091632a25b8b87b9a605ec0e61f241c456e9248bfdcf7abdf344fdb169c81cf"},
    {file = "pydantic_core-2.16.3-pp310-pypy310_pp73-macosx_10_12_x86_64.whl", hash = "sha256:36fa178aacbc277bc6b62a2c3da95226520da4f4e9e206fdf076484363895d2c"},
    {file = "pydantic_core-2.16.3-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:dcca5d2bf65c6fb591fff92da03f94cd4f315972f97c21975398bd4bd046854a"},
    {file = "pydantic_core-2.16.3-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2a72fb9963cba4cd5793854fd12f4cfee731e86df140f59ff52a49b3552db241"},
    {file = "pydantic_core-2.16.3-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b60cc1a081f80a2105a59385b92d82278b15d80ebb3adb200542ae165cd7d183"},
    {file = "pydantic_core-2.16.3-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:cbcc558401de90a746d02ef330c528f2e668c83350f045833543cd57ecead1ad"},
    {file = "pydantic_core-2.16.3-pp310-pypy310_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:fee427241c2d9fb7192b658190f9f5fd6dfe41e02f3c1489d2ec1e6a5ab1e04a"},
    {file = "pydantic_core-2.16.3-pp310-pypy310_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:f4cb85f693044e0f71f394ff76c98ddc1bc0953e48c061725e540396d5c8a2e1"},
    {file = "pydantic_core-2.16.3-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:b29eeb887aa931c2fcef5aa515d9d176d25006794610c264ddc114c053bf96fe"},
    {file = "pydantic_core-2.16.3-pp39-pypy39_pp73-macosx_10_12_x86_64.whl", hash = "sha256:a425479ee40ff021f8216c9d07a6a3b54b31c8267c6e17aa88b70d7ebd0e5e5b"},
    {file = "pydantic_core-2.16.3-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:5c5cbc703168d1b7a838668998308018a2718c2130595e8e190220238addc96f"},
    {file = "pydantic_core-2.16.3-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:99b6add4c0b39a513d323d3b93bc173dac663c27b99860dd5bf491b240d26137"},
    {file = "pydantic_core-2.16.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:75f76ee558751746d6a38f89d60b6228fa174e5172d143886af0f85aa306fd89"},
    {file = "pydantic_core-2.16.3-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:00ee1c97b5364b84cb0bd82e9bbf645d5e2871fb8c58059d158412fee2d33d8a"},
    {file = "pydantic_core-2.16.3-pp39-pypy39_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:287073c66748f624be4cef893ef9174e3eb88fe0b8a78dc22e88eca4bc357ca6"},
    {file = "pydantic_core-2.16.3-pp39-pypy39_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:ed25e1835c00a332cb10c683cd39da96a719ab1dfc08427d476bce41b92531fc"},
    {file = "pydantic_core-2.16.3-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:86b3d0033580bd6bbe07590152007275bd7af95f98eaa5bd36f3da219dcd93da"},
    {file = "pydantic_core-2.16.3.tar.gz", hash = "sha256:1cac689f80a3abab2d3c0048b29eea5751114054f032a941a32de4c852c59cad"},
]

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pydantic-settings"
version = "2.1.0"
description = "Settings management using Pydantic"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "pydantic_settings-2.1.0-py3-none-any.whl", hash = "sha256:7621c0cb5d90d1140d2f0ef557bdf03573aac7035948109adf2574770b77605a"},
    {file = "pydantic_settings-2.1.0.tar.gz", hash = "sha256:26b1492e0a24755626ac5e6d715e9077ab7ad4fb5f19a8b7ed7011d52f36141c"},
]

[package.dependencies]
pydantic = ">=2.3.0"
python-dotenv = ">=0.21.0"

[[package]]
name = "pyflakes"
version = "3.3.2"
description = "passive checker of Python programs"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pyflakes-3.3.2-py2.py3-none-any.whl", hash = "sha256:5039c8339cbb1944045f4ee5466908906180f13cc99cc9949348d10f82a5c32a"},
    {file = "pyflakes-3.3.2.tar.gz", hash = "sha256:6dfd61d87b97fba5dcfaaf781171ac16be16453be6d816147989e7f6e6a9576b"},
]

[[package]]
name = "pygments"
version = "2.19.1"
description = "Pygments is a syntax highlighting package written in Python."
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "pygments-2.19.1-py3-none-any.whl", hash = "sha256:9ea1544ad55cecf4b8242fab6dd35a93bbce657034b0611ee383099054ab6d8c"},
    {file = "pygments-2.19.1.tar.gz", hash = "sha256:61c16d2a8576dc0649d9f39e089b5f02bcd27fba10d8fb4dcc28173f7a45151f"},
]

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pypika-tortoise"
version = "0.6.1"
description = "Forked from pypika and streamline just for tortoise-orm"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "pypika_tortoise-0.6.1-py3-none-any.whl", hash = "sha256:da15886f37b347e71f0869f9e4ee2f9259e6bb57455b45299c6c23d7927cbb6e"},
    {file = "pypika_tortoise-0.6.1.tar.gz", hash = "sha256:36ec2c88c255b9ed7ef49a6068cdeac10dafd4ddfeb828205d3afc092507fc3a"},
]

[[package]]
name = "pytest"
version = "8.4.0"
description = "pytest: simple powerful testing with Python"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest-8.4.0-py3-none-any.whl", hash = "sha256:f40f825768ad76c0977cbacdf1fd37c6f7a468e460ea6a0636078f8972d4517e"},
    {file = "pytest-8.4.0.tar.gz", hash = "sha256:14d920b48472ea0dbf68e45b96cd1ffda4705f33307dcc86c676c1b5104838a6"},
]

[package.dependencies]
colorama = {version = ">=0.4", markers = "sys_platform == \"win32\""}
iniconfig = ">=1"
packaging = ">=20"
pluggy = ">=1.5,<2"
pygments = ">=2.7.2"

[package.extras]
dev = ["argcomplete", "attrs (>=19.2)", "hypothesis (>=3.56)", "mock", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-asyncio"
version = "1.1.0"
description = "Pytest support for asyncio"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_asyncio-1.1.0-py3-none-any.whl", hash = "sha256:5fe2d69607b0bd75c656d1211f969cadba035030156745ee09e7d71740e58ecf"},
    {file = "pytest_asyncio-1.1.0.tar.gz", hash = "sha256:796aa822981e01b68c12e4827b8697108f7205020f24b5793b3c41555dab68ea"},
]

[package.dependencies]
pytest = ">=8.2,<9"

[package.extras]
docs = ["sphinx (>=5.3)", "sphinx-rtd-theme (>=1)"]
testing = ["coverage (>=6.2)", "hypothesis (>=5.7.1)"]

[[package]]
name = "pytest-cov"
version = "6.1.1"
description = "Pytest plugin for measuring coverage."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_cov-6.1.1-py3-none-any.whl", hash = "sha256:bddf29ed2d0ab6f4df17b4c55b0a657287db8684af9c42ea546b21b1041b3dde"},
    {file = "pytest_cov-6.1.1.tar.gz", hash = "sha256:46935f7aaefba760e716c2ebfbe1c216240b9592966e7da99ea8292d4d3e2a0a"},
]

[package.dependencies]
coverage = {version = ">=7.5", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["fields", "hunter", "process-tests", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytest-env"
version = "1.1.5"
description = "pytest plugin that allows you to add environment variables."
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "pytest_env-1.1.5-py3-none-any.whl", hash = "sha256:ce90cf8772878515c24b31cd97c7fa1f4481cd68d588419fd45f10ecaee6bc30"},
    {file = "pytest_env-1.1.5.tar.gz", hash = "sha256:91209840aa0e43385073ac464a554ad2947cc2fd663a9debf88d03b01e0cc1cf"},
]

[package.dependencies]
pytest = ">=8.3.3"

[package.extras]
testing = ["covdefaults (>=2.3)", "coverage (>=7.6.1)", "pytest-mock (>=3.14)"]

[[package]]
name = "pytest-mock"
version = "3.14.1"
description = "Thin-wrapper around the mock package for easier use with pytest"
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "pytest_mock-3.14.1-py3-none-any.whl", hash = "sha256:178aefcd11307d874b4cd3100344e7e2d888d9791a6a1d9bfe90fbc1b74fd1d0"},
    {file = "pytest_mock-3.14.1.tar.gz", hash = "sha256:159e9edac4c451ce77a5cdb9fc5d1100708d2dd4ba3c3df572f14097351af80e"},
]

[package.dependencies]
pytest = ">=6.2.5"

[package.extras]
dev = ["pre-commit", "pytest-asyncio", "tox"]

[[package]]
name = "python-dotenv"
version = "1.0.1"
description = "Read key-value pairs from a .env file and set them as environment variables"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "python-dotenv-1.0.1.tar.gz", hash = "sha256:e324ee90a023d808f1959c46bcbc04446a10ced277783dc6ee09987c37ec10ca"},
    {file = "python_dotenv-1.0.1-py3-none-any.whl", hash = "sha256:f7b63ef50f1b690dddf550d03497b66d609393b40b564ed0d674909a68ebf16a"},
]

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "pytz"
version = "2025.2"
description = "World timezone definitions, modern and historical"
optional = false
python-versions = "*"
groups = ["main"]
files = [
    {file = "pytz-2025.2-py2.py3-none-any.whl", hash = "sha256:5ddf76296dd8c44c26eb8f4b6f35488f3ccbf6fbbd7adee0b7262d43f0ec2f00"},
    {file = "pytz-2025.2.tar.gz", hash = "sha256:360b9e3dbb49a209c21ad61809c7fb453643e048b38924c765813546746e81c3"},
]

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
optional = false
python-versions = ">=3.8"
groups = ["dev"]
files = [
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086"},
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68"},
    {file = "PyYAML-6.0.2-cp310-cp310-win32.whl", hash = "sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99"},
    {file = "PyYAML-6.0.2-cp310-cp310-win_amd64.whl", hash = "sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e"},
    {file = "PyYAML-6.0.2-cp311-cp311-win32.whl", hash = "sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5"},
    {file = "PyYAML-6.0.2-cp311-cp311-win_amd64.whl", hash = "sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b"},
    {file = "PyYAML-6.0.2-cp312-cp312-win32.whl", hash = "sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4"},
    {file = "PyYAML-6.0.2-cp312-cp312-win_amd64.whl", hash = "sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652"},
    {file = "PyYAML-6.0.2-cp313-cp313-win32.whl", hash = "sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183"},
    {file = "PyYAML-6.0.2-cp313-cp313-win_amd64.whl", hash = "sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563"},
    {file = "PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083"},
    {file = "PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706"},
    {file = "PyYAML-6.0.2-cp38-cp38-win32.whl", hash = "sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a"},
    {file = "PyYAML-6.0.2-cp38-cp38-win_amd64.whl", hash = "sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725"},
    {file = "PyYAML-6.0.2-cp39-cp39-win32.whl", hash = "sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631"},
    {file = "PyYAML-6.0.2-cp39-cp39-win_amd64.whl", hash = "sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8"},
    {file = "pyyaml-6.0.2.tar.gz", hash = "sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e"},
]

[[package]]
name = "rich"
version = "14.0.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
optional = false
python-versions = ">=3.8.0"
groups = ["dev"]
files = [
    {file = "rich-14.0.0-py3-none-any.whl", hash = "sha256:1c9491e1951aac09caffd42f448ee3d04e58923ffe14993f6e83068dc395d7e0"},
    {file = "rich-14.0.0.tar.gz", hash = "sha256:82f1bc23a6a21ebca4ae0c45af9bdbc492ed20231dcb63f297d6d1021a9d5725"},
]

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "ruff"
version = "0.11.12"
description = "An extremely fast Python linter and code formatter, written in Rust."
optional = false
python-versions = ">=3.7"
groups = ["dev"]
files = [
    {file = "ruff-0.11.12-py3-none-linux_armv6l.whl", hash = "sha256:c7680aa2f0d4c4f43353d1e72123955c7a2159b8646cd43402de6d4a3a25d7cc"},
    {file = "ruff-0.11.12-py3-none-macosx_10_12_x86_64.whl", hash = "sha256:2cad64843da9f134565c20bcc430642de897b8ea02e2e79e6e02a76b8dcad7c3"},
    {file = "ruff-0.11.12-py3-none-macosx_11_0_arm64.whl", hash = "sha256:9b6886b524a1c659cee1758140138455d3c029783d1b9e643f3624a5ee0cb0aa"},
    {file = "ruff-0.11.12-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3cc3a3690aad6e86c1958d3ec3c38c4594b6ecec75c1f531e84160bd827b2012"},
    {file = "ruff-0.11.12-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:f97fdbc2549f456c65b3b0048560d44ddd540db1f27c778a938371424b49fe4a"},
    {file = "ruff-0.11.12-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:74adf84960236961090e2d1348c1a67d940fd12e811a33fb3d107df61eef8fc7"},
    {file = "ruff-0.11.12-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl", hash = "sha256:b56697e5b8bcf1d61293ccfe63873aba08fdbcbbba839fc046ec5926bdb25a3a"},
    {file = "ruff-0.11.12-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:4d47afa45e7b0eaf5e5969c6b39cbd108be83910b5c74626247e366fd7a36a13"},
    {file = "ruff-0.11.12-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:692bf9603fe1bf949de8b09a2da896f05c01ed7a187f4a386cdba6760e7f61be"},
    {file = "ruff-0.11.12-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:08033320e979df3b20dba567c62f69c45e01df708b0f9c83912d7abd3e0801cd"},
    {file = "ruff-0.11.12-py3-none-musllinux_1_2_aarch64.whl", hash = "sha256:929b7706584f5bfd61d67d5070f399057d07c70585fa8c4491d78ada452d3bef"},
    {file = "ruff-0.11.12-py3-none-musllinux_1_2_armv7l.whl", hash = "sha256:7de4a73205dc5756b8e09ee3ed67c38312dce1aa28972b93150f5751199981b5"},
    {file = "ruff-0.11.12-py3-none-musllinux_1_2_i686.whl", hash = "sha256:2635c2a90ac1b8ca9e93b70af59dfd1dd2026a40e2d6eebaa3efb0465dd9cf02"},
    {file = "ruff-0.11.12-py3-none-musllinux_1_2_x86_64.whl", hash = "sha256:d05d6a78a89166f03f03a198ecc9d18779076ad0eec476819467acb401028c0c"},
    {file = "ruff-0.11.12-py3-none-win32.whl", hash = "sha256:f5a07f49767c4be4772d161bfc049c1f242db0cfe1bd976e0f0886732a4765d6"},
    {file = "ruff-0.11.12-py3-none-win_amd64.whl", hash = "sha256:5a4d9f8030d8c3a45df201d7fb3ed38d0219bccd7955268e863ee4a115fa0832"},
    {file = "ruff-0.11.12-py3-none-win_arm64.whl", hash = "sha256:65194e37853158d368e333ba282217941029a28ea90913c67e558c611d04daa5"},
    {file = "ruff-0.11.12.tar.gz", hash = "sha256:43cf7f69c7d7c7d7513b9d59c5d8cafd704e05944f978614aa9faff6ac202603"},
]

[[package]]
name = "setuptools"
version = "80.9.0"
description = "Easily download, build, install, upgrade, and uninstall Python packages"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "setuptools-80.9.0-py3-none-any.whl", hash = "sha256:062d34222ad13e0cc312a4c02d73f059e86a4acbfbdea8f8f76b28c99f306922"},
    {file = "setuptools-80.9.0.tar.gz", hash = "sha256:f36b47402ecde768dbfafc46e8e4207b4360c654f1f3bb84475f0a28628fb19c"},
]

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1) ; sys_platform != \"cygwin\"", "ruff (>=0.8.0) ; sys_platform != \"cygwin\""]
core = ["importlib_metadata (>=6) ; python_version < \"3.10\"", "jaraco.functools (>=4)", "jaraco.text (>=3.7)", "more_itertools", "more_itertools (>=8.8)", "packaging (>=24.2)", "platformdirs (>=4.2.2)", "tomli (>=2.0.1) ; python_version < \"3.11\"", "wheel (>=0.43.0)"]
cover = ["pytest-cov"]
doc = ["furo", "jaraco.packaging (>=9.3)", "jaraco.tidelift (>=1.4)", "pygments-github-lexers (==0.0.5)", "pyproject-hooks (!=1.1)", "rst.linker (>=1.9)", "sphinx (>=3.5)", "sphinx-favicon", "sphinx-inline-tabs", "sphinx-lint", "sphinx-notfound-page (>=1,<2)", "sphinx-reredirects", "sphinxcontrib-towncrier", "towncrier (<24.7)"]
enabler = ["pytest-enabler (>=2.2)"]
test = ["build[virtualenv] (>=1.0.3)", "filelock (>=3.4.0)", "ini2toml[lite] (>=0.14)", "jaraco.develop (>=7.21) ; python_version >= \"3.9\" and sys_platform != \"cygwin\"", "jaraco.envs (>=2.2)", "jaraco.path (>=3.7.2)", "jaraco.test (>=5.5)", "packaging (>=24.2)", "pip (>=19.1)", "pyproject-hooks (!=1.1)", "pytest (>=6,!=8.1.*)", "pytest-home (>=0.5)", "pytest-perf ; sys_platform != \"cygwin\"", "pytest-subprocess", "pytest-timeout", "pytest-xdist (>=3)", "tomli-w (>=1.0.0)", "virtualenv (>=13.0.0)", "wheel (>=0.44.0)"]
type = ["importlib_metadata (>=7.0.2) ; python_version < \"3.10\"", "jaraco.develop (>=7.21) ; sys_platform != \"cygwin\"", "mypy (==1.14.*)", "pytest-mypy"]

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "sniffio-1.3.1-py3-none-any.whl", hash = "sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2"},
    {file = "sniffio-1.3.1.tar.gz", hash = "sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc"},
]

[[package]]
name = "starlette"
version = "0.46.2"
description = "The little ASGI library that shines."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "starlette-0.46.2-py3-none-any.whl", hash = "sha256:595633ce89f8ffa71a015caed34a5b2dc1c0cdb3f0f1fbd1e69339cf2abeec35"},
    {file = "starlette-0.46.2.tar.gz", hash = "sha256:7f7361f34eed179294600af672f565727419830b54b7b084efe44bb82d2fccd5"},
]

[package.dependencies]
anyio = ">=3.6.2,<5"

[package.extras]
full = ["httpx (>=0.27.0,<0.29.0)", "itsdangerous", "jinja2", "python-multipart (>=0.0.18)", "pyyaml"]

[[package]]
name = "stevedore"
version = "5.4.1"
description = "Manage dynamic plugins for Python applications"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "stevedore-5.4.1-py3-none-any.whl", hash = "sha256:d10a31c7b86cba16c1f6e8d15416955fc797052351a56af15e608ad20811fcfe"},
    {file = "stevedore-5.4.1.tar.gz", hash = "sha256:3135b5ae50fe12816ef291baff420acb727fcd356106e3e9cbfa9e5985cd6f4b"},
]

[package.dependencies]
pbr = ">=2.0.0"

[[package]]
name = "tortoise-orm"
version = "0.25.1"
description = "Easy async ORM for python, built with relations in mind"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "tortoise_orm-0.25.1-py3-none-any.whl", hash = "sha256:df0ef7e06eb0650a7e5074399a51ee6e532043308c612db2cac3882486a3fd9f"},
    {file = "tortoise_orm-0.25.1.tar.gz", hash = "sha256:4d5bfd13d5750935ffe636a6b25597c5c8f51c47e5b72d7509d712eda1a239fe"},
]

[package.dependencies]
aiosqlite = ">=0.16.0,<1.0.0"
iso8601 = {version = ">=2.1.0,<3.0.0", markers = "python_version < \"4.0\""}
pypika-tortoise = {version = ">=0.6.1,<1.0.0", markers = "python_version < \"4.0\""}
pytz = "*"

[package.extras]
accel = ["ciso8601 ; sys_platform != \"win32\" and implementation_name == \"cpython\"", "orjson", "uvloop ; sys_platform != \"win32\" and implementation_name == \"cpython\""]
aiomysql = ["aiomysql"]
asyncmy = ["asyncmy (>=0.2.8,<1.0.0) ; python_version < \"4.0\""]
asyncodbc = ["asyncodbc (>=0.1.1,<1.0.0) ; python_version < \"4.0\""]
asyncpg = ["asyncpg"]
psycopg = ["psycopg[binary,pool] (>=3.0.12,<4.0.0)"]

[[package]]
name = "typing-extensions"
version = "4.14.0"
description = "Backported and Experimental Type Hints for Python 3.9+"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "typing_extensions-4.14.0-py3-none-any.whl", hash = "sha256:a1514509136dd0b477638fc68d6a91497af5076466ad0fa6c338e44e359944af"},
    {file = "typing_extensions-4.14.0.tar.gz", hash = "sha256:8676b788e32f02ab42d9e7c61324048ae4c6d844a399eebace3d4979d75ceef4"},
]

[[package]]
name = "tzdata"
version = "2025.2"
description = "Provider of IANA time zone data"
optional = false
python-versions = ">=2"
groups = ["dev"]
files = [
    {file = "tzdata-2025.2-py2.py3-none-any.whl", hash = "sha256:1a403fada01ff9221ca8044d701868fa132215d84beb92242d9acd2147f667a8"},
    {file = "tzdata-2025.2.tar.gz", hash = "sha256:b60a638fcc0daffadf82fe0f57e53d06bdec2f36c4df66280ae79bce6bd6f2b9"},
]

[[package]]
name = "uvicorn"
version = "0.27.1"
description = "The lightning-fast ASGI server."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "uvicorn-0.27.1-py3-none-any.whl", hash = "sha256:5c89da2f3895767472a35556e539fd59f7edbe9b1e9c0e1c99eebeadc61838e4"},
    {file = "uvicorn-0.27.1.tar.gz", hash = "sha256:3d9a267296243532db80c83a959a3400502165ade2c1338dea4e67915fd4745a"},
]

[package.dependencies]
click = ">=7.0"
h11 = ">=0.8"

[package.extras]
standard = ["colorama (>=0.4) ; sys_platform == \"win32\"", "httptools (>=0.5.0)", "python-dotenv (>=0.13)", "pyyaml (>=5.1)", "uvloop (>=0.14.0,!=0.15.0,!=0.15.1) ; sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"PyPy\"", "watchfiles (>=0.13)", "websockets (>=10.4)"]

[metadata]
lock-version = "2.1"
python-versions = "~3.11"
content-hash = "81701d5272b908e75e55f78dc3877536fd48e1e81b8fd9da5d77216b4fa5f119"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/poetry.lock ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/pyproject.toml ==========
[tool.poetry]
name = "offers_app"
version = "1.0.0"
description = "Microservicio de ofertas para transporte de paquetes."
authors = [
  "César Forero <ca.forero10@uniandes.edu.co>"
]
license = "MIT"
readme = "README.md"
package-mode = false
packages = [{include = "*", from = "src"}]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "~3.11"
fastapi = "~0.115.12"
uvicorn = "~0.27.1"
python-dotenv = "~1.0.1"
pydantic = "~2.6.1"
pydantic-settings = "~2.1.0"
tortoise-orm = "~0.25.1"
asyncpg = "~0.30.0"

[tool.poetry.group.dev.dependencies]
black = "~25.1.0"
ruff = "~0.11.12"
bandit = "~1.8.3"
flake8 = "~7.2.0"
isort = "~6.0.1"
pytest = "~8.4.0"
pytest-cov = "~6.1.1"
pytest-mock = "~3.14.1"
pytest-env = "~1.1.5"
faker = "~37.3.0"
pytest-asyncio = "^1.1.0"

[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/black_compatibility/
profile = "black"
multi_line_output = 3

[tool.bandit]
# See https://bandit.readthedocs.io/en/latest/config.html for reference
exclude_dirs = ["./tests"]
skips = ["B101"]

[tool.pydoclint]
# See https://jsh9.github.io/pydoclint/how_to_config.html#2-specifying-options-in-a-configuration-file for config reference.
style = "google"
arg-type-hints-in-docstring = true
check-return-types = false
check-yield-types = false

[tool.ruff]
# Directories to consider “first party” imports
src = ["src"]
fix = true

[tool.ruff.lint.pydocstyle]
# See https://docs.astral.sh/ruff/settings/#pydocstyle for reference.
convention = "google"

[tool.ruff.lint.mccabe]
# See https://docs.astral.sh/ruff/settings/#mccabe for reference.
max-complexity = 20

[tool.pytest.ini_options]
# https://docs.pytest.org/en/7.2.x/reference/customize.html for reference
python_files = "test_*.py"
pythonpath = "src"
asyncio_mode = "auto"
testpaths = [
  "tests"
]
env = [ # environment variables for testing
  "LOG_LEVEL = INFO",
  "POSTGRES_HOST=localhost",
  "POSTGRES_USER=testuser",
  "POSTGRES_PASSWORD=testpass",
  "POSTGRES_DB=testoffer_db",
  "POSTGRES_PORT=5432",
]========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/pyproject.toml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/models.py ==========
import uuid

from tortoise import fields, models

class Offer(models.Model):
    id = fields.UUIDField(primary_key=True, default=uuid.uuid4)
    post_id = fields.CharField(max_length=64)
    user_id = fields.CharField(max_length=64)
    description = fields.CharField(max_length=140)
    size = fields.CharField(max_length=6)
    fragile = fields.BooleanField()
    offer = fields.DecimalField(max_digits=10, decimal_places=2)
    created_at = fields.DatetimeField(auto_now_add=True)

    class Meta:
        table = "offers"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/models.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/offer_repository_adapter.py ==========
from typing import Dict, List, Optional

from adapters.bd.models import Offer
from domain.models.offer import Offer as DomainOffer
from domain.models.offer import OfferCreate
from domain.ports.offer_repository_port import OfferRepositoryPort
from errors import OfferNotFoundError

class DBOfferRepositoryAdapter(OfferRepositoryPort):
    async def create(self, offer_create: OfferCreate) -> Dict:
        offer_db = Offer(
            post_id=offer_create.postId,
            user_id=offer_create.userId,
            description=offer_create.description,
            size=offer_create.size.value,
            fragile=offer_create.fragile,
            offer=offer_create.offer,
        )
        await offer_db.save()
        return {
            "id": offer_db.id,
            "userId": str(offer_db.user_id),
            "createdAt": offer_db.created_at.isoformat(),
        }

    async def get_by_id(self, offer_id: str) -> Optional[DomainOffer]:
        offer_db = await Offer.get_or_none(id=offer_id)
        if offer_db is None:
            return None
        return DomainOffer.model_validate(offer_db)

    async def get_all(self) -> List[DomainOffer]:
        offers_db = await Offer.all()
        return [DomainOffer.model_validate(offer_db) for offer_db in offers_db]

    async def delete(self, offer_id: str) -> DomainOffer:
        offer_db = await Offer.get_or_none(id=offer_id)
        if not offer_db:
            raise OfferNotFoundError(f"Offer with id {offer_id} not found")
        domain_offer = DomainOffer.model_validate(offer_db)
        await offer_db.delete()
        return domain_offer

    async def delete_all_offers(self) -> None:
        """Delete all offers."""
        await Offer.all().delete()
        return None

    async def get_offers_filter(self, post_id: str, user_id: str) -> List[DomainOffer]:
        dict_filter = {}
        if post_id is not None:
            dict_filter["post_id"] = post_id
        if user_id is not None:
            dict_filter["user_id"] = user_id
        offers_db = await Offer.filter(**dict_filter).all()
        return [DomainOffer.model_validate(offer_db) for offer_db in offers_db]

    async def count(self) -> int:
        """Count all offers."""
        return await Offer.all().count()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/adapters/bd/offer_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/assembly.py ==========
from adapters.bd.offer_repository_adapter import DBOfferRepositoryAdapter
from domain.use_cases.base_use_case import BaseUseCase
from domain.use_cases.create_offer_use_case import CreateOfferUseCase
from domain.use_cases.delete_all_offers_use_case import DeleteAllOffersUseCase
from domain.use_cases.delete_offer_use_case import DeleteOfferUseCase
from domain.use_cases.get_all_offers_use_case import GetAllOffersUseCase
from domain.use_cases.get_filter_offers_use_case import GetFilterOffersUseCase
from domain.use_cases.get_offer_use_case import GetOfferUseCase
from domain.use_cases.get_offers_count_use_case import GetOffersCountUseCase

offer_repository: DBOfferRepositoryAdapter = DBOfferRepositoryAdapter()

# Offer use cases
def build_create_offer_use_case() -> BaseUseCase:
    """Get create offer use case."""
    return CreateOfferUseCase(offer_repository)

def build_get_offer_use_case() -> BaseUseCase:
    """Get offer use case."""
    return GetOfferUseCase(offer_repository)

def build_get_all_offers_use_case() -> BaseUseCase:
    """Get all offers use case."""
    return GetAllOffersUseCase(offer_repository)

def build_get_filter_offers_use_case() -> BaseUseCase:
    """Get filter offers use case."""
    return GetFilterOffersUseCase(offer_repository)

def build_delete_offer_use_case() -> BaseUseCase:
    """Get delete offer use case."""
    return DeleteOfferUseCase(offer_repository)

def build_delete_all_offers_use_case() -> BaseUseCase:
    """Get delete all offers use case."""
    return DeleteAllOffersUseCase(offer_repository)

def build_get_offers_count_use_case() -> BaseUseCase:
    """Get offers count use case."""
    return GetOffersCountUseCase(offer_repository)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/assembly.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/config.py ==========
import os
from functools import lru_cache

class classproperty:
    def __init__(self, fget):
        self.fget = fget

    def __get__(self, instance, owner):
        return self.fget(owner)

class Settings:
    """Application settings."""

    @classproperty
    @lru_cache()
    def app_name(self) -> str:
        return os.getenv("APP_NAME", "Offers App")

    @classproperty
    @lru_cache()
    def log_level(self) -> str:
        return os.getenv("LOG_LEVEL", "DEBUG")

    @classproperty
    @lru_cache()
    def db_url(self) -> str:
        user = os.getenv("POSTGRES_USER", "testuser")
        password = os.getenv("POSTGRES_PASSWORD", "testpass")
        host = os.getenv("POSTGRES_HOST", "localhost")
        port = os.getenv("POSTGRES_PORT", "5432")
        db = os.getenv("POSTGRES_DB", "testoffer_db")
        return f"postgres://{user}:{password}@{host}:{port}/{db}"

    @classproperty
    @lru_cache()
    def tortoise_config(self) -> dict:
        return {
            "connections": {"default": Settings.db_url},
            "apps": {
                "models": {
                    "models": ["adapters.bd.models"],
                    "default_connection": "default",
                }
            },
        }
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/config.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/exceptions.py ==========
"""Domain exceptions for the offers microservice."""

class DomainException(Exception):
    """Base domain exception."""

    pass

class ValidationException(DomainException):
    """Base validation exception."""

    pass

class FormatValidationException(ValidationException):
    """Exception for format validation errors (should return 400)."""

    pass

class BusinessRuleValidationException(ValidationException):
    """Exception for business rule validation errors (should return 412)."""

    pass

class UUIDFormatException(FormatValidationException):
    """Exception for invalid UUID format."""

    pass

class MissingFieldException(FormatValidationException):
    """Exception for missing required fields."""

    pass

class InvalidSizeException(BusinessRuleValidationException):
    """Exception for invalid size enum values."""

    pass

class NegativeOfferException(BusinessRuleValidationException):
    """Exception for negative offer amounts."""

    pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/exceptions.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/models/__init__.py ==========
from .offer import Offer, OfferCreate, OfferResponse, SizeEnum

__all__ = ["Offer", "OfferCreate", "OfferResponse", "SizeEnum"]
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/models/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/models/offer.py ==========
from pydantic import BaseModel, Field, ConfigDict, field_validator
from datetime import datetime
from decimal import Decimal
from enum import Enum
from uuid import UUID

from domain.exceptions import (
    InvalidSizeException,
    NegativeOfferException,
    UUIDFormatException,
)

class SizeEnum(str, Enum):
    LARGE = "LARGE"
    MEDIUM = "MEDIUM"
    SMALL = "SMALL"

class Offer(BaseModel):
    model_config = ConfigDict(from_attributes=True, populate_by_name=True)

    id: UUID
    postId: str = Field(alias="post_id")
    userId: str = Field(alias="user_id")
    description: str
    size: SizeEnum
    fragile: bool
    offer: Decimal
    createdAt: datetime = Field(alias="created_at")

class OfferCreate(BaseModel):
    model_config = ConfigDict(populate_by_name=True)

    postId: str = Field(..., alias="postId")
    userId: str = Field(..., alias="userId")
    description: str
    size: SizeEnum
    fragile: bool
    offer: Decimal

    @field_validator("postId", "userId")
    @classmethod
    def validate_uuid_format(cls, v):
        try:
            from uuid import UUID

            UUID(v)
        except ValueError:
            raise UUIDFormatException("PostId and UserID must be valid UUIDs")
        return v

    @field_validator("offer")
    @classmethod
    def offer_must_be_positive(cls, v):
        if v < 0:
            raise NegativeOfferException("Offer must be positive")
        return v

    @field_validator("size")
    @classmethod
    def size_must_be_valid(cls, v):
        if v not in [SizeEnum.LARGE, SizeEnum.MEDIUM, SizeEnum.SMALL]:
            raise InvalidSizeException("Size must be LARGE, MEDIUM, or SMALL")
        return v

class OfferResponse(BaseModel):
    model_config = ConfigDict(populate_by_name=True)

    id: UUID
    userId: str
    createdAt: datetime
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/models/offer.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/ports/__init__.py ==========
from .offer_repository_port import OfferRepositoryPort

__all__ = ["OfferRepositoryPort"]
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/ports/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/ports/offer_repository_port.py ==========
from abc import ABC, abstractmethod
from typing import Dict, List, Optional

from domain.models.offer import Offer, OfferCreate

class OfferRepositoryPort(ABC):
    """Offer repository interface."""

    @abstractmethod
    async def create(self, offer: OfferCreate) -> Dict:
        """Create a new offer."""
        pass

    @abstractmethod
    async def get_by_id(self, offer_id: str) -> Optional[Offer]:
        """Get offer by ID."""
        pass

    @abstractmethod
    async def get_all(self) -> List[Offer]:
        """Get all offers."""
        pass

    @abstractmethod
    async def delete(self, offer_id: str) -> Offer:
        """Delete an offer."""
        pass

    @abstractmethod
    async def delete_all_offers(self) -> None:
        """Delete all offers."""
        pass

    @abstractmethod
    async def get_offers_filter(self, post_id: str, user_id: str) -> List[Offer]:
        """Get offers by filters."""
        pass

    @abstractmethod
    async def count(self) -> int:
        """Count all offers."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/ports/offer_repository_port.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/services/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/services/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/services/validation_service.py ==========
"""Validation service for offer creation following hexagonal architecture."""

from typing import Any, Dict
from uuid import UUID

from domain.exceptions import (
    FormatValidationException,
    InvalidSizeException,
    MissingFieldException,
    NegativeOfferException,
    UUIDFormatException,
)
from domain.models.offer import SizeEnum

class OfferValidationService:
    """Service to validate offer data before creation."""

    @staticmethod
    def validate_offer_data(data: Dict[str, Any]) -> None:
        """Validate offer data and raise appropriate domain exceptions."""
        required_fields = [
            "postId",
            "userId",
            "description",
            "size",
            "fragile",
            "offer",
        ]
        missing_fields = [field for field in required_fields if field not in data]
        if missing_fields:
            raise MissingFieldException(
                f"Missing required fields: {', '.join(missing_fields)}"
            )

        for field in ["postId", "userId"]:
            if field in data:
                try:
                    UUID(data[field])
                except ValueError:
                    raise UUIDFormatException(f"Invalid UUID format for {field}")

        if "size" in data:
            try:
                SizeEnum(data["size"])
            except ValueError:
                raise InvalidSizeException(
                    f"Invalid size '{data['size']}'. Must be LARGE, MEDIUM, or SMALL"
                )

        if "offer" in data:
            try:
                offer_value = float(data["offer"])
                if offer_value < 0:
                    raise NegativeOfferException("Offer amount must be positive")
            except (ValueError, TypeError):
                raise FormatValidationException("Offer must be a valid number")
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/services/validation_service.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/base_use_case.py ==========
from abc import ABC, abstractmethod

class BaseUseCase(ABC):
    """Base use case class."""

    @abstractmethod
    def execute(self, *args, **kwargs):
        """Execute the use case."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/base_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/create_offer_use_case.py ==========
from typing import Dict

from domain.models.offer import OfferCreate
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class CreateOfferUseCase(BaseUseCase):
    """Use case for creating an offer."""

    def __init__(self, offer_repository: OfferRepositoryPort):
        self.offer_repository = offer_repository

    async def execute(self, offer: OfferCreate) -> Dict:
        """Create a new offer."""
        return await self.offer_repository.create(offer)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/create_offer_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/delete_all_offers_use_case.py ==========
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class DeleteAllOffersUseCase(BaseUseCase):
    """Use case for deleting all offers."""

    def __init__(self, offer_repository: OfferRepositoryPort):
        self.offer_repository = offer_repository

    async def execute(self) -> None:
        """Delete all offers."""
        return await self.offer_repository.delete_all_offers()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/delete_all_offers_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/delete_offer_use_case.py ==========
from domain.models.offer import Offer
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class DeleteOfferUseCase(BaseUseCase):
    """Use case for deleting an offer."""

    def __init__(self, offer_repository: OfferRepositoryPort):
        self.offer_repository = offer_repository

    async def execute(self, offer_id: str) -> Offer:
        """Delete an offer."""
        return await self.offer_repository.delete(offer_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/delete_offer_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_all_offers_use_case.py ==========
from typing import List

from domain.models.offer import Offer
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetAllOffersUseCase(BaseUseCase):
    """Use case for getting all offers."""

    def __init__(self, offer_repository: OfferRepositoryPort):
        self.offer_repository = offer_repository

    async def execute(self) -> List[Offer]:
        """Get all offers."""
        return await self.offer_repository.get_all()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_all_offers_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_filter_offers_use_case.py ==========
from typing import List

from domain.models.offer import Offer
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetFilterOffersUseCase(BaseUseCase):
    """Use case for getting filtered offers."""

    def __init__(self, offer_repository: OfferRepositoryPort):
        self.offer_repository = offer_repository

    async def execute(self, post_id: str = None, user_id: str = None) -> List[Offer]:
        """Get filtered offers."""
        return await self.offer_repository.get_offers_filter(post_id, user_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_filter_offers_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_offer_use_case.py ==========
from typing import Optional

from domain.models.offer import Offer
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetOfferUseCase(BaseUseCase):
    """Use case for getting an offer by ID."""

    def __init__(self, offer_repository: OfferRepositoryPort):
        self.offer_repository = offer_repository

    async def execute(self, offer_id: str) -> Optional[Offer]:
        """Get an offer by ID."""
        return await self.offer_repository.get_by_id(offer_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_offer_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_offers_count_use_case.py ==========
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetOffersCountUseCase(BaseUseCase):
    """Use case for getting count of offers."""

    def __init__(self, offer_repository: OfferRepositoryPort):
        self.offer_repository = offer_repository

    async def execute(self) -> int:
        """Get count of offers."""
        return await self.offer_repository.count()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/domain/use_cases/get_offers_count_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/main.py ==========
from fastapi import FastAPI
from tortoise.contrib.fastapi import register_tortoise

from config import Settings
from entrypoints.api.routers.offer_router import router as offer_router

app = FastAPI(title=Settings.app_name)

app.include_router(offer_router)

register_tortoise(
    app,
    config=Settings.tortoise_config,
    generate_schemas=True,
    add_exception_handlers=True,
)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/main.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/routers/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/routers/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/routers/offer_router.py ==========
import uuid
from typing import List

from fastapi import APIRouter, Depends, HTTPException, Query, Request
from fastapi.responses import JSONResponse, PlainTextResponse
from pydantic import ValidationError

from assembly import (
    build_create_offer_use_case,
    build_delete_all_offers_use_case,
    build_delete_offer_use_case,
    build_get_all_offers_use_case,
    build_get_filter_offers_use_case,
    build_get_offer_use_case,
    build_get_offers_count_use_case,
)
from domain.exceptions import (
    BusinessRuleValidationException,
    FormatValidationException,
)
from domain.models.offer import Offer, OfferCreate, OfferResponse
from domain.services.validation_service import OfferValidationService
from domain.use_cases.base_use_case import BaseUseCase
from errors import OfferNotFoundError

router = APIRouter(prefix="/offers")

@router.get("/ping", response_class=PlainTextResponse)
def health_check():
    """Healthcheck endpoint."""
    return "pong"

@router.post("/", response_model=OfferResponse, status_code=201)
async def create_offer(
    request: Request, use_case: BaseUseCase = Depends(build_create_offer_use_case)
):
    """Create a new offer."""
    try:
        body = await request.json()

        try:
            OfferValidationService.validate_offer_data(body)
        except FormatValidationException as e:
            raise HTTPException(status_code=400, detail=str(e))
        except BusinessRuleValidationException as e:
            raise HTTPException(status_code=412, detail=str(e))

        try:
            offer = OfferCreate(**body)
        except ValidationError as ve:
            first_error = ve.errors()[0] if ve.errors() else {}
            error_msg = first_error.get("msg", "Validation error")
            error_type = first_error.get("type", "")

            if error_type in ["enum", "value_error"] or "size" in str(
                first_error.get("loc", [])
            ):
                raise HTTPException(status_code=412, detail=error_msg)
            else:
                raise HTTPException(status_code=400, detail=error_msg)

        result = await use_case.execute(offer)
        return OfferResponse(**result)
    except HTTPException:
        raise
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@router.get("/count", response_class=JSONResponse)
async def get_offers_count(
    use_case: BaseUseCase = Depends(build_get_offers_count_use_case),
):
    """Get count of offers."""
    try:
        count = await use_case.execute()
        return JSONResponse({"count": count}, status_code=200)
    except Exception as e:
        raise HTTPException(status_code=400, detail=str(e))

@router.post("/reset", response_class=JSONResponse)
async def delete_all_offers(
    use_case: BaseUseCase = Depends(build_delete_all_offers_use_case),
):
    """Delete all offers."""
    await use_case.execute()
    return JSONResponse({"msg": "Todos los datos fueron eliminados"}, status_code=200)

@router.get("/")
async def get_offers(
    post: str = Query(None, alias="post"),
    owner: str = Query(None, alias="owner"),
    use_case: BaseUseCase = Depends(build_get_filter_offers_use_case),
):
    """Get offers with optional filters."""
    try:
        if post is None and owner is None:
            all_offers_use_case = build_get_all_offers_use_case()
            offers = await all_offers_use_case.execute()
        else:
            offers = await use_case.execute(post, owner)

        # Ensure proper serialization by explicitly converting to dict with camelCase
        return [offer.model_dump(by_alias=False) for offer in offers]
    except Exception as e:
        raise HTTPException(status_code=400, detail=str(e))

@router.get("/{offer_id}")
async def get_offer(
    offer_id: str, use_case: BaseUseCase = Depends(build_get_offer_use_case)
):
    """Get an offer by ID."""
    try:
        uuid.UUID(offer_id)
    except ValueError:
        raise HTTPException(status_code=400, detail="Invalid UUID format")

    offer = await use_case.execute(offer_id)
    if not offer:
        raise HTTPException(status_code=404, detail="Offer not found")

    # Ensure proper serialization by explicitly converting to dict with camelCase
    return offer.model_dump(by_alias=False)

@router.delete("/{offer_id}", response_class=JSONResponse)
async def delete_offer(
    offer_id: str, use_case: BaseUseCase = Depends(build_delete_offer_use_case)
):
    """Delete an offer."""
    try:
        uuid.UUID(offer_id)
    except ValueError:
        raise HTTPException(status_code=400, detail="Invalid UUID format")

    try:
        await use_case.execute(offer_id)
        return JSONResponse({"msg": "la oferta fue eliminada"}, status_code=200)
    except OfferNotFoundError:
        raise HTTPException(status_code=404, detail="Offer not found")
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/entrypoints/api/routers/offer_router.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/errors.py ==========
class OfferNotFoundError(Exception):
    """Exception raised when an offer is not found."""

    pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/src/errors.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/api/offers.postman_collection.json ==========
{
	"info": {
		"_postman_id": "a1b2c3d4-5e6f-7890-abcd-ef1234567890",
		"name": "[MISO] Offers API",
		"description": "Collection to verify all the endpoints in the Offers microservice are working as expected. This collection tests the creation, retrieval, filtering, deletion, and management of offers.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "213032"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and body is pong\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.text()",
									"    pm.expect(body).to.eq(\"pong\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Database Management",
			"item": [
				{
					"name": "Reset database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and database reset\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.msg).to.eq(\"Todos los datos fueron eliminados\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get count (empty)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and count is 0\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.count).to.eq(0)",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"count"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Offer CRUD Operations",
			"item": [
				{
					"name": "Get all offers (empty)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and body is empty\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.length).to.eq(0)",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create offer - LARGE package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 and offer was created\", function () {",
									"    pm.response.to.have.status(201);",
									"    let body = pm.response.json()",
									"    pm.expect(body).to.have.property(\"id\")",
									"    pm.expect(body).to.have.property(\"userId\")",
									"    pm.expect(body).to.have.property(\"createdAt\")",
									"    pm.expect(body.userId).to.eq(\"550e8400-e29b-41d4-a716-446655440011\")",
									"});",
									"",
									"pm.collectionVariables.set(\"offer_id_1\", pm.response.json()[\"id\"]);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": \"550e8400-e29b-41d4-a716-446655440001\",\n    \"userId\": \"550e8400-e29b-41d4-a716-446655440011\",\n    \"description\": \"Puedo llevar tu paquete grande de manera segura\",\n    \"size\": \"LARGE\",\n    \"fragile\": false,\n    \"offer\": 50.00\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create offer - MEDIUM fragile package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 and offer was created\", function () {",
									"    pm.response.to.have.status(201);",
									"    let body = pm.response.json()",
									"    pm.expect(body).to.have.property(\"id\")",
									"    pm.expect(body.userId).to.eq(\"550e8400-e29b-41d4-a716-446655440012\")",
									"});",
									"",
									"pm.collectionVariables.set(\"offer_id_2\", pm.response.json()[\"id\"]);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": \"550e8400-e29b-41d4-a716-446655440002\",\n    \"userId\": \"550e8400-e29b-41d4-a716-446655440012\",\n    \"description\": \"Especialista en paquetes frágiles\",\n    \"size\": \"MEDIUM\",\n    \"fragile\": true,\n    \"offer\": 35.50\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create offer - SMALL package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 and offer was created\", function () {",
									"    pm.response.to.have.status(201);",
									"    let body = pm.response.json()",
									"    pm.expect(body).to.have.property(\"id\")",
									"    pm.expect(body.userId).to.eq(\"550e8400-e29b-41d4-a716-446655440011\")",
									"});",
									"",
									"pm.collectionVariables.set(\"offer_id_3\", pm.response.json()[\"id\"]);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": \"550e8400-e29b-41d4-a716-446655440003\",\n    \"userId\": \"550e8400-e29b-41d4-a716-446655440011\",\n    \"description\": \"Paquete pequeño, entrega rápida\",\n    \"size\": \"SMALL\",\n    \"fragile\": false,\n    \"offer\": 15.00\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and offer was retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body).to.have.property(\"id\")",
									"    pm.expect(body).to.have.property(\"postId\")",
									"    pm.expect(body).to.have.property(\"userId\")",
									"    pm.expect(body).to.have.property(\"description\")",
									"    pm.expect(body).to.have.property(\"size\")",
									"    pm.expect(body).to.have.property(\"fragile\")",
									"    pm.expect(body).to.have.property(\"offer\")",
									"    pm.expect(body).to.have.property(\"createdAt\")",
									"    pm.expect(body.id).to.eq(pm.collectionVariables.get(\"offer_id_1\"))",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/{{offer_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"{{offer_id_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all offers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and offers retrieved\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.length).to.be.greaterThan(0)",
									"    pm.expect(body.length).to.eq(3)",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get count (with data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and count is 3\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.count).to.eq(3)",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"count"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Filtering Operations",
			"item": [
				{
					"name": "Filter by post ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and filtered by post ID\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.length).to.eq(1)",
									"    pm.expect(body[0].postId).to.eq(\"550e8400-e29b-41d4-a716-446655440001\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers?post=550e8400-e29b-41d4-a716-446655440001",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							],
							"query": [
								{
									"key": "post",
									"value": "550e8400-e29b-41d4-a716-446655440001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by owner (user ID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and filtered by owner\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.length).to.eq(2)",
									"    body.forEach(offer => {",
									"        pm.expect(offer.userId).to.eq(\"550e8400-e29b-41d4-a716-446655440011\")",
									"    })",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers?owner=550e8400-e29b-41d4-a716-446655440011",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							],
							"query": [
								{
									"key": "owner",
									"value": "550e8400-e29b-41d4-a716-446655440011"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by post and owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and filtered by both criteria\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.length).to.eq(1)",
									"    pm.expect(body[0].postId).to.eq(\"550e8400-e29b-41d4-a716-446655440003\")",
									"    pm.expect(body[0].userId).to.eq(\"550e8400-e29b-41d4-a716-446655440011\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers?post=550e8400-e29b-41d4-a716-446655440003&owner=550e8400-e29b-41d4-a716-446655440011",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							],
							"query": [
								{
									"key": "post",
									"value": "550e8400-e29b-41d4-a716-446655440003"
								},
								{
									"key": "owner",
									"value": "550e8400-e29b-41d4-a716-446655440011"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Handling",
			"item": [
				{
					"name": "Create offer - Invalid size (412)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412 for invalid size\", function () {",
									"    pm.response.to.have.status(412);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": \"550e8400-e29b-41d4-a716-446655440001\",\n    \"userId\": \"550e8400-e29b-41d4-a716-446655440011\",\n    \"description\": \"Test package\",\n    \"size\": \"EXTRA_LARGE\",\n    \"fragile\": false,\n    \"offer\": 25.00\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create offer - Negative amount (412)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412 for negative offer\", function () {",
									"    pm.response.to.have.status(412);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": \"550e8400-e29b-41d4-a716-446655440001\",\n    \"userId\": \"550e8400-e29b-41d4-a716-446655440011\",\n    \"description\": \"Test package\",\n    \"size\": \"MEDIUM\",\n    \"fragile\": false,\n    \"offer\": -10.00\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create offer - Missing fields (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 for missing fields\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": \"550e8400-e29b-41d4-a716-446655440001\",\n    \"description\": \"Test package\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create offer - Invalid UUID format (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 for invalid UUID format\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": \"invalid-post-id\",\n    \"userId\": \"invalid-user-id\",\n    \"description\": \"Test package\",\n    \"size\": \"MEDIUM\",\n    \"fragile\": false,\n    \"offer\": 25.00\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get offer - Invalid UUID (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 for invalid UUID\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/invalid-uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"invalid-uuid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get offer - Not found (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 for non-existent offer\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/12345678-1234-1234-1234-123456789012",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"12345678-1234-1234-1234-123456789012"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete Operations",
			"item": [
				{
					"name": "Delete specific offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and offer was deleted\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.msg).to.eq(\"la oferta fue eliminada\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/{{offer_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"{{offer_id_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete offer - Invalid UUID (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 for invalid UUID\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/invalid-uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"invalid-uuid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete offer - Not found (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 for non-existent offer\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/12345678-1234-1234-1234-123456789012",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"12345678-1234-1234-1234-123456789012"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify count after deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and count decreased\", function () {",
									"    pm.response.to.have.status(200);",
									"    let body = pm.response.json()",
									"    pm.expect(body.count).to.eq(2)",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/offers/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"offers",
								"count"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9000",
			"type": "string"
		},
		{
			"key": "offer_id_1",
			"value": "",
			"type": "string"
		},
		{
			"key": "offer_id_2",
			"value": "",
			"type": "string"
		},
		{
			"key": "offer_id_3",
			"value": "",
			"type": "string"
		}
	]
}
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/api/offers.postman_collection.json ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/dockerfile ==========
# Use Python 3.11 slim image as base
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==2.1.4

# Configure Poetry: Don't create virtual env, install deps to system python
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=0 \
    POETRY_CACHE_DIR=/tmp/poetry_cache \
    POETRY_VIRTUALENVS_CREATE=false

# Create non-root user for security
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid appuser --shell /bin/bash --create-home appuser

# Set work directory
WORKDIR /offers_app

# Copy poetry files
COPY pyproject.toml ./
COPY poetry.lock ./

# Install dependencies
RUN poetry lock && \
    poetry install --only=main --no-root && \
    rm -rf $POETRY_CACHE_DIR

# Copy application code
COPY src/ ./src/

# Change ownership of the app directory to appuser
RUN chown -R appuser:appuser /offers_app
# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

ENV PYTHONPATH=/offers_app/src
# Run the application using poetry
CMD ["poetry", "run", "uvicorn", "entrypoints.api.main:app", "--host", "0.0.0.0", "--port", "8000"]========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/dockerfile ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/adapters/bd/test_offer_repository_adapter.py ==========
import uuid
from decimal import Decimal
from datetime import datetime
from unittest.mock import AsyncMock, Mock, patch

import pytest

from adapters.bd.offer_repository_adapter import DBOfferRepositoryAdapter
from domain.models.offer import OfferCreate, SizeEnum
from errors import OfferNotFoundError

def create_mock_db_offer():
    """Helper function to create a properly configured mock database offer."""
    mock_offer = Mock()
    mock_offer.id = uuid.uuid4()
    mock_offer.post_id = "550e8400-e29b-41d4-a716-446655440001"
    mock_offer.user_id = "550e8400-e29b-41d4-a716-446655440011"
    mock_offer.description = "Transport package from A to B"
    mock_offer.size = "MEDIUM"
    mock_offer.fragile = False
    mock_offer.offer = Decimal("100.0")
    mock_offer.created_at = datetime.now()
    return mock_offer

@pytest.fixture
def offer_repository():
    """Fixture providing a DBOfferRepositoryAdapter."""
    return DBOfferRepositoryAdapter()

@pytest.fixture
def sample_offer_create():
    """Fixture providing a sample OfferCreate."""
    return OfferCreate(
        postId="550e8400-e29b-41d4-a716-446655440001",
        userId="550e8400-e29b-41d4-a716-446655440011",
        description="Transport package from A to B",
        size=SizeEnum.MEDIUM,
        fragile=False,
        offer=Decimal("100.0"),
    )

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_create_offer_success(
    mock_offer_model, offer_repository, sample_offer_create
):
    """Test successful offer creation."""
    # Arrange
    mock_offer_instance = Mock()
    mock_offer_instance.id = uuid.uuid4()
    mock_offer_instance.user_id = "user123"
    mock_offer_instance.created_at.isoformat.return_value = "2023-01-01T00:00:00"
    mock_offer_instance.save = AsyncMock()

    mock_offer_model.return_value = mock_offer_instance

    # Act
    result = await offer_repository.create(sample_offer_create)

    # Assert
    assert "id" in result
    assert result["userId"] == "user123"
    assert result["createdAt"] == "2023-01-01T00:00:00"

    mock_offer_model.assert_called_once_with(
        post_id=sample_offer_create.postId,
        user_id=sample_offer_create.userId,
        description=sample_offer_create.description,
        size=sample_offer_create.size.value,
        fragile=sample_offer_create.fragile,
        offer=sample_offer_create.offer,
    )
    mock_offer_instance.save.assert_called_once()

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_get_by_id_success(mock_offer_model, offer_repository):
    """Test successful offer retrieval by ID."""
    # Arrange
    offer_id = str(uuid.uuid4())
    mock_offer_instance = create_mock_db_offer()
    mock_offer_model.get_or_none = AsyncMock(return_value=mock_offer_instance)

    # Act
    result = await offer_repository.get_by_id(offer_id)

    # Assert
    # Result should be a domain object, not the mock database object
    assert result is not None
    assert result.id == mock_offer_instance.id
    assert result.postId == mock_offer_instance.post_id
    assert result.userId == mock_offer_instance.user_id
    assert result.description == mock_offer_instance.description
    assert result.size.value == mock_offer_instance.size
    assert result.fragile == mock_offer_instance.fragile
    assert result.offer == mock_offer_instance.offer
    assert result.createdAt == mock_offer_instance.created_at
    mock_offer_model.get_or_none.assert_called_once_with(id=offer_id)

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_get_by_id_not_found(mock_offer_model, offer_repository):
    """Test offer not found by ID."""
    # Arrange
    offer_id = str(uuid.uuid4())
    mock_offer_model.get_or_none = AsyncMock(return_value=None)

    # Act
    result = await offer_repository.get_by_id(offer_id)

    # Assert
    assert result is None
    mock_offer_model.get_or_none.assert_called_once_with(id=offer_id)

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_get_all_offers(mock_offer_model, offer_repository):
    """Test getting all offers."""
    # Arrange
    mock_offers = [create_mock_db_offer(), create_mock_db_offer(), create_mock_db_offer()]
    mock_offer_model.all = AsyncMock(return_value=mock_offers)

    # Act
    result = await offer_repository.get_all()

    # Assert
    assert len(result) == 3
    for i, domain_offer in enumerate(result):
        mock_db_offer = mock_offers[i]
        assert domain_offer.id == mock_db_offer.id
        assert domain_offer.postId == mock_db_offer.post_id
        assert domain_offer.userId == mock_db_offer.user_id
        assert domain_offer.description == mock_db_offer.description
        assert domain_offer.size.value == mock_db_offer.size
        assert domain_offer.fragile == mock_db_offer.fragile
        assert domain_offer.offer == mock_db_offer.offer
        assert domain_offer.createdAt == mock_db_offer.created_at
    mock_offer_model.all.assert_called_once()

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_delete_offer_success(mock_offer_model, offer_repository):
    """Test successful offer deletion."""
    # Arrange
    offer_id = str(uuid.uuid4())
    mock_offer_instance = create_mock_db_offer()
    mock_offer_instance.delete = AsyncMock()
    mock_offer_model.get_or_none = AsyncMock(return_value=mock_offer_instance)

    # Act
    result = await offer_repository.delete(offer_id)

    # Assert
    assert result is not None
    assert result.id == mock_offer_instance.id
    assert result.postId == mock_offer_instance.post_id
    assert result.userId == mock_offer_instance.user_id
    assert result.description == mock_offer_instance.description
    assert result.size.value == mock_offer_instance.size
    assert result.fragile == mock_offer_instance.fragile
    assert result.offer == mock_offer_instance.offer
    assert result.createdAt == mock_offer_instance.created_at
    mock_offer_model.get_or_none.assert_called_once_with(id=offer_id)
    mock_offer_instance.delete.assert_called_once()

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_delete_offer_not_found(mock_offer_model, offer_repository):
    """Test deleting non-existent offer."""
    # Arrange
    offer_id = str(uuid.uuid4())
    mock_offer_model.get_or_none = AsyncMock(return_value=None)

    # Act & Assert
    with pytest.raises(OfferNotFoundError) as exc_info:
        await offer_repository.delete(offer_id)

    assert f"Offer with id {offer_id} not found" in str(exc_info.value)
    mock_offer_model.get_or_none.assert_called_once_with(id=offer_id)

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_delete_all_offers(mock_offer_model, offer_repository):
    """Test deleting all offers."""
    # Arrange
    mock_query = Mock()
    mock_query.delete = AsyncMock()
    mock_offer_model.all.return_value = mock_query

    # Act
    result = await offer_repository.delete_all_offers()

    # Assert
    assert result is None
    mock_offer_model.all.assert_called_once()
    mock_query.delete.assert_called_once()

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_get_offers_filter_with_post_id(mock_offer_model, offer_repository):
    """Test filtering offers by post_id."""
    # Arrange
    post_id = "123456"
    user_id = None
    mock_offers = [create_mock_db_offer(), create_mock_db_offer()]
    mock_queryset = Mock()
    mock_queryset.all = AsyncMock(return_value=mock_offers)
    mock_offer_model.filter.return_value = mock_queryset

    # Act
    result = await offer_repository.get_offers_filter(post_id, user_id)

    # Assert
    assert len(result) == 2
    for i, domain_offer in enumerate(result):
        mock_db_offer = mock_offers[i]
        assert domain_offer.id == mock_db_offer.id
        assert domain_offer.postId == mock_db_offer.post_id
        assert domain_offer.userId == mock_db_offer.user_id
        assert domain_offer.description == mock_db_offer.description
        assert domain_offer.size.value == mock_db_offer.size
        assert domain_offer.fragile == mock_db_offer.fragile
        assert domain_offer.offer == mock_db_offer.offer
        assert domain_offer.createdAt == mock_db_offer.created_at
    mock_offer_model.filter.assert_called_once_with(post_id=post_id)
    mock_queryset.all.assert_called_once()

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_get_offers_filter_with_user_id(mock_offer_model, offer_repository):
    """Test filtering offers by user_id."""
    # Arrange
    post_id = None
    user_id = "user123"
    mock_offers = [create_mock_db_offer()]
    mock_queryset = Mock()
    mock_queryset.all = AsyncMock(return_value=mock_offers)
    mock_offer_model.filter.return_value = mock_queryset

    # Act
    result = await offer_repository.get_offers_filter(post_id, user_id)

    # Assert
    assert len(result) == 1
    domain_offer = result[0]
    mock_db_offer = mock_offers[0]
    assert domain_offer.id == mock_db_offer.id
    assert domain_offer.postId == mock_db_offer.post_id
    assert domain_offer.userId == mock_db_offer.user_id
    assert domain_offer.description == mock_db_offer.description
    assert domain_offer.size.value == mock_db_offer.size
    assert domain_offer.fragile == mock_db_offer.fragile
    assert domain_offer.offer == mock_db_offer.offer
    assert domain_offer.createdAt == mock_db_offer.created_at
    mock_offer_model.filter.assert_called_once_with(user_id=user_id)
    mock_queryset.all.assert_called_once()

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_get_offers_filter_with_both_filters(mock_offer_model, offer_repository):
    """Test filtering offers by both post_id and user_id."""
    # Arrange
    post_id = "123456"
    user_id = "user123"
    mock_offers = [create_mock_db_offer()]
    mock_queryset = Mock()
    mock_queryset.all = AsyncMock(return_value=mock_offers)
    mock_offer_model.filter.return_value = mock_queryset

    # Act
    result = await offer_repository.get_offers_filter(post_id, user_id)

    # Assert
    assert len(result) == 1
    domain_offer = result[0]
    mock_db_offer = mock_offers[0]
    assert domain_offer.id == mock_db_offer.id
    assert domain_offer.postId == mock_db_offer.post_id
    assert domain_offer.userId == mock_db_offer.user_id
    assert domain_offer.description == mock_db_offer.description
    assert domain_offer.size.value == mock_db_offer.size
    assert domain_offer.fragile == mock_db_offer.fragile
    assert domain_offer.offer == mock_db_offer.offer
    assert domain_offer.createdAt == mock_db_offer.created_at
    mock_offer_model.filter.assert_called_once_with(post_id=post_id, user_id=user_id)
    mock_queryset.all.assert_called_once()

@pytest.mark.asyncio
@patch("adapters.bd.offer_repository_adapter.Offer")
async def test_create_offer_with_fragile_package(mock_offer_model, offer_repository):
    """Test creating an offer with fragile package."""
    fragile_offer = OfferCreate(
        postId="550e8400-e29b-41d4-a716-446655440002",
        userId="550e8400-e29b-41d4-a716-446655440012",
        description="Fragile glass package",
        size=SizeEnum.SMALL,
        fragile=True,
        offer=Decimal("150.0"),
    )

    mock_offer_instance = Mock()
    mock_offer_instance.id = uuid.uuid4()
    mock_offer_instance.user_id = "550e8400-e29b-41d4-a716-446655440012"
    mock_offer_instance.created_at.isoformat.return_value = "2023-01-01T00:00:00"
    mock_offer_instance.save = AsyncMock()

    mock_offer_model.return_value = mock_offer_instance

    result = await offer_repository.create(fragile_offer)

    assert result["userId"] == "550e8400-e29b-41d4-a716-446655440012"
    mock_offer_model.assert_called_once_with(
        post_id="550e8400-e29b-41d4-a716-446655440002",
        user_id="550e8400-e29b-41d4-a716-446655440012",
        description="Fragile glass package",
        size="SMALL",
        fragile=True,
        offer=Decimal("150.0"),
    )
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/adapters/bd/test_offer_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/conftest.py ==========
import uuid
from datetime import datetime
from decimal import Decimal

import pytest

from domain.models.offer import Offer, SizeEnum

@pytest.fixture
def valid_offer_create_data():
    """Fixture providing valid offer create data."""
    return {
        "postId": "550e8400-e29b-41d4-a716-446655440001",
        "userId": "550e8400-e29b-41d4-a716-446655440011",
        "description": "Transport package from A to B",
        "size": SizeEnum.MEDIUM,
        "fragile": False,
        "offer": Decimal("100.0"),
    }

@pytest.fixture
def valid_offer_data():
    """Fixture providing valid offer data."""
    return {
        "id": uuid.uuid4(),
        "postId": "550e8400-e29b-41d4-a716-446655440001",
        "userId": "550e8400-e29b-41d4-a716-446655440011",
        "description": "Transport package from A to B",
        "size": SizeEnum.MEDIUM,
        "fragile": False,
        "offer": Decimal("100.0"),
        "createdAt": datetime.now(),
    }

@pytest.fixture
def offer_with_id(valid_offer_data):
    """Fixture providing an offer with ID."""
    return Offer(**valid_offer_data)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/conftest.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/models/test_offer.py ==========
import uuid
from datetime import datetime
from decimal import Decimal

import pytest
from pydantic import ValidationError

from domain.exceptions import (
    NegativeOfferException,
    UUIDFormatException,
)
from domain.models.offer import Offer, OfferCreate, SizeEnum

def test_create_offer_create_with_valid_data(valid_offer_create_data):
    """Test creating an OfferCreate with valid data."""
    offer_create = OfferCreate(**valid_offer_create_data)

    assert offer_create.postId == valid_offer_create_data["postId"]
    assert offer_create.userId == valid_offer_create_data["userId"]
    assert offer_create.description == valid_offer_create_data["description"]
    assert offer_create.size == valid_offer_create_data["size"]
    assert offer_create.fragile == valid_offer_create_data["fragile"]
    assert offer_create.offer == valid_offer_create_data["offer"]

def test_create_offer_with_valid_data(valid_offer_data):
    """Test creating an Offer with valid data."""
    offer = Offer(**valid_offer_data)

    assert offer.id == valid_offer_data["id"]
    assert offer.postId == valid_offer_data["postId"]
    assert offer.userId == valid_offer_data["userId"]
    assert offer.description == valid_offer_data["description"]
    assert offer.size == valid_offer_data["size"]
    assert offer.fragile == valid_offer_data["fragile"]
    assert offer.offer == valid_offer_data["offer"]
    assert offer.createdAt == valid_offer_data["createdAt"]

def test_create_offer_with_id(offer_with_id):
    """Test creating an offer with an ID."""
    assert isinstance(offer_with_id.id, uuid.UUID)
    assert offer_with_id.postId == "550e8400-e29b-41d4-a716-446655440001"
    assert offer_with_id.userId == "550e8400-e29b-41d4-a716-446655440011"
    assert offer_with_id.description == "Transport package from A to B"
    assert offer_with_id.size == SizeEnum.MEDIUM
    assert offer_with_id.fragile is False
    assert offer_with_id.offer == Decimal("100.0")
    assert isinstance(offer_with_id.createdAt, datetime)

def test_create_offer_create_with_invalid_size(valid_offer_create_data):
    """Test creating an OfferCreate with an invalid size."""
    with pytest.raises(ValidationError) as exc_info:
        OfferCreate(**{**valid_offer_create_data, "size": "INVALID_SIZE"})

    assert "size" in str(exc_info.value)

def test_create_offer_create_with_negative_offer(valid_offer_create_data):
    """Test creating an OfferCreate with a negative offer."""
    with pytest.raises(NegativeOfferException) as exc_info:
        OfferCreate(**{**valid_offer_create_data, "offer": Decimal("-10.0")})

    assert "Offer must be positive" in str(exc_info.value)

def test_create_offer_create_with_empty_description(valid_offer_create_data):
    """Test creating an OfferCreate with an empty description."""
    # Note: Current model allows empty strings, this test documents current behavior
    offer = OfferCreate(**{**valid_offer_create_data, "description": ""})
    assert offer.description == ""

def test_create_offer_create_with_empty_post_id(valid_offer_create_data):
    """Test creating an OfferCreate with an empty postId."""
    with pytest.raises(UUIDFormatException):
        OfferCreate(**{**valid_offer_create_data, "postId": ""})

def test_create_offer_create_with_empty_user_id(valid_offer_create_data):
    """Test creating an OfferCreate with an empty userId."""
    with pytest.raises(UUIDFormatException):
        OfferCreate(**{**valid_offer_create_data, "userId": ""})

def test_offer_create_size_validation():
    """Test that only valid sizes are accepted."""
    valid_data = {
        "postId": "550e8400-e29b-41d4-a716-446655440001",
        "userId": "550e8400-e29b-41d4-a716-446655440011",
        "description": "Test description",
        "fragile": False,
        "offer": Decimal("100.0"),
    }

    for size in [SizeEnum.LARGE, SizeEnum.MEDIUM, SizeEnum.SMALL]:
        offer = OfferCreate(**{**valid_data, "size": size})
        assert offer.size == size

def test_offer_create_fragile_boolean():
    """Test that fragile field accepts boolean values."""
    valid_data = {
        "postId": "550e8400-e29b-41d4-a716-446655440001",
        "userId": "550e8400-e29b-41d4-a716-446655440011",
        "description": "Test description",
        "size": SizeEnum.MEDIUM,
        "offer": Decimal("100.0"),
    }

    offer_fragile = OfferCreate(**{**valid_data, "fragile": True})
    assert offer_fragile.fragile is True

    offer_not_fragile = OfferCreate(**{**valid_data, "fragile": False})
    assert offer_not_fragile.fragile is False

def test_offer_create_decimal_precision():
    """Test that offer field handles decimal precision correctly."""
    valid_data = {
        "postId": "550e8400-e29b-41d4-a716-446655440001",
        "userId": "550e8400-e29b-41d4-a716-446655440011",
        "description": "Test description",
        "size": SizeEnum.MEDIUM,
        "fragile": False,
    }

    offer = OfferCreate(**{**valid_data, "offer": Decimal("99.99")})
    assert offer.offer == Decimal("99.99")

    offer_int = OfferCreate(**{**valid_data, "offer": Decimal("100")})
    assert offer_int.offer == Decimal("100")

def test_size_enum_values():
    """Test that SizeEnum has correct values."""
    assert SizeEnum.LARGE == "LARGE"
    assert SizeEnum.MEDIUM == "MEDIUM"
    assert SizeEnum.SMALL == "SMALL"

    # Test that we have exactly 3 enum values
    assert len(list(SizeEnum)) == 3
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/models/test_offer.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/ports/test_offer_repository_port.py ==========
import pytest

from domain.ports.offer_repository_port import OfferRepositoryPort

class TestOfferRepositoryPort:
    """Test cases for OfferRepositoryPort abstract class."""

    def test_offer_repository_port_is_abstract(self):
        """Test that OfferRepositoryPort cannot be instantiated directly."""
        with pytest.raises(TypeError):
            OfferRepositoryPort()

    def test_offer_repository_port_abstract_methods(self):
        """Test that all abstract methods must be implemented."""

        class IncompleteRepository(OfferRepositoryPort):
            pass

        with pytest.raises(TypeError):
            IncompleteRepository()

    def test_offer_repository_port_implementation(self):
        """Test that OfferRepositoryPort can be implemented correctly."""

        class ConcreteRepository(OfferRepositoryPort):
            async def create(self, offer):
                return {"id": "test"}

            async def get_by_id(self, offer_id):
                return None

            async def get_all(self):
                return []

            async def delete(self, offer_id):
                return None

            async def delete_all_offers(self):
                pass

            async def get_offers_filter(self, post_id, user_id):
                return []

            async def count(self):
                return 0

        repository = ConcreteRepository()
        assert repository is not None
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/ports/test_offer_repository_port.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/services/test_validation_service.py ==========
import pytest

from domain.exceptions import (
    FormatValidationException,
    InvalidSizeException,
    MissingFieldException,
    NegativeOfferException,
    UUIDFormatException,
)
from domain.services.validation_service import OfferValidationService

class TestOfferValidationService:
    """Test cases for OfferValidationService."""

    def test_validate_offer_data_with_valid_data(self):
        """Test validation with valid offer data."""
        valid_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "size": "MEDIUM",
            "fragile": False,
            "offer": 100.0,
        }

        # Should not raise any exception
        OfferValidationService.validate_offer_data(valid_data)

    def test_validate_offer_data_missing_fields(self):
        """Test validation with missing required fields."""
        incomplete_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "description": "Test package",
        }

        with pytest.raises(MissingFieldException) as exc_info:
            OfferValidationService.validate_offer_data(incomplete_data)

        assert "Missing required fields" in str(exc_info.value)
        assert "userId" in str(exc_info.value)
        assert "size" in str(exc_info.value)

    def test_validate_offer_data_invalid_post_id_uuid(self):
        """Test validation with invalid postId UUID format."""
        invalid_data = {
            "postId": "invalid-uuid",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "size": "MEDIUM",
            "fragile": False,
            "offer": 100.0,
        }

        with pytest.raises(UUIDFormatException) as exc_info:
            OfferValidationService.validate_offer_data(invalid_data)

        assert "Invalid UUID format for postId" in str(exc_info.value)

    def test_validate_offer_data_invalid_user_id_uuid(self):
        """Test validation with invalid userId UUID format."""
        invalid_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "invalid-uuid",
            "description": "Test package",
            "size": "MEDIUM",
            "fragile": False,
            "offer": 100.0,
        }

        with pytest.raises(UUIDFormatException) as exc_info:
            OfferValidationService.validate_offer_data(invalid_data)

        assert "Invalid UUID format for userId" in str(exc_info.value)

    def test_validate_offer_data_invalid_size(self):
        """Test validation with invalid size enum value."""
        invalid_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "size": "INVALID_SIZE",
            "fragile": False,
            "offer": 100.0,
        }

        with pytest.raises(InvalidSizeException) as exc_info:
            OfferValidationService.validate_offer_data(invalid_data)

        assert "Invalid size 'INVALID_SIZE'" in str(exc_info.value)
        assert "Must be LARGE, MEDIUM, or SMALL" in str(exc_info.value)

    def test_validate_offer_data_negative_offer(self):
        """Test validation with negative offer amount."""
        invalid_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "size": "MEDIUM",
            "fragile": False,
            "offer": -50.0,
        }

        with pytest.raises(NegativeOfferException) as exc_info:
            OfferValidationService.validate_offer_data(invalid_data)

        assert "Offer amount must be positive" in str(exc_info.value)

    def test_validate_offer_data_invalid_offer_format(self):
        """Test validation with invalid offer format."""
        invalid_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "size": "MEDIUM",
            "fragile": False,
            "offer": "invalid_number",
        }

        with pytest.raises(FormatValidationException) as exc_info:
            OfferValidationService.validate_offer_data(invalid_data)

        assert "Offer must be a valid number" in str(exc_info.value)

    def test_validate_offer_data_valid_size_values(self):
        """Test validation with all valid size enum values."""
        base_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "fragile": False,
            "offer": 100.0,
        }

        # Test all valid sizes
        for size in ["LARGE", "MEDIUM", "SMALL"]:
            valid_data = {**base_data, "size": size}
            # Should not raise any exception
            OfferValidationService.validate_offer_data(valid_data)

    def test_validate_offer_data_zero_offer(self):
        """Test validation with zero offer amount."""
        valid_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "size": "MEDIUM",
            "fragile": False,
            "offer": 0.0,
        }

        # Zero should be valid (not negative)
        OfferValidationService.validate_offer_data(valid_data)

    def test_validate_offer_data_decimal_offer(self):
        """Test validation with decimal offer amount."""
        valid_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "size": "MEDIUM",
            "fragile": False,
            "offer": 99.99,
        }

        # Decimal should be valid
        OfferValidationService.validate_offer_data(valid_data)

    def test_validate_offer_data_boolean_fragile_values(self):
        """Test validation with boolean fragile values."""
        base_data = {
            "postId": "550e8400-e29b-41d4-a716-446655440001",
            "userId": "550e8400-e29b-41d4-a716-446655440011",
            "description": "Test package",
            "size": "MEDIUM",
            "offer": 100.0,
        }

        # Test both boolean values
        for fragile in [True, False]:
            valid_data = {**base_data, "fragile": fragile}
            # Should not raise any exception
            OfferValidationService.validate_offer_data(valid_data)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/services/test_validation_service.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_base_use_case.py ==========
import pytest

from domain.use_cases.base_use_case import BaseUseCase

class TestBaseUseCase:
    """Test cases for BaseUseCase abstract class."""

    def test_base_use_case_is_abstract(self):
        """Test that BaseUseCase cannot be instantiated directly."""
        with pytest.raises(TypeError):
            BaseUseCase()

    def test_base_use_case_abstract_method(self):
        """Test that execute method is abstract."""

        class IncompleteUseCase(BaseUseCase):
            pass

        with pytest.raises(TypeError):
            IncompleteUseCase()

    def test_base_use_case_implementation(self):
        """Test that BaseUseCase can be implemented correctly."""

        class ConcreteUseCase(BaseUseCase):
            async def execute(self, *args, **kwargs):
                return "executed"

        use_case = ConcreteUseCase()
        assert use_case is not None
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_base_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_create_offer_use_case.py ==========
import uuid
from datetime import datetime
from decimal import Decimal
from unittest.mock import AsyncMock, Mock

import pytest

from domain.models.offer import OfferCreate, SizeEnum
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.create_offer_use_case import CreateOfferUseCase

@pytest.fixture
def mock_offer_repository():
    """Fixture providing a mock offer repository."""
    repository = Mock(spec=OfferRepositoryPort)
    repository.create = AsyncMock()
    return repository

@pytest.fixture
def create_offer_use_case(mock_offer_repository):
    """Fixture providing a CreateOfferUseCase with mock repository."""
    return CreateOfferUseCase(mock_offer_repository)

@pytest.fixture
def sample_offer_create():
    """Fixture providing a sample OfferCreate."""
    return OfferCreate(
        postId="550e8400-e29b-41d4-a716-446655440001",
        userId="550e8400-e29b-41d4-a716-446655440011",
        description="Transport package from A to B",
        size=SizeEnum.MEDIUM,
        fragile=False,
        offer=Decimal("100.0"),
    )

@pytest.mark.asyncio
async def test_create_offer_use_case_success(
    create_offer_use_case, mock_offer_repository, sample_offer_create
):
    """Test successful offer creation."""
    # Arrange
    expected_result = {
        "id": str(uuid.uuid4()),
        "userId": "user123",
        "createdAt": datetime.now().isoformat(),
    }
    mock_offer_repository.create.return_value = expected_result

    # Act
    result = await create_offer_use_case.execute(sample_offer_create)

    # Assert
    assert result == expected_result
    mock_offer_repository.create.assert_called_once_with(sample_offer_create)

@pytest.mark.asyncio
async def test_create_offer_use_case_repository_called_with_correct_data(
    create_offer_use_case, mock_offer_repository, sample_offer_create
):
    """Test that repository is called with correct offer data."""
    # Arrange
    expected_result = {
        "id": str(uuid.uuid4()),
        "userId": "user123",
        "createdAt": datetime.now().isoformat(),
    }
    mock_offer_repository.create.return_value = expected_result

    # Act
    await create_offer_use_case.execute(sample_offer_create)

    # Assert
    mock_offer_repository.create.assert_called_once()
    call_args = mock_offer_repository.create.call_args[0][0]
    assert call_args.postId == sample_offer_create.postId
    assert call_args.userId == sample_offer_create.userId
    assert call_args.description == sample_offer_create.description
    assert call_args.size == sample_offer_create.size
    assert call_args.fragile == sample_offer_create.fragile
    assert call_args.offer == sample_offer_create.offer

@pytest.mark.asyncio
async def test_create_offer_use_case_repository_exception(
    create_offer_use_case, mock_offer_repository, sample_offer_create
):
    """Test that repository exceptions are propagated."""
    # Arrange
    mock_offer_repository.create.side_effect = Exception("Database error")

    # Act & Assert
    with pytest.raises(Exception) as exc_info:
        await create_offer_use_case.execute(sample_offer_create)

    assert str(exc_info.value) == "Database error"
    mock_offer_repository.create.assert_called_once_with(sample_offer_create)

@pytest.mark.asyncio
async def test_create_offer_use_case_with_fragile_package(
    create_offer_use_case, mock_offer_repository
):
    """Test creating an offer with fragile package."""
    fragile_offer = OfferCreate(
        postId="550e8400-e29b-41d4-a716-446655440002",
        userId="550e8400-e29b-41d4-a716-446655440012",
        description="Fragile glass package",
        size=SizeEnum.SMALL,
        fragile=True,
        offer=Decimal("150.0"),
    )
    expected_result = {
        "id": str(uuid.uuid4()),
        "userId": "550e8400-e29b-41d4-a716-446655440012",
        "createdAt": datetime.now().isoformat(),
    }
    mock_offer_repository.create.return_value = expected_result

    result = await create_offer_use_case.execute(fragile_offer)

    assert result == expected_result
    mock_offer_repository.create.assert_called_once_with(fragile_offer)

@pytest.mark.asyncio
async def test_create_offer_use_case_with_large_package(
    create_offer_use_case, mock_offer_repository
):
    """Test creating an offer with large package."""
    large_offer = OfferCreate(
        postId="550e8400-e29b-41d4-a716-446655440003",
        userId="550e8400-e29b-41d4-a716-446655440013",
        description="Large furniture package",
        size=SizeEnum.LARGE,
        fragile=False,
        offer=Decimal("250.0"),
    )
    expected_result = {
        "id": str(uuid.uuid4()),
        "userId": "550e8400-e29b-41d4-a716-446655440013",
        "createdAt": datetime.now().isoformat(),
    }
    mock_offer_repository.create.return_value = expected_result

    result = await create_offer_use_case.execute(large_offer)

    assert result == expected_result
    mock_offer_repository.create.assert_called_once_with(large_offer)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_create_offer_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_delete_all_offers_use_case.py ==========
from unittest.mock import AsyncMock

import pytest

from domain.use_cases.delete_all_offers_use_case import DeleteAllOffersUseCase

@pytest.mark.asyncio
async def test_delete_all_offers_use_case_success():
    """Test successful deletion of all offers."""
    # Arrange
    mock_repository = AsyncMock()
    mock_repository.delete_all_offers.return_value = None
    use_case = DeleteAllOffersUseCase(mock_repository)

    # Act
    result = await use_case.execute()

    # Assert
    assert result is None
    mock_repository.delete_all_offers.assert_called_once()

@pytest.mark.asyncio
async def test_delete_all_offers_use_case_repository_exception():
    """Test delete all offers use case when repository raises exception."""
    # Arrange
    mock_repository = AsyncMock()
    mock_repository.delete_all_offers.side_effect = Exception("Database error")
    use_case = DeleteAllOffersUseCase(mock_repository)

    # Act & Assert
    with pytest.raises(Exception, match="Database error"):
        await use_case.execute()

    mock_repository.delete_all_offers.assert_called_once()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_delete_all_offers_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_delete_offer_use_case.py ==========
import uuid
from datetime import datetime
from decimal import Decimal
from unittest.mock import AsyncMock

import pytest

from domain.models.offer import Offer, SizeEnum
from domain.use_cases.delete_offer_use_case import DeleteOfferUseCase

@pytest.mark.asyncio
async def test_delete_offer_use_case_success():
    """Test successful deletion of an offer."""
    # Arrange
    offer_id = str(uuid.uuid4())
    expected_offer = Offer(
        id=uuid.UUID(offer_id),
        post_id="post123",
        user_id="user123",
        description="Test offer",
        size=SizeEnum.MEDIUM,
        fragile=False,
        offer=Decimal("100.0"),
        created_at=datetime.now(),
    )

    mock_repository = AsyncMock()
    mock_repository.delete.return_value = expected_offer
    use_case = DeleteOfferUseCase(mock_repository)

    # Act
    result = await use_case.execute(offer_id)

    # Assert
    assert result == expected_offer
    mock_repository.delete.assert_called_once_with(offer_id)

@pytest.mark.asyncio
async def test_delete_offer_use_case_not_found():
    """Test delete offer use case when offer is not found."""
    # Arrange
    offer_id = str(uuid.uuid4())
    mock_repository = AsyncMock()
    mock_repository.delete.return_value = None
    use_case = DeleteOfferUseCase(mock_repository)

    # Act
    result = await use_case.execute(offer_id)

    # Assert
    assert result is None
    mock_repository.delete.assert_called_once_with(offer_id)

@pytest.mark.asyncio
async def test_delete_offer_use_case_repository_exception():
    """Test delete offer use case when repository raises exception."""
    # Arrange
    offer_id = str(uuid.uuid4())
    mock_repository = AsyncMock()
    mock_repository.delete.side_effect = Exception("Database error")
    use_case = DeleteOfferUseCase(mock_repository)

    # Act & Assert
    with pytest.raises(Exception, match="Database error"):
        await use_case.execute(offer_id)

    mock_repository.delete.assert_called_once_with(offer_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_delete_offer_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_all_offers_use_case.py ==========
import uuid
from datetime import datetime
from decimal import Decimal
from unittest.mock import AsyncMock

import pytest

from domain.models.offer import Offer, SizeEnum
from domain.use_cases.get_all_offers_use_case import GetAllOffersUseCase

@pytest.mark.asyncio
async def test_get_all_offers_use_case_success():
    """Test successful retrieval of all offers."""
    # Arrange
    expected_offers = [
        Offer(
            id=uuid.uuid4(),
            post_id="post123",
            user_id="user123",
            description="Test offer 1",
            size=SizeEnum.MEDIUM,
            fragile=False,
            offer=Decimal("100.0"),
            created_at=datetime.now(),
        ),
        Offer(
            id=uuid.uuid4(),
            post_id="post456",
            user_id="user456",
            description="Test offer 2",
            size=SizeEnum.LARGE,
            fragile=True,
            offer=Decimal("200.0"),
            created_at=datetime.now(),
        ),
    ]

    mock_repository = AsyncMock()
    mock_repository.get_all.return_value = expected_offers
    use_case = GetAllOffersUseCase(mock_repository)

    # Act
    result = await use_case.execute()

    # Assert
    assert result == expected_offers
    assert len(result) == 2
    mock_repository.get_all.assert_called_once()

@pytest.mark.asyncio
async def test_get_all_offers_use_case_empty_list():
    """Test get all offers use case when no offers exist."""
    # Arrange
    mock_repository = AsyncMock()
    mock_repository.get_all.return_value = []
    use_case = GetAllOffersUseCase(mock_repository)

    # Act
    result = await use_case.execute()

    # Assert
    assert result == []
    assert len(result) == 0
    mock_repository.get_all.assert_called_once()

@pytest.mark.asyncio
async def test_get_all_offers_use_case_repository_exception():
    """Test get all offers use case when repository raises exception."""
    # Arrange
    mock_repository = AsyncMock()
    mock_repository.get_all.side_effect = Exception("Database error")
    use_case = GetAllOffersUseCase(mock_repository)

    # Act & Assert
    with pytest.raises(Exception, match="Database error"):
        await use_case.execute()

    mock_repository.get_all.assert_called_once()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_all_offers_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_filter_offers_use_case.py ==========
import uuid
from datetime import datetime
from decimal import Decimal
from unittest.mock import AsyncMock

import pytest

from domain.models.offer import Offer, SizeEnum
from domain.use_cases.get_filter_offers_use_case import GetFilterOffersUseCase

@pytest.mark.asyncio
async def test_get_filter_offers_use_case_with_post_id():
    """Test get filter offers use case with post_id filter."""
    # Arrange
    post_id = "post123"
    expected_offers = [
        Offer(
            id=uuid.uuid4(),
            post_id=post_id,
            user_id="user123",
            description="Test offer 1",
            size=SizeEnum.MEDIUM,
            fragile=False,
            offer=Decimal("100.0"),
            created_at=datetime.now(),
        )
    ]

    mock_repository = AsyncMock()
    mock_repository.get_offers_filter.return_value = expected_offers
    use_case = GetFilterOffersUseCase(mock_repository)

    # Act
    result = await use_case.execute(post_id=post_id)

    # Assert
    assert result == expected_offers
    mock_repository.get_offers_filter.assert_called_once_with(post_id, None)

@pytest.mark.asyncio
async def test_get_filter_offers_use_case_with_user_id():
    """Test get filter offers use case with user_id filter."""
    # Arrange
    user_id = "user123"
    expected_offers = [
        Offer(
            id=uuid.uuid4(),
            post_id="post123",
            user_id=user_id,
            description="Test offer 1",
            size=SizeEnum.MEDIUM,
            fragile=False,
            offer=Decimal("100.0"),
            created_at=datetime.now(),
        )
    ]

    mock_repository = AsyncMock()
    mock_repository.get_offers_filter.return_value = expected_offers
    use_case = GetFilterOffersUseCase(mock_repository)

    # Act
    result = await use_case.execute(user_id=user_id)

    # Assert
    assert result == expected_offers
    mock_repository.get_offers_filter.assert_called_once_with(None, user_id)

@pytest.mark.asyncio
async def test_get_filter_offers_use_case_with_both_filters():
    """Test get filter offers use case with both post_id and user_id filters."""
    # Arrange
    post_id = "post123"
    user_id = "user123"
    expected_offers = [
        Offer(
            id=uuid.uuid4(),
            post_id=post_id,
            user_id=user_id,
            description="Test offer 1",
            size=SizeEnum.MEDIUM,
            fragile=False,
            offer=Decimal("100.0"),
            created_at=datetime.now(),
        )
    ]

    mock_repository = AsyncMock()
    mock_repository.get_offers_filter.return_value = expected_offers
    use_case = GetFilterOffersUseCase(mock_repository)

    # Act
    result = await use_case.execute(post_id=post_id, user_id=user_id)

    # Assert
    assert result == expected_offers
    mock_repository.get_offers_filter.assert_called_once_with(post_id, user_id)

@pytest.mark.asyncio
async def test_get_filter_offers_use_case_no_filters():
    """Test get filter offers use case with no filters."""
    # Arrange
    expected_offers = []
    mock_repository = AsyncMock()
    mock_repository.get_offers_filter.return_value = expected_offers
    use_case = GetFilterOffersUseCase(mock_repository)

    # Act
    result = await use_case.execute()

    # Assert
    assert result == expected_offers
    mock_repository.get_offers_filter.assert_called_once_with(None, None)

@pytest.mark.asyncio
async def test_get_filter_offers_use_case_repository_exception():
    """Test get filter offers use case when repository raises exception."""
    # Arrange
    mock_repository = AsyncMock()
    mock_repository.get_offers_filter.side_effect = Exception("Database error")
    use_case = GetFilterOffersUseCase(mock_repository)

    # Act & Assert
    with pytest.raises(Exception, match="Database error"):
        await use_case.execute()

    mock_repository.get_offers_filter.assert_called_once_with(None, None)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_filter_offers_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_offer_use_case.py ==========
import uuid
from datetime import datetime
from decimal import Decimal
from unittest.mock import AsyncMock, Mock

import pytest

from domain.models.offer import Offer, SizeEnum
from domain.ports.offer_repository_port import OfferRepositoryPort
from domain.use_cases.get_offer_use_case import GetOfferUseCase

@pytest.fixture
def mock_offer_repository():
    """Fixture providing a mock offer repository."""
    repository = Mock(spec=OfferRepositoryPort)
    repository.get_by_id = AsyncMock()
    return repository

@pytest.fixture
def get_offer_use_case(mock_offer_repository):
    """Fixture providing a GetOfferUseCase with mock repository."""
    return GetOfferUseCase(mock_offer_repository)

@pytest.fixture
def sample_offer():
    """Fixture providing a sample Offer."""
    return Offer(
        id=uuid.uuid4(),
        postId="123456",
        userId="user123",
        description="Transport package from A to B",
        size=SizeEnum.MEDIUM,
        fragile=False,
        offer=Decimal("100.0"),
        createdAt=datetime.now(),
    )

@pytest.mark.asyncio
async def test_get_offer_use_case_success(
    get_offer_use_case, mock_offer_repository, sample_offer
):
    """Test successful offer retrieval."""
    # Arrange
    offer_id = str(sample_offer.id)
    mock_offer_repository.get_by_id.return_value = sample_offer

    # Act
    result = await get_offer_use_case.execute(offer_id)

    # Assert
    assert result == sample_offer
    mock_offer_repository.get_by_id.assert_called_once_with(offer_id)

@pytest.mark.asyncio
async def test_get_offer_use_case_not_found(get_offer_use_case, mock_offer_repository):
    """Test offer not found scenario."""
    # Arrange
    offer_id = str(uuid.uuid4())
    mock_offer_repository.get_by_id.return_value = None

    # Act
    result = await get_offer_use_case.execute(offer_id)

    # Assert
    assert result is None
    mock_offer_repository.get_by_id.assert_called_once_with(offer_id)

@pytest.mark.asyncio
async def test_get_offer_use_case_repository_exception(
    get_offer_use_case, mock_offer_repository
):
    """Test that repository exceptions are propagated."""
    # Arrange
    offer_id = str(uuid.uuid4())
    mock_offer_repository.get_by_id.side_effect = Exception("Database error")

    # Act & Assert
    with pytest.raises(Exception) as exc_info:
        await get_offer_use_case.execute(offer_id)

    assert str(exc_info.value) == "Database error"
    mock_offer_repository.get_by_id.assert_called_once_with(offer_id)

@pytest.mark.asyncio
async def test_get_offer_use_case_with_valid_uuid(
    get_offer_use_case, mock_offer_repository, sample_offer
):
    """Test getting offer with valid UUID string."""
    # Arrange
    offer_id = str(sample_offer.id)
    mock_offer_repository.get_by_id.return_value = sample_offer

    # Act
    result = await get_offer_use_case.execute(offer_id)

    # Assert
    assert result.id == sample_offer.id
    assert result.postId == sample_offer.postId
    assert result.userId == sample_offer.userId
    assert result.description == sample_offer.description
    assert result.size == sample_offer.size
    assert result.fragile == sample_offer.fragile
    assert result.offer == sample_offer.offer
    assert result.createdAt == sample_offer.createdAt
    mock_offer_repository.get_by_id.assert_called_once_with(offer_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_offer_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_offers_count_use_case.py ==========
from unittest.mock import AsyncMock

import pytest

from domain.use_cases.get_offers_count_use_case import GetOffersCountUseCase

@pytest.mark.asyncio
async def test_get_offers_count_use_case_success():
    """Test successful retrieval of offers count."""
    # Arrange
    expected_count = 5
    mock_repository = AsyncMock()
    mock_repository.count.return_value = expected_count
    use_case = GetOffersCountUseCase(mock_repository)

    # Act
    result = await use_case.execute()

    # Assert
    assert result == expected_count
    assert isinstance(result, int)
    mock_repository.count.assert_called_once()

@pytest.mark.asyncio
async def test_get_offers_count_use_case_zero_count():
    """Test get offers count use case when no offers exist."""
    # Arrange
    expected_count = 0
    mock_repository = AsyncMock()
    mock_repository.count.return_value = expected_count
    use_case = GetOffersCountUseCase(mock_repository)

    # Act
    result = await use_case.execute()

    # Assert
    assert result == expected_count
    assert isinstance(result, int)
    mock_repository.count.assert_called_once()

@pytest.mark.asyncio
async def test_get_offers_count_use_case_repository_exception():
    """Test get offers count use case when repository raises exception."""
    # Arrange
    mock_repository = AsyncMock()
    mock_repository.count.side_effect = Exception("Database error")
    use_case = GetOffersCountUseCase(mock_repository)

    # Act & Assert
    with pytest.raises(Exception, match="Database error"):
        await use_case.execute()

    mock_repository.count.assert_called_once()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/domain/use_cases/test_get_offers_count_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/test_assembly.py ==========
from assembly import (
    build_create_offer_use_case,
    build_delete_all_offers_use_case,
    build_delete_offer_use_case,
    build_get_all_offers_use_case,
    build_get_filter_offers_use_case,
    build_get_offer_use_case,
    build_get_offers_count_use_case,
    offer_repository,
)
from domain.use_cases.base_use_case import BaseUseCase
from domain.use_cases.create_offer_use_case import CreateOfferUseCase
from domain.use_cases.delete_all_offers_use_case import DeleteAllOffersUseCase
from domain.use_cases.delete_offer_use_case import DeleteOfferUseCase
from domain.use_cases.get_all_offers_use_case import GetAllOffersUseCase
from domain.use_cases.get_filter_offers_use_case import GetFilterOffersUseCase
from domain.use_cases.get_offer_use_case import GetOfferUseCase
from domain.use_cases.get_offers_count_use_case import GetOffersCountUseCase

def test_offer_repository_exists():
    """Test that offer repository is instantiated."""
    assert offer_repository is not None

def test_build_create_offer_use_case():
    """Test build_create_offer_use_case function."""
    use_case = build_create_offer_use_case()
    assert isinstance(use_case, BaseUseCase)
    assert isinstance(use_case, CreateOfferUseCase)
    assert use_case.offer_repository == offer_repository

def test_build_get_offer_use_case():
    """Test build_get_offer_use_case function."""
    use_case = build_get_offer_use_case()
    assert isinstance(use_case, BaseUseCase)
    assert isinstance(use_case, GetOfferUseCase)
    assert use_case.offer_repository == offer_repository

def test_build_get_all_offers_use_case():
    """Test build_get_all_offers_use_case function."""
    use_case = build_get_all_offers_use_case()
    assert isinstance(use_case, BaseUseCase)
    assert isinstance(use_case, GetAllOffersUseCase)
    assert use_case.offer_repository == offer_repository

def test_build_get_filter_offers_use_case():
    """Test build_get_filter_offers_use_case function."""
    use_case = build_get_filter_offers_use_case()
    assert isinstance(use_case, BaseUseCase)
    assert isinstance(use_case, GetFilterOffersUseCase)
    assert use_case.offer_repository == offer_repository

def test_build_delete_offer_use_case():
    """Test build_delete_offer_use_case function."""
    use_case = build_delete_offer_use_case()
    assert isinstance(use_case, BaseUseCase)
    assert isinstance(use_case, DeleteOfferUseCase)
    assert use_case.offer_repository == offer_repository

def test_build_delete_all_offers_use_case():
    """Test build_delete_all_offers_use_case function."""
    use_case = build_delete_all_offers_use_case()
    assert isinstance(use_case, BaseUseCase)
    assert isinstance(use_case, DeleteAllOffersUseCase)
    assert use_case.offer_repository == offer_repository

def test_build_get_offers_count_use_case():
    """Test build_get_offers_count_use_case function."""
    use_case = build_get_offers_count_use_case()
    assert isinstance(use_case, BaseUseCase)
    assert isinstance(use_case, GetOffersCountUseCase)
    assert use_case.offer_repository == offer_repository
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/test_assembly.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/test_config.py ==========
from config import Settings, classproperty

class TestClassProperty:
    """Test classproperty decorator."""

    def test_classproperty_decorator(self):
        """Test that classproperty decorator works correctly."""

        class TestClass:
            @classproperty
            def test_property(cls):
                return "test_value"

        assert TestClass.test_property == "test_value"

        # Should work with instances too
        instance = TestClass()
        assert instance.test_property == "test_value"

class TestSettings:
    """Test Settings class."""

    def test_app_name_default(self):
        """Test app_name returns default value when env var not set."""
        assert Settings.app_name == "Offers App"

    def test_log_level_default(self):
        """Test log_level returns current value."""
        # Test that log_level returns a valid log level
        assert Settings.log_level in ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"]

    def test_db_url_default(self):
        """Test db_url returns default value when env vars not set."""
        expected = "postgres://testuser:testpass@localhost:5432/testoffer_db"
        assert Settings.db_url == expected

    def test_tortoise_config_structure(self):
        """Test tortoise_config returns correct structure."""
        config = Settings.tortoise_config

        assert "connections" in config
        assert "apps" in config
        assert "default" in config["connections"]
        assert "models" in config["apps"]
        assert config["apps"]["models"]["models"] == ["adapters.bd.models"]
        assert config["apps"]["models"]["default_connection"] == "default"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/offers_app/tests/unit/test_config.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/Dockerfile ==========
# Use Python 3.11 slim image as base
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==2.1.4

# Configure Poetry: Don't create virtual env, install deps to system python
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=0 \
    POETRY_CACHE_DIR=/tmp/poetry_cache \
    POETRY_VIRTUALENVS_CREATE=false

# Create non-root user for security
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid appuser --shell /bin/bash --create-home appuser

# Set work directory
WORKDIR /posts_app

# Copy poetry files
COPY pyproject.toml ./
COPY poetry.lock ./

# Install dependencies
RUN poetry lock && \
    poetry install --only=main --no-root && \
    rm -rf $POETRY_CACHE_DIR

# Copy application code
COPY src/ ./src/

# Change ownership of the app directory to appuser
RUN chown -R appuser:appuser /posts_app
# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

ENV PYTHONPATH=/posts_app/src
# Run the application using poetry
CMD ["poetry", "run", "uvicorn", "entrypoints.api.main:app", "--host", "0.0.0.0", "--port", "8000"]========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/Dockerfile ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/README.md ==========
# posts_app

## Descripción
Aplicación para gestionar publicaciones, desarrollada en Python con FastAPI y PostgreSQL.

## Requisitos

- Python 3.11
- Poetry version 2.1.1
- Docker
- Postman (Opcional para pruebas API)
- Minikube (para despliegue en Kubernetes)
- kubectl (para gestionar Kubernetes)

## Estructura del Proyecto

```
.
├── src/
│   ├── domain/             # Capa de dominio
│   │   ├── models/         # Modelos de dominio
│   │   ├── ports/          # Puertos (interfaces)
│   │   └── use_cases/      # Casos de uso
│   ├── adapters/           # Capa de adaptadores
│   │   └── database/       # Adaptador de base de datos
│   └── entrypoints/        # Puntos de entrada
│       └── api/            # API REST
├── tests/                  # Pruebas
├── Dockerfile              # Configuración de Docker
├── pyproject.toml          # Configuración de Poetry
└── README.md               # Este archivo
```

## Variables de entorno
Crea un archivo `.env` con:
- `POSTGRES_HOST`
- `POSTGRES_USER`
- `POSTGRES_PASSWORD`
- `POSTGRES_DB`

## Instalación
```sh
poetry install
```

## Ejecuciòn Local
```sh
poetry run uvicorn entrypoints.api.main:app
```

## Pruebas
```sh
poetry run pytest --cov=src
```

### Despliegue en Kubernetes (Minukube)
1. **Inicia Minikube**
   ```sh
   minikube start
   ```

2. **(Opcional) Usa el Docker de Minikube**
   ```sh
   eval $(minikube docker-env)
   docker build -t posts-app:tag .
   ```

3. **Despliega los recursos**
    Asegúrate de estar en el directorio donde están los archivos (raiz/k8s) YAML y ejecuta:
   ```sh
   kubectl apply -f .
   ```

4. **Accede a la app desde tu navegador**
   ```sh
   minikube service posts-app-service
   ```

### Autor
- [Sebastian Betancourth Zapata](https://github.com/sebastian-blip)

========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/README.md ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/poetry.lock ==========
# This file is automatically @generated by Poetry 2.1.4 and should not be changed by hand.

[[package]]
name = "aerich"
version = "0.9.1"
description = "A database migrations tool for Tortoise ORM."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "aerich-0.9.1-py3-none-any.whl", hash = "sha256:6ff34a2104454d03f7473dc99e7ad51f405a909c261126a1b8a52d44ca7b4cbc"},
    {file = "aerich-0.9.1.tar.gz", hash = "sha256:629afbef5902635c41f410dd05def984c02e05e62d8a2020210a29a4aae19001"},
]

[package.dependencies]
asyncclick = ">=8.1.7,<9.0.0"
dictdiffer = ">=0.9.0,<1.0.0"
pydantic = ">=2.0.2,<2.1.0 || >2.1.0,<2.7.0 || >2.7.0,<3.0.0"
tortoise-orm = ">=0.24.0,<1.0.0"

[package.extras]
asyncmy = ["asyncmy (>=0.2.9) ; python_version < \"4.0\""]
asyncpg = ["asyncpg"]
mysql = ["aiomysql (>=0.2.0)"]
psycopg = ["psycopg[binary,pool] (>=3.0.12,<4.0.0)"]
toml = ["tomli-w (>=1.1.0,<2.0.0) ; python_version >= \"3.11\"", "tomlkit (>=0.11.4,<1.0.0) ; python_version < \"3.11\""]

[[package]]
name = "aiosqlite"
version = "0.21.0"
description = "asyncio bridge to the standard sqlite3 module"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "aiosqlite-0.21.0-py3-none-any.whl", hash = "sha256:2549cf4057f95f53dcba16f2b64e8e2791d7e1adedb13197dd8ed77bb226d7d0"},
    {file = "aiosqlite-0.21.0.tar.gz", hash = "sha256:131bb8056daa3bc875608c631c678cda73922a2d4ba8aec373b19f18c17e7aa3"},
]

[package.dependencies]
typing_extensions = ">=4.0"

[package.extras]
dev = ["attribution (==1.7.1)", "black (==24.3.0)", "build (>=1.2)", "coverage[toml] (==7.6.10)", "flake8 (==7.0.0)", "flake8-bugbear (==24.12.12)", "flit (==3.10.1)", "mypy (==1.14.1)", "ufmt (==2.5.1)", "usort (==1.0.8.post1)"]
docs = ["sphinx (==8.1.3)", "sphinx-mdinclude (==0.6.1)"]

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "annotated_types-0.7.0-py3-none-any.whl", hash = "sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53"},
    {file = "annotated_types-0.7.0.tar.gz", hash = "sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89"},
]

[[package]]
name = "anyio"
version = "4.10.0"
description = "High-level concurrency and networking framework on top of asyncio or Trio"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "anyio-4.10.0-py3-none-any.whl", hash = "sha256:60e474ac86736bbfd6f210f7a61218939c318f43f9972497381f1c5e930ed3d1"},
    {file = "anyio-4.10.0.tar.gz", hash = "sha256:3f3fae35c96039744587aa5b8371e7e8e603c0702999535961dd336026973ba6"},
]

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
trio = ["trio (>=0.26.1)"]

[[package]]
name = "asyncclick"
version = "8.2.2.2"
description = "Composable command line interface toolkit, async fork"
optional = false
python-versions = ">=3.11"
groups = ["dev"]
files = [
    {file = "asyncclick-8.2.2.2-py3-none-any.whl", hash = "sha256:ee500f57923e2588d624227d80b568546325a758b902a89519913926454187d9"},
    {file = "asyncclick-8.2.2.2.tar.gz", hash = "sha256:014f6b7bfb1ef34a2215bc36aebd5150d5d2e50668b12eceb749961e32c24660"},
]

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "asyncpg"
version = "0.30.0"
description = "An asyncio PostgreSQL driver"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:bfb4dd5ae0699bad2b233672c8fc5ccbd9ad24b89afded02341786887e37927e"},
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:dc1f62c792752a49f88b7e6f774c26077091b44caceb1983509edc18a2222ec0"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3152fef2e265c9c24eec4ee3d22b4f4d2703d30614b0b6753e9ed4115c8a146f"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c7255812ac85099a0e1ffb81b10dc477b9973345793776b128a23e60148dd1af"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:578445f09f45d1ad7abddbff2a3c7f7c291738fdae0abffbeb737d3fc3ab8b75"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:c42f6bb65a277ce4d93f3fba46b91a265631c8df7250592dd4f11f8b0152150f"},
    {file = "asyncpg-0.30.0-cp310-cp310-win32.whl", hash = "sha256:aa403147d3e07a267ada2ae34dfc9324e67ccc4cdca35261c8c22792ba2b10cf"},
    {file = "asyncpg-0.30.0-cp310-cp310-win_amd64.whl", hash = "sha256:fb622c94db4e13137c4c7f98834185049cc50ee01d8f657ef898b6407c7b9c50"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:5e0511ad3dec5f6b4f7a9e063591d407eee66b88c14e2ea636f187da1dcfff6a"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:915aeb9f79316b43c3207363af12d0e6fd10776641a7de8a01212afd95bdf0ed"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1c198a00cce9506fcd0bf219a799f38ac7a237745e1d27f0e1f66d3707c84a5a"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3326e6d7381799e9735ca2ec9fd7be4d5fef5dcbc3cb555d8a463d8460607956"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:51da377487e249e35bd0859661f6ee2b81db11ad1f4fc036194bc9cb2ead5056"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:bc6d84136f9c4d24d358f3b02be4b6ba358abd09f80737d1ac7c444f36108454"},
    {file = "asyncpg-0.30.0-cp311-cp311-win32.whl", hash = "sha256:574156480df14f64c2d76450a3f3aaaf26105869cad3865041156b38459e935d"},
    {file = "asyncpg-0.30.0-cp311-cp311-win_amd64.whl", hash = "sha256:3356637f0bd830407b5597317b3cb3571387ae52ddc3bca6233682be88bbbc1f"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:c902a60b52e506d38d7e80e0dd5399f657220f24635fee368117b8b5fce1142e"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:aca1548e43bbb9f0f627a04666fedaca23db0a31a84136ad1f868cb15deb6e3a"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6c2a2ef565400234a633da0eafdce27e843836256d40705d83ab7ec42074efb3"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1292b84ee06ac8a2ad8e51c7475aa309245874b61333d97411aab835c4a2f737"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:0f5712350388d0cd0615caec629ad53c81e506b1abaaf8d14c93f54b35e3595a"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:db9891e2d76e6f425746c5d2da01921e9a16b5a71a1c905b13f30e12a257c4af"},
    {file = "asyncpg-0.30.0-cp312-cp312-win32.whl", hash = "sha256:68d71a1be3d83d0570049cd1654a9bdfe506e794ecc98ad0873304a9f35e411e"},
    {file = "asyncpg-0.30.0-cp312-cp312-win_amd64.whl", hash = "sha256:9a0292c6af5c500523949155ec17b7fe01a00ace33b68a476d6b5059f9630305"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:05b185ebb8083c8568ea8a40e896d5f7af4b8554b64d7719c0eaa1eb5a5c3a70"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:c47806b1a8cbb0a0db896f4cd34d89942effe353a5035c62734ab13b9f938da3"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9b6fde867a74e8c76c71e2f64f80c64c0f3163e687f1763cfaf21633ec24ec33"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:46973045b567972128a27d40001124fbc821c87a6cade040cfcd4fa8a30bcdc4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:9110df111cabc2ed81aad2f35394a00cadf4f2e0635603db6ebbd0fc896f46a4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:04ff0785ae7eed6cc138e73fc67b8e51d54ee7a3ce9b63666ce55a0bf095f7ba"},
    {file = "asyncpg-0.30.0-cp313-cp313-win32.whl", hash = "sha256:ae374585f51c2b444510cdf3595b97ece4f233fde739aa14b50e0d64e8a7a590"},
    {file = "asyncpg-0.30.0-cp313-cp313-win_amd64.whl", hash = "sha256:f59b430b8e27557c3fb9869222559f7417ced18688375825f8f12302c34e915e"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:29ff1fc8b5bf724273782ff8b4f57b0f8220a1b2324184846b39d1ab4122031d"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:64e899bce0600871b55368b8483e5e3e7f1860c9482e7f12e0a771e747988168"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5b290f4726a887f75dcd1b3006f484252db37602313f806e9ffc4e5996cfe5cb"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f86b0e2cd3f1249d6fe6fd6cfe0cd4538ba994e2d8249c0491925629b9104d0f"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:393af4e3214c8fa4c7b86da6364384c0d1b3298d45803375572f415b6f673f38"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:fd4406d09208d5b4a14db9a9dbb311b6d7aeeab57bded7ed2f8ea41aeef39b34"},
    {file = "asyncpg-0.30.0-cp38-cp38-win32.whl", hash = "sha256:0b448f0150e1c3b96cb0438a0d0aa4871f1472e58de14a3ec320dbb2798fb0d4"},
    {file = "asyncpg-0.30.0-cp38-cp38-win_amd64.whl", hash = "sha256:f23b836dd90bea21104f69547923a02b167d999ce053f3d502081acea2fba15b"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6f4e83f067b35ab5e6371f8a4c93296e0439857b4569850b178a01385e82e9ad"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:5df69d55add4efcd25ea2a3b02025b669a285b767bfbf06e356d68dbce4234ff"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a3479a0d9a852c7c84e822c073622baca862d1217b10a02dd57ee4a7a081f708"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:26683d3b9a62836fad771a18ecf4659a30f348a561279d6227dab96182f46144"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:1b982daf2441a0ed314bd10817f1606f1c28b1136abd9e4f11335358c2c631cb"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:1c06a3a50d014b303e5f6fc1e5f95eb28d2cee89cf58384b700da621e5d5e547"},
    {file = "asyncpg-0.30.0-cp39-cp39-win32.whl", hash = "sha256:1b11a555a198b08f5c4baa8f8231c74a366d190755aa4f99aacec5970afe929a"},
    {file = "asyncpg-0.30.0-cp39-cp39-win_amd64.whl", hash = "sha256:8b684a3c858a83cd876f05958823b68e8d14ec01bb0c0d14a6704c5bf9711773"},
    {file = "asyncpg-0.30.0.tar.gz", hash = "sha256:c551e9928ab6707602f44811817f82ba3c446e018bfe1d3abecc8ba5f3eac851"},
]

[package.extras]
docs = ["Sphinx (>=8.1.3,<8.2.0)", "sphinx-rtd-theme (>=1.2.2)"]
gssauth = ["gssapi ; platform_system != \"Windows\"", "sspilib ; platform_system == \"Windows\""]
test = ["distro (>=1.9.0,<1.10.0)", "flake8 (>=6.1,<7.0)", "flake8-pyi (>=24.1.0,<24.2.0)", "gssapi ; platform_system == \"Linux\"", "k5test ; platform_system == \"Linux\"", "mypy (>=1.8.0,<1.9.0)", "sspilib ; platform_system == \"Windows\"", "uvloop (>=0.15.3) ; platform_system != \"Windows\" and python_version < \"3.14.0\""]

[[package]]
name = "bandit"
version = "1.8.6"
description = "Security oriented static analyser for python code."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "bandit-1.8.6-py3-none-any.whl", hash = "sha256:3348e934d736fcdb68b6aa4030487097e23a501adf3e7827b63658df464dddd0"},
    {file = "bandit-1.8.6.tar.gz", hash = "sha256:dbfe9c25fc6961c2078593de55fd19f2559f9e45b99f1272341f5b95dea4e56b"},
]

[package.dependencies]
colorama = {version = ">=0.3.9", markers = "platform_system == \"Windows\""}
PyYAML = ">=5.3.1"
rich = "*"
stevedore = ">=1.20.0"

[package.extras]
baseline = ["GitPython (>=3.1.30)"]
sarif = ["jschema-to-python (>=1.2.3)", "sarif-om (>=1.0.4)"]
test = ["beautifulsoup4 (>=4.8.0)", "coverage (>=4.5.4)", "fixtures (>=3.0.0)", "flake8 (>=4.0.0)", "pylint (==1.9.4)", "stestr (>=2.5.0)", "testscenarios (>=0.5.0)", "testtools (>=2.3.0)"]
toml = ["tomli (>=1.1.0) ; python_version < \"3.11\""]
yaml = ["PyYAML"]

[[package]]
name = "black"
version = "25.1.0"
description = "The uncompromising code formatter."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "black-25.1.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:759e7ec1e050a15f89b770cefbf91ebee8917aac5c20483bc2d80a6c3a04df32"},
    {file = "black-25.1.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e519ecf93120f34243e6b0054db49c00a35f84f195d5bce7e9f5cfc578fc2da"},
    {file = "black-25.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:055e59b198df7ac0b7efca5ad7ff2516bca343276c466be72eb04a3bcc1f82d7"},
    {file = "black-25.1.0-cp310-cp310-win_amd64.whl", hash = "sha256:db8ea9917d6f8fc62abd90d944920d95e73c83a5ee3383493e35d271aca872e9"},
    {file = "black-25.1.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:a39337598244de4bae26475f77dda852ea00a93bd4c728e09eacd827ec929df0"},
    {file = "black-25.1.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:96c1c7cd856bba8e20094e36e0f948718dc688dba4a9d78c3adde52b9e6c2299"},
    {file = "black-25.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:bce2e264d59c91e52d8000d507eb20a9aca4a778731a08cfff7e5ac4a4bb7096"},
    {file = "black-25.1.0-cp311-cp311-win_amd64.whl", hash = "sha256:172b1dbff09f86ce6f4eb8edf9dede08b1fce58ba194c87d7a4f1a5aa2f5b3c2"},
    {file = "black-25.1.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:4b60580e829091e6f9238c848ea6750efed72140b91b048770b64e74fe04908b"},
    {file = "black-25.1.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:1e2978f6df243b155ef5fa7e558a43037c3079093ed5d10fd84c43900f2d8ecc"},
    {file = "black-25.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:3b48735872ec535027d979e8dcb20bf4f70b5ac75a8ea99f127c106a7d7aba9f"},
    {file = "black-25.1.0-cp312-cp312-win_amd64.whl", hash = "sha256:ea0213189960bda9cf99be5b8c8ce66bb054af5e9e861249cd23471bd7b0b3ba"},
    {file = "black-25.1.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:8f0b18a02996a836cc9c9c78e5babec10930862827b1b724ddfe98ccf2f2fe4f"},
    {file = "black-25.1.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:afebb7098bfbc70037a053b91ae8437c3857482d3a690fefc03e9ff7aa9a5fd3"},
    {file = "black-25.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:030b9759066a4ee5e5aca28c3c77f9c64789cdd4de8ac1df642c40b708be6171"},
    {file = "black-25.1.0-cp313-cp313-win_amd64.whl", hash = "sha256:a22f402b410566e2d1c950708c77ebf5ebd5d0d88a6a2e87c86d9fb48afa0d18"},
    {file = "black-25.1.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:a1ee0a0c330f7b5130ce0caed9936a904793576ef4d2b98c40835d6a65afa6a0"},
    {file = "black-25.1.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:f3df5f1bf91d36002b0a75389ca8663510cf0531cca8aa5c1ef695b46d98655f"},
    {file = "black-25.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:d9e6827d563a2c820772b32ce8a42828dc6790f095f441beef18f96aa6f8294e"},
    {file = "black-25.1.0-cp39-cp39-win_amd64.whl", hash = "sha256:bacabb307dca5ebaf9c118d2d2f6903da0d62c9faa82bd21a33eecc319559355"},
    {file = "black-25.1.0-py3-none-any.whl", hash = "sha256:95e8176dae143ba9097f351d174fdaf0ccd29efb414b362ae3fd72bf0f710717"},
    {file = "black-25.1.0.tar.gz", hash = "sha256:33496d5cd1222ad73391352b4ae8da15253c5de89b93a80b3e2c8d9a19ec2666"},
]

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
packaging = ">=22.0"
pathspec = ">=0.9.0"
platformdirs = ">=2"

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.10)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "certifi"
version = "2025.8.3"
description = "Python package for providing Mozilla's CA Bundle."
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "certifi-2025.8.3-py3-none-any.whl", hash = "sha256:f6c12493cfb1b06ba2ff328595af9350c65d6644968e5d3a2ffd78699af217a5"},
    {file = "certifi-2025.8.3.tar.gz", hash = "sha256:e564105f78ded564e3ae7c923924435e1daa7463faeab5bb932bc53ffae63407"},
]

[[package]]
name = "click"
version = "8.2.1"
description = "Composable command line interface toolkit"
optional = false
python-versions = ">=3.10"
groups = ["main"]
files = [
    {file = "click-8.2.1-py3-none-any.whl", hash = "sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b"},
    {file = "click-8.2.1.tar.gz", hash = "sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202"},
]

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"
groups = ["main", "dev"]
files = [
    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},
    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},
]
markers = {main = "platform_system == \"Windows\" or sys_platform == \"win32\"", dev = "sys_platform == \"win32\" or platform_system == \"Windows\""}

[[package]]
name = "coverage"
version = "7.10.4"
description = "Code coverage measurement for Python"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "coverage-7.10.4-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:d92d6edb0ccafd20c6fbf9891ca720b39c2a6a4b4a6f9cf323ca2c986f33e475"},
    {file = "coverage-7.10.4-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:7202da14dc0236884fcc45665ffb2d79d4991a53fbdf152ab22f69f70923cc22"},
    {file = "coverage-7.10.4-cp310-cp310-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:ada418633ae24ec8d0fcad5efe6fc7aa3c62497c6ed86589e57844ad04365674"},
    {file = "coverage-7.10.4-cp310-cp310-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:b828e33eca6c3322adda3b5884456f98c435182a44917ded05005adfa1415500"},
    {file = "coverage-7.10.4-cp310-cp310-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:802793ba397afcfdbe9f91f89d65ae88b958d95edc8caf948e1f47d8b6b2b606"},
    {file = "coverage-7.10.4-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:d0b23512338c54101d3bf7a1ab107d9d75abda1d5f69bc0887fd079253e4c27e"},
    {file = "coverage-7.10.4-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:f36b7dcf72d06a8c5e2dd3aca02be2b1b5db5f86404627dff834396efce958f2"},
    {file = "coverage-7.10.4-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:fce316c367a1dc2c411821365592eeb335ff1781956d87a0410eae248188ba51"},
    {file = "coverage-7.10.4-cp310-cp310-win32.whl", hash = "sha256:8c5dab29fc8070b3766b5fc85f8d89b19634584429a2da6d42da5edfadaf32ae"},
    {file = "coverage-7.10.4-cp310-cp310-win_amd64.whl", hash = "sha256:4b0d114616f0fccb529a1817457d5fb52a10e106f86c5fb3b0bd0d45d0d69b93"},
    {file = "coverage-7.10.4-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:05d5f98ec893d4a2abc8bc5f046f2f4367404e7e5d5d18b83de8fde1093ebc4f"},
    {file = "coverage-7.10.4-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:9267efd28f8994b750d171e58e481e3bbd69e44baed540e4c789f8e368b24b88"},
    {file = "coverage-7.10.4-cp311-cp311-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:4456a039fdc1a89ea60823d0330f1ac6f97b0dbe9e2b6fb4873e889584b085fb"},
    {file = "coverage-7.10.4-cp311-cp311-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:c2bfbd2a9f7e68a21c5bd191be94bfdb2691ac40d325bac9ef3ae45ff5c753d9"},
    {file = "coverage-7.10.4-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:0ab7765f10ae1df7e7fe37de9e64b5a269b812ee22e2da3f84f97b1c7732a0d8"},
    {file = "coverage-7.10.4-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:0a09b13695166236e171ec1627ff8434b9a9bae47528d0ba9d944c912d33b3d2"},
    {file = "coverage-7.10.4-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:5c9e75dfdc0167d5675e9804f04a56b2cf47fb83a524654297000b578b8adcb7"},
    {file = "coverage-7.10.4-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:c751261bfe6481caba15ec005a194cb60aad06f29235a74c24f18546d8377df0"},
    {file = "coverage-7.10.4-cp311-cp311-win32.whl", hash = "sha256:051c7c9e765f003c2ff6e8c81ccea28a70fb5b0142671e4e3ede7cebd45c80af"},
    {file = "coverage-7.10.4-cp311-cp311-win_amd64.whl", hash = "sha256:1a647b152f10be08fb771ae4a1421dbff66141e3d8ab27d543b5eb9ea5af8e52"},
    {file = "coverage-7.10.4-cp311-cp311-win_arm64.whl", hash = "sha256:b09b9e4e1de0d406ca9f19a371c2beefe3193b542f64a6dd40cfcf435b7d6aa0"},
    {file = "coverage-7.10.4-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:a1f0264abcabd4853d4cb9b3d164adbf1565da7dab1da1669e93f3ea60162d79"},
    {file = "coverage-7.10.4-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:536cbe6b118a4df231b11af3e0f974a72a095182ff8ec5f4868c931e8043ef3e"},
    {file = "coverage-7.10.4-cp312-cp312-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:9a4c0d84134797b7bf3f080599d0cd501471f6c98b715405166860d79cfaa97e"},
    {file = "coverage-7.10.4-cp312-cp312-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:7c155fc0f9cee8c9803ea0ad153ab6a3b956baa5d4cd993405dc0b45b2a0b9e0"},
    {file = "coverage-7.10.4-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:0a5f2ab6e451d4b07855d8bcf063adf11e199bff421a4ba57f5bb95b7444ca62"},
    {file = "coverage-7.10.4-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:685b67d99b945b0c221be0780c336b303a7753b3e0ec0d618c795aada25d5e7a"},
    {file = "coverage-7.10.4-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:0c079027e50c2ae44da51c2e294596cbc9dbb58f7ca45b30651c7e411060fc23"},
    {file = "coverage-7.10.4-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:3749aa72b93ce516f77cf5034d8e3c0dfd45c6e8a163a602ede2dc5f9a0bb927"},
    {file = "coverage-7.10.4-cp312-cp312-win32.whl", hash = "sha256:fecb97b3a52fa9bcd5a7375e72fae209088faf671d39fae67261f37772d5559a"},
    {file = "coverage-7.10.4-cp312-cp312-win_amd64.whl", hash = "sha256:26de58f355626628a21fe6a70e1e1fad95702dafebfb0685280962ae1449f17b"},
    {file = "coverage-7.10.4-cp312-cp312-win_arm64.whl", hash = "sha256:67e8885408f8325198862bc487038a4980c9277d753cb8812510927f2176437a"},
    {file = "coverage-7.10.4-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:2b8e1d2015d5dfdbf964ecef12944c0c8c55b885bb5c0467ae8ef55e0e151233"},
    {file = "coverage-7.10.4-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:25735c299439018d66eb2dccf54f625aceb78645687a05f9f848f6e6c751e169"},
    {file = "coverage-7.10.4-cp313-cp313-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:715c06cb5eceac4d9b7cdf783ce04aa495f6aff657543fea75c30215b28ddb74"},
    {file = "coverage-7.10.4-cp313-cp313-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:e017ac69fac9aacd7df6dc464c05833e834dc5b00c914d7af9a5249fcccf07ef"},
    {file = "coverage-7.10.4-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:bad180cc40b3fccb0f0e8c702d781492654ac2580d468e3ffc8065e38c6c2408"},
    {file = "coverage-7.10.4-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:becbdcd14f685fada010a5f792bf0895675ecf7481304fe159f0cd3f289550bd"},
    {file = "coverage-7.10.4-cp313-cp313-musllinux_1_2_i686.whl", hash = "sha256:0b485ca21e16a76f68060911f97ebbe3e0d891da1dbbce6af7ca1ab3f98b9097"},
    {file = "coverage-7.10.4-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:6c1d098ccfe8e1e0a1ed9a0249138899948afd2978cbf48eb1cc3fcd38469690"},
    {file = "coverage-7.10.4-cp313-cp313-win32.whl", hash = "sha256:8630f8af2ca84b5c367c3df907b1706621abe06d6929f5045fd628968d421e6e"},
    {file = "coverage-7.10.4-cp313-cp313-win_amd64.whl", hash = "sha256:f68835d31c421736be367d32f179e14ca932978293fe1b4c7a6a49b555dff5b2"},
    {file = "coverage-7.10.4-cp313-cp313-win_arm64.whl", hash = "sha256:6eaa61ff6724ca7ebc5326d1fae062d85e19b38dd922d50903702e6078370ae7"},
    {file = "coverage-7.10.4-cp313-cp313t-macosx_10_13_x86_64.whl", hash = "sha256:702978108876bfb3d997604930b05fe769462cc3000150b0e607b7b444f2fd84"},
    {file = "coverage-7.10.4-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:e8f978e8c5521d9c8f2086ac60d931d583fab0a16f382f6eb89453fe998e2484"},
    {file = "coverage-7.10.4-cp313-cp313t-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:df0ac2ccfd19351411c45e43ab60932b74472e4648b0a9edf6a3b58846e246a9"},
    {file = "coverage-7.10.4-cp313-cp313t-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:73a0d1aaaa3796179f336448e1576a3de6fc95ff4f07c2d7251d4caf5d18cf8d"},
    {file = "coverage-7.10.4-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:873da6d0ed6b3ffc0bc01f2c7e3ad7e2023751c0d8d86c26fe7322c314b031dc"},
    {file = "coverage-7.10.4-cp313-cp313t-musllinux_1_2_aarch64.whl", hash = "sha256:c6446c75b0e7dda5daa876a1c87b480b2b52affb972fedd6c22edf1aaf2e00ec"},
    {file = "coverage-7.10.4-cp313-cp313t-musllinux_1_2_i686.whl", hash = "sha256:6e73933e296634e520390c44758d553d3b573b321608118363e52113790633b9"},
    {file = "coverage-7.10.4-cp313-cp313t-musllinux_1_2_x86_64.whl", hash = "sha256:52073d4b08d2cb571234c8a71eb32af3c6923149cf644a51d5957ac128cf6aa4"},
    {file = "coverage-7.10.4-cp313-cp313t-win32.whl", hash = "sha256:e24afb178f21f9ceb1aefbc73eb524769aa9b504a42b26857243f881af56880c"},
    {file = "coverage-7.10.4-cp313-cp313t-win_amd64.whl", hash = "sha256:be04507ff1ad206f4be3d156a674e3fb84bbb751ea1b23b142979ac9eebaa15f"},
    {file = "coverage-7.10.4-cp313-cp313t-win_arm64.whl", hash = "sha256:f3e3ff3f69d02b5dad67a6eac68cc9c71ae343b6328aae96e914f9f2f23a22e2"},
    {file = "coverage-7.10.4-cp314-cp314-macosx_10_13_x86_64.whl", hash = "sha256:a59fe0af7dd7211ba595cf7e2867458381f7e5d7b4cffe46274e0b2f5b9f4eb4"},
    {file = "coverage-7.10.4-cp314-cp314-macosx_11_0_arm64.whl", hash = "sha256:3a6c35c5b70f569ee38dc3350cd14fdd0347a8b389a18bb37538cc43e6f730e6"},
    {file = "coverage-7.10.4-cp314-cp314-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:acb7baf49f513554c4af6ef8e2bd6e8ac74e6ea0c7386df8b3eb586d82ccccc4"},
    {file = "coverage-7.10.4-cp314-cp314-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:a89afecec1ed12ac13ed203238b560cbfad3522bae37d91c102e690b8b1dc46c"},
    {file = "coverage-7.10.4-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:480442727f464407d8ade6e677b7f21f3b96a9838ab541b9a28ce9e44123c14e"},
    {file = "coverage-7.10.4-cp314-cp314-musllinux_1_2_aarch64.whl", hash = "sha256:a89bf193707f4a17f1ed461504031074d87f035153239f16ce86dfb8f8c7ac76"},
    {file = "coverage-7.10.4-cp314-cp314-musllinux_1_2_i686.whl", hash = "sha256:3ddd912c2fc440f0fb3229e764feec85669d5d80a988ff1b336a27d73f63c818"},
    {file = "coverage-7.10.4-cp314-cp314-musllinux_1_2_x86_64.whl", hash = "sha256:8a538944ee3a42265e61c7298aeba9ea43f31c01271cf028f437a7b4075592cf"},
    {file = "coverage-7.10.4-cp314-cp314-win32.whl", hash = "sha256:fd2e6002be1c62476eb862b8514b1ba7e7684c50165f2a8d389e77da6c9a2ebd"},
    {file = "coverage-7.10.4-cp314-cp314-win_amd64.whl", hash = "sha256:ec113277f2b5cf188d95fb66a65c7431f2b9192ee7e6ec9b72b30bbfb53c244a"},
    {file = "coverage-7.10.4-cp314-cp314-win_arm64.whl", hash = "sha256:9744954bfd387796c6a091b50d55ca7cac3d08767795b5eec69ad0f7dbf12d38"},
    {file = "coverage-7.10.4-cp314-cp314t-macosx_10_13_x86_64.whl", hash = "sha256:5af4829904dda6aabb54a23879f0f4412094ba9ef153aaa464e3c1b1c9bc98e6"},
    {file = "coverage-7.10.4-cp314-cp314t-macosx_11_0_arm64.whl", hash = "sha256:7bba5ed85e034831fac761ae506c0644d24fd5594727e174b5a73aff343a7508"},
    {file = "coverage-7.10.4-cp314-cp314t-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:d57d555b0719834b55ad35045de6cc80fc2b28e05adb6b03c98479f9553b387f"},
    {file = "coverage-7.10.4-cp314-cp314t-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:ba62c51a72048bb1ea72db265e6bd8beaabf9809cd2125bbb5306c6ce105f214"},
    {file = "coverage-7.10.4-cp314-cp314t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:0acf0c62a6095f07e9db4ec365cc58c0ef5babb757e54745a1aa2ea2a2564af1"},
    {file = "coverage-7.10.4-cp314-cp314t-musllinux_1_2_aarch64.whl", hash = "sha256:e1033bf0f763f5cf49ffe6594314b11027dcc1073ac590b415ea93463466deec"},
    {file = "coverage-7.10.4-cp314-cp314t-musllinux_1_2_i686.whl", hash = "sha256:92c29eff894832b6a40da1789b1f252305af921750b03ee4535919db9179453d"},
    {file = "coverage-7.10.4-cp314-cp314t-musllinux_1_2_x86_64.whl", hash = "sha256:822c4c830989c2093527e92acd97be4638a44eb042b1bdc0e7a278d84a070bd3"},
    {file = "coverage-7.10.4-cp314-cp314t-win32.whl", hash = "sha256:e694d855dac2e7cf194ba33653e4ba7aad7267a802a7b3fc4347d0517d5d65cd"},
    {file = "coverage-7.10.4-cp314-cp314t-win_amd64.whl", hash = "sha256:efcc54b38ef7d5bfa98050f220b415bc5bb3d432bd6350a861cf6da0ede2cdcd"},
    {file = "coverage-7.10.4-cp314-cp314t-win_arm64.whl", hash = "sha256:6f3a3496c0fa26bfac4ebc458747b778cff201c8ae94fa05e1391bab0dbc473c"},
    {file = "coverage-7.10.4-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:48fd4d52600c2a9d5622e52dfae674a7845c5e1dceaf68b88c99feb511fbcfd6"},
    {file = "coverage-7.10.4-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:56217b470d09d69e6b7dcae38200f95e389a77db801cb129101697a4553b18b6"},
    {file = "coverage-7.10.4-cp39-cp39-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:44ac3f21a6e28c5ff7f7a47bca5f87885f6a1e623e637899125ba47acd87334d"},
    {file = "coverage-7.10.4-cp39-cp39-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:3387739d72c84d17b4d2f7348749cac2e6700e7152026912b60998ee9a40066b"},
    {file = "coverage-7.10.4-cp39-cp39-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:3f111ff20d9a6348e0125be892608e33408dd268f73b020940dfa8511ad05503"},
    {file = "coverage-7.10.4-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:01a852f0a9859734b018a3f483cc962d0b381d48d350b1a0c47d618c73a0c398"},
    {file = "coverage-7.10.4-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:225111dd06759ba4e37cee4c0b4f3df2b15c879e9e3c37bf986389300b9917c3"},
    {file = "coverage-7.10.4-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:2178d4183bd1ba608f0bb12e71e55838ba1b7dbb730264f8b08de9f8ef0c27d0"},
    {file = "coverage-7.10.4-cp39-cp39-win32.whl", hash = "sha256:93d175fe81913aee7a6ea430abbdf2a79f1d9fd451610e12e334e4fe3264f563"},
    {file = "coverage-7.10.4-cp39-cp39-win_amd64.whl", hash = "sha256:2221a823404bb941c7721cf0ef55ac6ee5c25d905beb60c0bba5e5e85415d353"},
    {file = "coverage-7.10.4-py3-none-any.whl", hash = "sha256:065d75447228d05121e5c938ca8f0e91eed60a1eb2d1258d42d5084fecfc3302"},
    {file = "coverage-7.10.4.tar.gz", hash = "sha256:25f5130af6c8e7297fd14634955ba9e1697f47143f289e2a23284177c0061d27"},
]

[package.extras]
toml = ["tomli ; python_full_version <= \"3.11.0a6\""]

[[package]]
name = "dictdiffer"
version = "0.9.0"
description = "Dictdiffer is a library that helps you to diff and patch dictionaries."
optional = false
python-versions = "*"
groups = ["dev"]
files = [
    {file = "dictdiffer-0.9.0-py2.py3-none-any.whl", hash = "sha256:442bfc693cfcadaf46674575d2eba1c53b42f5e404218ca2c2ff549f2df56595"},
    {file = "dictdiffer-0.9.0.tar.gz", hash = "sha256:17bacf5fbfe613ccf1b6d512bd766e6b21fb798822a133aa86098b8ac9997578"},
]

[package.extras]
all = ["Sphinx (>=3)", "check-manifest (>=0.42)", "mock (>=1.3.0)", "numpy (>=1.13.0) ; python_version < \"3.7\"", "numpy (>=1.15.0) ; python_version < \"3.8\"", "numpy (>=1.18.0) ; python_version < \"3.9\"", "numpy (>=1.20.0) ; python_version >= \"3.9\"", "pytest (==5.4.3) ; python_version <= \"3.5\"", "pytest (>=6) ; python_version > \"3.5\"", "pytest-cov (>=2.10.1)", "pytest-isort (>=1.2.0)", "pytest-pycodestyle (>=2) ; python_version <= \"3.5\"", "pytest-pycodestyle (>=2.2.0) ; python_version > \"3.5\"", "pytest-pydocstyle (>=2) ; python_version <= \"3.5\"", "pytest-pydocstyle (>=2.2.0) ; python_version > \"3.5\"", "sphinx (>=3)", "sphinx-rtd-theme (>=0.2)", "tox (>=3.7.0)"]
docs = ["Sphinx (>=3)", "sphinx-rtd-theme (>=0.2)"]
numpy = ["numpy (>=1.13.0) ; python_version < \"3.7\"", "numpy (>=1.15.0) ; python_version < \"3.8\"", "numpy (>=1.18.0) ; python_version < \"3.9\"", "numpy (>=1.20.0) ; python_version >= \"3.9\""]
tests = ["check-manifest (>=0.42)", "mock (>=1.3.0)", "pytest (==5.4.3) ; python_version <= \"3.5\"", "pytest (>=6) ; python_version > \"3.5\"", "pytest-cov (>=2.10.1)", "pytest-isort (>=1.2.0)", "pytest-pycodestyle (>=2) ; python_version <= \"3.5\"", "pytest-pycodestyle (>=2.2.0) ; python_version > \"3.5\"", "pytest-pydocstyle (>=2) ; python_version <= \"3.5\"", "pytest-pydocstyle (>=2.2.0) ; python_version > \"3.5\"", "sphinx (>=3)", "tox (>=3.7.0)"]

[[package]]
name = "fastapi"
version = "0.116.1"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "fastapi-0.116.1-py3-none-any.whl", hash = "sha256:c46ac7c312df840f0c9e220f7964bada936781bc4e2e6eb71f1c4d7553786565"},
    {file = "fastapi-0.116.1.tar.gz", hash = "sha256:ed52cbf946abfd70c5a0dccb24673f0670deeb517a88b3544d03c2a6bf283143"},
]

[package.dependencies]
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0 || >2.0.0,<2.0.1 || >2.0.1,<2.1.0 || >2.1.0,<3.0.0"
starlette = ">=0.40.0,<0.48.0"
typing-extensions = ">=4.8.0"

[package.extras]
all = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.8)", "httpx (>=0.23.0)", "itsdangerous (>=1.1.0)", "jinja2 (>=3.1.5)", "orjson (>=3.2.1)", "pydantic-extra-types (>=2.0.0)", "pydantic-settings (>=2.0.0)", "python-multipart (>=0.0.18)", "pyyaml (>=5.3.1)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)", "uvicorn[standard] (>=0.12.0)"]
standard = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.8)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]
standard-no-fastapi-cloud-cli = ["email-validator (>=2.0.0)", "fastapi-cli[standard-no-fastapi-cloud-cli] (>=0.0.8)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]

[[package]]
name = "h11"
version = "0.16.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "h11-0.16.0-py3-none-any.whl", hash = "sha256:63cf8bbe7522de3bf65932fda1d9c2772064ffb3dae62d55932da54b31cb6c86"},
    {file = "h11-0.16.0.tar.gz", hash = "sha256:4e35b956cf45792e4caa5885e69fba00bdbc6ffafbfa020300e549b208ee5ff1"},
]

[[package]]
name = "httpcore"
version = "1.0.9"
description = "A minimal low-level HTTP client."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "httpcore-1.0.9-py3-none-any.whl", hash = "sha256:2d400746a40668fc9dec9810239072b40b4484b640a8c38fd654a024c7a1bf55"},
    {file = "httpcore-1.0.9.tar.gz", hash = "sha256:6e34463af53fd2ab5d807f399a9b45ea31c3dfa2276f15a2c3f00afff6e176e8"},
]

[package.dependencies]
certifi = "*"
h11 = ">=0.16"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (==1.*)"]
trio = ["trio (>=0.22.0,<1.0)"]

[[package]]
name = "httpx"
version = "0.28.1"
description = "The next generation HTTP client."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "httpx-0.28.1-py3-none-any.whl", hash = "sha256:d909fcccc110f8c7faf814ca82a9a4d816bc5a6dbfea25d6591d6985b8ba59ad"},
    {file = "httpx-0.28.1.tar.gz", hash = "sha256:75e98c5f16b0f35b567856f597f06ff2270a374470a5c2392242528e3e3e42fc"},
]

[package.dependencies]
anyio = "*"
certifi = "*"
httpcore = "==1.*"
idna = "*"

[package.extras]
brotli = ["brotli ; platform_python_implementation == \"CPython\"", "brotlicffi ; platform_python_implementation != \"CPython\""]
cli = ["click (==8.*)", "pygments (==2.*)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (==1.*)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
optional = false
python-versions = ">=3.6"
groups = ["main"]
files = [
    {file = "idna-3.10-py3-none-any.whl", hash = "sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3"},
    {file = "idna-3.10.tar.gz", hash = "sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9"},
]

[package.extras]
all = ["flake8 (>=7.1.1)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "ruff (>=0.6.2)"]

[[package]]
name = "iniconfig"
version = "2.1.0"
description = "brain-dead simple config-ini parsing"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "iniconfig-2.1.0-py3-none-any.whl", hash = "sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760"},
    {file = "iniconfig-2.1.0.tar.gz", hash = "sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7"},
]

[[package]]
name = "iso8601"
version = "2.1.0"
description = "Simple module to parse ISO 8601 dates"
optional = false
python-versions = ">=3.7,<4.0"
groups = ["main", "dev"]
markers = "python_version < \"4.0\""
files = [
    {file = "iso8601-2.1.0-py3-none-any.whl", hash = "sha256:aac4145c4dcb66ad8b648a02830f5e2ff6c24af20f4f482689be402db2429242"},
    {file = "iso8601-2.1.0.tar.gz", hash = "sha256:6b1d3829ee8921c4301998c909f7829fa9ed3cbdac0d3b16af2d743aed1ba8df"},
]

[[package]]
name = "isort"
version = "6.0.1"
description = "A Python utility / library to sort Python imports."
optional = false
python-versions = ">=3.9.0"
groups = ["main"]
files = [
    {file = "isort-6.0.1-py3-none-any.whl", hash = "sha256:2dc5d7f65c9678d94c88dfc29161a320eec67328bc97aad576874cb4be1e9615"},
    {file = "isort-6.0.1.tar.gz", hash = "sha256:1cb5df28dfbc742e490c5e41bad6da41b805b0a8be7bc93cd0fb2a8a890ac450"},
]

[package.extras]
colors = ["colorama"]
plugins = ["setuptools"]

[[package]]
name = "markdown-it-py"
version = "4.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
optional = false
python-versions = ">=3.10"
groups = ["main"]
files = [
    {file = "markdown_it_py-4.0.0-py3-none-any.whl", hash = "sha256:87327c59b172c5011896038353a81343b6754500a08cd7a4973bb48c6d578147"},
    {file = "markdown_it_py-4.0.0.tar.gz", hash = "sha256:cb0a2b4aa34f932c007117b194e945bd74e0ec24133ceb5bac59009cda1cb9f3"},
]

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "markdown-it-pyrs", "mistletoe (>=1.0,<2.0)", "mistune (>=3.0,<4.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins (>=0.5.0)"]
profiling = ["gprof2dot"]
rtd = ["ipykernel", "jupyter_sphinx", "mdit-py-plugins (>=0.5.0)", "myst-parser", "pyyaml", "sphinx", "sphinx-book-theme (>=1.0,<2.0)", "sphinx-copybutton", "sphinx-design"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions", "requests"]

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},
    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},
]

[[package]]
name = "mypy-extensions"
version = "1.1.0"
description = "Type system extensions for programs checked with the mypy type checker."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "mypy_extensions-1.1.0-py3-none-any.whl", hash = "sha256:1be4cccdb0f2482337c4743e60421de3a356cd97508abadd57d47403e94f5505"},
    {file = "mypy_extensions-1.1.0.tar.gz", hash = "sha256:52e68efc3284861e772bbcd66823fde5ae21fd2fdb51c62a211403730b916558"},
]

[[package]]
name = "packaging"
version = "25.0"
description = "Core utilities for Python packages"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "packaging-25.0-py3-none-any.whl", hash = "sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484"},
    {file = "packaging-25.0.tar.gz", hash = "sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f"},
]

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "pathspec-0.12.1-py3-none-any.whl", hash = "sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08"},
    {file = "pathspec-0.12.1.tar.gz", hash = "sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712"},
]

[[package]]
name = "pbr"
version = "7.0.0"
description = "Python Build Reasonableness"
optional = false
python-versions = ">=2.6"
groups = ["main"]
files = [
    {file = "pbr-7.0.0-py2.py3-none-any.whl", hash = "sha256:b447e63a2bc04fd975fc0480b8d5ebf979179e2c0ae203bf1eff9ea20073bc38"},
    {file = "pbr-7.0.0.tar.gz", hash = "sha256:cf4127298723dafbce3afd13775ccf3885be5d3c8435751b867f9a6a10b71a39"},
]

[package.dependencies]
setuptools = "*"

[[package]]
name = "platformdirs"
version = "4.3.8"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "platformdirs-4.3.8-py3-none-any.whl", hash = "sha256:ff7059bb7eb1179e2685604f4aaf157cfd9535242bd23742eadc3c13542139b4"},
    {file = "platformdirs-4.3.8.tar.gz", hash = "sha256:3d512d96e16bcb959a814c9f348431070822a6496326a4be0911c40b5a74c2bc"},
]

[package.extras]
docs = ["furo (>=2024.8.6)", "proselint (>=0.14)", "sphinx (>=8.1.3)", "sphinx-autodoc-typehints (>=3)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest (>=8.3.4)", "pytest-cov (>=6)", "pytest-mock (>=3.14)"]
type = ["mypy (>=1.14.1)"]

[[package]]
name = "pluggy"
version = "1.6.0"
description = "plugin and hook calling mechanisms for python"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pluggy-1.6.0-py3-none-any.whl", hash = "sha256:e920276dd6813095e9377c0bc5566d94c932c33b27a3e3945d8389c374dd4746"},
    {file = "pluggy-1.6.0.tar.gz", hash = "sha256:7dcc130b76258d33b90f61b658791dede3486c3e6bfb003ee5c9bfb396dd22f3"},
]

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["coverage", "pytest", "pytest-benchmark"]

[[package]]
name = "pydantic"
version = "2.11.7"
description = "Data validation using Python type hints"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pydantic-2.11.7-py3-none-any.whl", hash = "sha256:dde5df002701f6de26248661f6835bbe296a47bf73990135c7d07ce741b9623b"},
    {file = "pydantic-2.11.7.tar.gz", hash = "sha256:d989c3c6cb79469287b1569f7447a17848c998458d49ebe294e975b9baf0f0db"},
]

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.33.2"
typing-extensions = ">=4.12.2"
typing-inspection = ">=0.4.0"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata ; python_version >= \"3.9\" and platform_system == \"Windows\""]

[[package]]
name = "pydantic-core"
version = "2.33.2"
description = "Core functionality for Pydantic validation and serialization"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pydantic_core-2.33.2-cp310-cp310-macosx_10_12_x86_64.whl", hash = "sha256:2b3d326aaef0c0399d9afffeb6367d5e26ddc24d351dbc9c636840ac355dc5d8"},
    {file = "pydantic_core-2.33.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e5b2671f05ba48b94cb90ce55d8bdcaaedb8ba00cc5359f6810fc918713983d"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0069c9acc3f3981b9ff4cdfaf088e98d83440a4c7ea1bc07460af3d4dc22e72d"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:d53b22f2032c42eaaf025f7c40c2e3b94568ae077a606f006d206a463bc69572"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:0405262705a123b7ce9f0b92f123334d67b70fd1f20a9372b907ce1080c7ba02"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:4b25d91e288e2c4e0662b8038a28c6a07eaac3e196cfc4ff69de4ea3db992a1b"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6bdfe4b3789761f3bcb4b1ddf33355a71079858958e3a552f16d5af19768fef2"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:efec8db3266b76ef9607c2c4c419bdb06bf335ae433b80816089ea7585816f6a"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:031c57d67ca86902726e0fae2214ce6770bbe2f710dc33063187a68744a5ecac"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_armv7l.whl", hash = "sha256:f8de619080e944347f5f20de29a975c2d815d9ddd8be9b9b7268e2e3ef68605a"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:73662edf539e72a9440129f231ed3757faab89630d291b784ca99237fb94db2b"},
    {file = "pydantic_core-2.33.2-cp310-cp310-win32.whl", hash = "sha256:0a39979dcbb70998b0e505fb1556a1d550a0781463ce84ebf915ba293ccb7e22"},
    {file = "pydantic_core-2.33.2-cp310-cp310-win_amd64.whl", hash = "sha256:b0379a2b24882fef529ec3b4987cb5d003b9cda32256024e6fe1586ac45fc640"},
    {file = "pydantic_core-2.33.2-cp311-cp311-macosx_10_12_x86_64.whl", hash = "sha256:4c5b0a576fb381edd6d27f0a85915c6daf2f8138dc5c267a57c08a62900758c7"},
    {file = "pydantic_core-2.33.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e799c050df38a639db758c617ec771fd8fb7a5f8eaaa4b27b101f266b216a246"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dc46a01bf8d62f227d5ecee74178ffc448ff4e5197c756331f71efcc66dc980f"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:a144d4f717285c6d9234a66778059f33a89096dfb9b39117663fd8413d582dcc"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:73cf6373c21bc80b2e0dc88444f41ae60b2f070ed02095754eb5a01df12256de"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3dc625f4aa79713512d1976fe9f0bc99f706a9dee21dfd1810b4bbbf228d0e8a"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:881b21b5549499972441da4758d662aeea93f1923f953e9cbaff14b8b9565aef"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bdc25f3681f7b78572699569514036afe3c243bc3059d3942624e936ec93450e"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:fe5b32187cbc0c862ee201ad66c30cf218e5ed468ec8dc1cf49dec66e160cc4d"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_armv7l.whl", hash = "sha256:bc7aee6f634a6f4a95676fcb5d6559a2c2a390330098dba5e5a5f28a2e4ada30"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:235f45e5dbcccf6bd99f9f472858849f73d11120d76ea8707115415f8e5ebebf"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win32.whl", hash = "sha256:6368900c2d3ef09b69cb0b913f9f8263b03786e5b2a387706c5afb66800efd51"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win_amd64.whl", hash = "sha256:1e063337ef9e9820c77acc768546325ebe04ee38b08703244c1309cccc4f1bab"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win_arm64.whl", hash = "sha256:6b99022f1d19bc32a4c2a0d544fc9a76e3be90f0b3f4af413f87d38749300e65"},
    {file = "pydantic_core-2.33.2-cp312-cp312-macosx_10_12_x86_64.whl", hash = "sha256:a7ec89dc587667f22b6a0b6579c249fca9026ce7c333fc142ba42411fa243cdc"},
    {file = "pydantic_core-2.33.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:3c6db6e52c6d70aa0d00d45cdb9b40f0433b96380071ea80b09277dba021ddf7"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4e61206137cbc65e6d5256e1166f88331d3b6238e082d9f74613b9b765fb9025"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:eb8c529b2819c37140eb51b914153063d27ed88e3bdc31b71198a198e921e011"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c52b02ad8b4e2cf14ca7b3d918f3eb0ee91e63b3167c32591e57c4317e134f8f"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:96081f1605125ba0855dfda83f6f3df5ec90c61195421ba72223de35ccfb2f88"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8f57a69461af2a5fa6e6bbd7a5f60d3b7e6cebb687f55106933188e79ad155c1"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:572c7e6c8bb4774d2ac88929e3d1f12bc45714ae5ee6d9a788a9fb35e60bb04b"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:db4b41f9bd95fbe5acd76d89920336ba96f03e149097365afe1cb092fceb89a1"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_armv7l.whl", hash = "sha256:fa854f5cf7e33842a892e5c73f45327760bc7bc516339fda888c75ae60edaeb6"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:5f483cfb75ff703095c59e365360cb73e00185e01aaea067cd19acffd2ab20ea"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win32.whl", hash = "sha256:9cb1da0f5a471435a7bc7e439b8a728e8b61e59784b2af70d7c169f8dd8ae290"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win_amd64.whl", hash = "sha256:f941635f2a3d96b2973e867144fde513665c87f13fe0e193c158ac51bfaaa7b2"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win_arm64.whl", hash = "sha256:cca3868ddfaccfbc4bfb1d608e2ccaaebe0ae628e1416aeb9c4d88c001bb45ab"},
    {file = "pydantic_core-2.33.2-cp313-cp313-macosx_10_12_x86_64.whl", hash = "sha256:1082dd3e2d7109ad8b7da48e1d4710c8d06c253cbc4a27c1cff4fbcaa97a9e3f"},
    {file = "pydantic_core-2.33.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:f517ca031dfc037a9c07e748cefd8d96235088b83b4f4ba8939105d20fa1dcd6"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0a9f2c9dd19656823cb8250b0724ee9c60a82f3cdf68a080979d13092a3b0fef"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2b0a451c263b01acebe51895bfb0e1cc842a5c666efe06cdf13846c7418caa9a"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1ea40a64d23faa25e62a70ad163571c0b342b8bf66d5fa612ac0dec4f069d916"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:0fb2d542b4d66f9470e8065c5469ec676978d625a8b7a363f07d9a501a9cb36a"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9fdac5d6ffa1b5a83bca06ffe7583f5576555e6c8b3a91fbd25ea7780f825f7d"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:04a1a413977ab517154eebb2d326da71638271477d6ad87a769102f7c2488c56"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:c8e7af2f4e0194c22b5b37205bfb293d166a7344a5b0d0eaccebc376546d77d5"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_armv7l.whl", hash = "sha256:5c92edd15cd58b3c2d34873597a1e20f13094f59cf88068adb18947df5455b4e"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:65132b7b4a1c0beded5e057324b7e16e10910c106d43675d9bd87d4f38dde162"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win32.whl", hash = "sha256:52fb90784e0a242bb96ec53f42196a17278855b0f31ac7c3cc6f5c1ec4811849"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win_amd64.whl", hash = "sha256:c083a3bdd5a93dfe480f1125926afcdbf2917ae714bdb80b36d34318b2bec5d9"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win_arm64.whl", hash = "sha256:e80b087132752f6b3d714f041ccf74403799d3b23a72722ea2e6ba2e892555b9"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:61c18fba8e5e9db3ab908620af374db0ac1baa69f0f32df4f61ae23f15e586ac"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:95237e53bb015f67b63c91af7518a62a8660376a6a0db19b89acc77a4d6199f5"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-win_amd64.whl", hash = "sha256:c2fc0a768ef76c15ab9238afa6da7f69895bb5d1ee83aeea2e3509af4472d0b9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-macosx_10_12_x86_64.whl", hash = "sha256:a2b911a5b90e0374d03813674bf0a5fbbb7741570dcd4b4e85a2e48d17def29d"},
    {file = "pydantic_core-2.33.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:6fa6dfc3e4d1f734a34710f391ae822e0a8eb8559a85c6979e14e65ee6ba2954"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c54c939ee22dc8e2d545da79fc5381f1c020d6d3141d3bd747eab59164dc89fb"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:53a57d2ed685940a504248187d5685e49eb5eef0f696853647bf37c418c538f7"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09fb9dd6571aacd023fe6aaca316bd01cf60ab27240d7eb39ebd66a3a15293b4"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:0e6116757f7959a712db11f3e9c0a99ade00a5bbedae83cb801985aa154f071b"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8d55ab81c57b8ff8548c3e4947f119551253f4e3787a7bbc0b6b3ca47498a9d3"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c20c462aa4434b33a2661701b861604913f912254e441ab8d78d30485736115a"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:44857c3227d3fb5e753d5fe4a3420d6376fa594b07b621e220cd93703fe21782"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_armv7l.whl", hash = "sha256:eb9b459ca4df0e5c87deb59d37377461a538852765293f9e6ee834f0435a93b9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9fcd347d2cc5c23b06de6d3b7b8275be558a0c90549495c699e379a80bf8379e"},
    {file = "pydantic_core-2.33.2-cp39-cp39-win32.whl", hash = "sha256:83aa99b1285bc8f038941ddf598501a86f1536789740991d7d8756e34f1e74d9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-win_amd64.whl", hash = "sha256:f481959862f57f29601ccced557cc2e817bce7533ab8e01a797a48b49c9692b3"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-macosx_10_12_x86_64.whl", hash = "sha256:5c4aa4e82353f65e548c476b37e64189783aa5384903bfea4f41580f255fddfa"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:d946c8bf0d5c24bf4fe333af284c59a19358aa3ec18cb3dc4370080da1e8ad29"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:87b31b6846e361ef83fedb187bb5b4372d0da3f7e28d85415efa92d6125d6e6d"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:aa9d91b338f2df0508606f7009fde642391425189bba6d8c653afd80fd6bb64e"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:2058a32994f1fde4ca0480ab9d1e75a0e8c87c22b53a3ae66554f9af78f2fe8c"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:0e03262ab796d986f978f79c943fc5f620381be7287148b8010b4097f79a39ec"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:1a8695a8d00c73e50bff9dfda4d540b7dee29ff9b8053e38380426a85ef10052"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:fa754d1850735a0b0e03bcffd9d4b4343eb417e47196e4485d9cca326073a42c"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:a11c8d26a50bfab49002947d3d237abe4d9e4b5bdc8846a63537b6488e197808"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-macosx_10_12_x86_64.whl", hash = "sha256:dd14041875d09cc0f9308e37a6f8b65f5585cf2598a53aa0123df8b129d481f8"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-macosx_11_0_arm64.whl", hash = "sha256:d87c561733f66531dced0da6e864f44ebf89a8fba55f31407b00c2f7f9449593"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f82865531efd18d6e07a04a17331af02cb7a651583c418df8266f17a63c6612"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2bfb5112df54209d820d7bf9317c7a6c9025ea52e49f46b6a2060104bba37de7"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64632ff9d614e5eecfb495796ad51b0ed98c453e447a76bcbeeb69615079fc7e"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:f889f7a40498cc077332c7ab6b4608d296d852182211787d4f3ee377aaae66e8"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:de4b83bb311557e439b9e186f733f6c645b9417c84e2eb8203f3f820a4b988bf"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:82f68293f055f51b51ea42fafc74b6aad03e70e191799430b90c13d643059ebb"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-win_amd64.whl", hash = "sha256:329467cecfb529c925cf2bbd4d60d2c509bc2fb52a20c1045bf09bb70971a9c1"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-macosx_10_12_x86_64.whl", hash = "sha256:87acbfcf8e90ca885206e98359d7dca4bcbb35abdc0ff66672a293e1d7a19101"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:7f92c15cd1e97d4b12acd1cc9004fa092578acfa57b67ad5e43a197175d01a64"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d3f26877a748dc4251cfcfda9dfb5f13fcb034f5308388066bcfe9031b63ae7d"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dac89aea9af8cd672fa7b510e7b8c33b0bba9a43186680550ccf23020f32d535"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:970919794d126ba8645f3837ab6046fb4e72bbc057b3709144066204c19a455d"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:3eb3fe62804e8f859c49ed20a8451342de53ed764150cb14ca71357c765dc2a6"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:3abcd9392a36025e3bd55f9bd38d908bd17962cc49bc6da8e7e96285336e2bca"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:3a1c81334778f9e3af2f8aeb7a960736e5cab1dfebfb26aabca09afd2906c039"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:2807668ba86cb38c6817ad9bc66215ab8584d1d304030ce4f0887336f28a5e27"},
    {file = "pydantic_core-2.33.2.tar.gz", hash = "sha256:7cb8bc3605c29176e1b105350d2e6474142d7c1bd1d9327c4a9bdb46bf827acc"},
]

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pygments"
version = "2.19.2"
description = "Pygments is a syntax highlighting package written in Python."
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "pygments-2.19.2-py3-none-any.whl", hash = "sha256:86540386c03d588bb81d44bc3928634ff26449851e99741617ecb9037ee5ec0b"},
    {file = "pygments-2.19.2.tar.gz", hash = "sha256:636cb2477cec7f8952536970bc533bc43743542f70392ae026374600add5b887"},
]

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pypika-tortoise"
version = "0.6.1"
description = "Forked from pypika and streamline just for tortoise-orm"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
markers = "python_version < \"4.0\""
files = [
    {file = "pypika_tortoise-0.6.1-py3-none-any.whl", hash = "sha256:da15886f37b347e71f0869f9e4ee2f9259e6bb57455b45299c6c23d7927cbb6e"},
    {file = "pypika_tortoise-0.6.1.tar.gz", hash = "sha256:36ec2c88c255b9ed7ef49a6068cdeac10dafd4ddfeb828205d3afc092507fc3a"},
]

[[package]]
name = "pytest"
version = "8.4.1"
description = "pytest: simple powerful testing with Python"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pytest-8.4.1-py3-none-any.whl", hash = "sha256:539c70ba6fcead8e78eebbf1115e8b589e7565830d7d006a8723f19ac8a0afb7"},
    {file = "pytest-8.4.1.tar.gz", hash = "sha256:7c67fd69174877359ed9371ec3af8a3d2b04741818c51e5e99cc1742251fa93c"},
]

[package.dependencies]
colorama = {version = ">=0.4", markers = "sys_platform == \"win32\""}
iniconfig = ">=1"
packaging = ">=20"
pluggy = ">=1.5,<2"
pygments = ">=2.7.2"

[package.extras]
dev = ["argcomplete", "attrs (>=19.2)", "hypothesis (>=3.56)", "mock", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-assume"
version = "2.4.3"
description = "A pytest plugin that allows multiple failures per test"
optional = false
python-versions = "*"
groups = ["main"]
files = [
    {file = "pytest-assume-2.4.3.tar.gz", hash = "sha256:983e90537660fd7aa18bb554693523020272e7edeee3e40435593297bcc6347e"},
    {file = "pytest_assume-2.4.3-py3-none-any.whl", hash = "sha256:09074220213b87cf1f400609701a44b75078b4e69588c7227e061ff9b3ecf54b"},
]

[package.dependencies]
pytest = ">=2.7"
six = "*"

[[package]]
name = "pytest-asyncio"
version = "1.1.0"
description = "Pytest support for asyncio"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_asyncio-1.1.0-py3-none-any.whl", hash = "sha256:5fe2d69607b0bd75c656d1211f969cadba035030156745ee09e7d71740e58ecf"},
    {file = "pytest_asyncio-1.1.0.tar.gz", hash = "sha256:796aa822981e01b68c12e4827b8697108f7205020f24b5793b3c41555dab68ea"},
]

[package.dependencies]
pytest = ">=8.2,<9"

[package.extras]
docs = ["sphinx (>=5.3)", "sphinx-rtd-theme (>=1)"]
testing = ["coverage (>=6.2)", "hypothesis (>=5.7.1)"]

[[package]]
name = "pytest-cov"
version = "6.2.1"
description = "Pytest plugin for measuring coverage."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_cov-6.2.1-py3-none-any.whl", hash = "sha256:f5bc4c23f42f1cdd23c70b1dab1bbaef4fc505ba950d53e0081d0730dd7e86d5"},
    {file = "pytest_cov-6.2.1.tar.gz", hash = "sha256:25cc6cc0a5358204b8108ecedc51a9b57b34cc6b8c967cc2c01a4e00d8a67da2"},
]

[package.dependencies]
coverage = {version = ">=7.5", extras = ["toml"]}
pluggy = ">=1.2"
pytest = ">=6.2.5"

[package.extras]
testing = ["fields", "hunter", "process-tests", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytz"
version = "2025.2"
description = "World timezone definitions, modern and historical"
optional = false
python-versions = "*"
groups = ["main", "dev"]
files = [
    {file = "pytz-2025.2-py2.py3-none-any.whl", hash = "sha256:5ddf76296dd8c44c26eb8f4b6f35488f3ccbf6fbbd7adee0b7262d43f0ec2f00"},
    {file = "pytz-2025.2.tar.gz", hash = "sha256:360b9e3dbb49a209c21ad61809c7fb453643e048b38924c765813546746e81c3"},
]

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086"},
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68"},
    {file = "PyYAML-6.0.2-cp310-cp310-win32.whl", hash = "sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99"},
    {file = "PyYAML-6.0.2-cp310-cp310-win_amd64.whl", hash = "sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e"},
    {file = "PyYAML-6.0.2-cp311-cp311-win32.whl", hash = "sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5"},
    {file = "PyYAML-6.0.2-cp311-cp311-win_amd64.whl", hash = "sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b"},
    {file = "PyYAML-6.0.2-cp312-cp312-win32.whl", hash = "sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4"},
    {file = "PyYAML-6.0.2-cp312-cp312-win_amd64.whl", hash = "sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652"},
    {file = "PyYAML-6.0.2-cp313-cp313-win32.whl", hash = "sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183"},
    {file = "PyYAML-6.0.2-cp313-cp313-win_amd64.whl", hash = "sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563"},
    {file = "PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083"},
    {file = "PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706"},
    {file = "PyYAML-6.0.2-cp38-cp38-win32.whl", hash = "sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a"},
    {file = "PyYAML-6.0.2-cp38-cp38-win_amd64.whl", hash = "sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725"},
    {file = "PyYAML-6.0.2-cp39-cp39-win32.whl", hash = "sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631"},
    {file = "PyYAML-6.0.2-cp39-cp39-win_amd64.whl", hash = "sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8"},
    {file = "pyyaml-6.0.2.tar.gz", hash = "sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e"},
]

[[package]]
name = "rich"
version = "14.1.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "rich-14.1.0-py3-none-any.whl", hash = "sha256:536f5f1785986d6dbdea3c75205c473f970777b4a0d6c6dd1b696aa05a3fa04f"},
    {file = "rich-14.1.0.tar.gz", hash = "sha256:e497a48b844b0320d45007cdebfeaeed8db2a4f4bcf49f15e455cfc4af11eaa8"},
]

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "ruff"
version = "0.12.9"
description = "An extremely fast Python linter and code formatter, written in Rust."
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "ruff-0.12.9-py3-none-linux_armv6l.whl", hash = "sha256:fcebc6c79fcae3f220d05585229463621f5dbf24d79fdc4936d9302e177cfa3e"},
    {file = "ruff-0.12.9-py3-none-macosx_10_12_x86_64.whl", hash = "sha256:aed9d15f8c5755c0e74467731a007fcad41f19bcce41cd75f768bbd687f8535f"},
    {file = "ruff-0.12.9-py3-none-macosx_11_0_arm64.whl", hash = "sha256:5b15ea354c6ff0d7423814ba6d44be2807644d0c05e9ed60caca87e963e93f70"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d596c2d0393c2502eaabfef723bd74ca35348a8dac4267d18a94910087807c53"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:1b15599931a1a7a03c388b9c5df1bfa62be7ede6eb7ef753b272381f39c3d0ff"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:3d02faa2977fb6f3f32ddb7828e212b7dd499c59eb896ae6c03ea5c303575756"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl", hash = "sha256:17d5b6b0b3a25259b69ebcba87908496e6830e03acfb929ef9fd4c58675fa2ea"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:72db7521860e246adbb43f6ef464dd2a532ef2ef1f5dd0d470455b8d9f1773e0"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:a03242c1522b4e0885af63320ad754d53983c9599157ee33e77d748363c561ce"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9fc83e4e9751e6c13b5046d7162f205d0a7bac5840183c5beebf824b08a27340"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_31_riscv64.whl", hash = "sha256:881465ed56ba4dd26a691954650de6ad389a2d1fdb130fe51ff18a25639fe4bb"},
    {file = "ruff-0.12.9-py3-none-musllinux_1_2_aarch64.whl", hash = "sha256:43f07a3ccfc62cdb4d3a3348bf0588358a66da756aa113e071b8ca8c3b9826af"},
    {file = "ruff-0.12.9-py3-none-musllinux_1_2_armv7l.whl", hash = "sha256:07adb221c54b6bba24387911e5734357f042e5669fa5718920ee728aba3cbadc"},
    {file = "ruff-0.12.9-py3-none-musllinux_1_2_i686.whl", hash = "sha256:f5cd34fabfdea3933ab85d72359f118035882a01bff15bd1d2b15261d85d5f66"},
    {file = "ruff-0.12.9-py3-none-musllinux_1_2_x86_64.whl", hash = "sha256:f6be1d2ca0686c54564da8e7ee9e25f93bdd6868263805f8c0b8fc6a449db6d7"},
    {file = "ruff-0.12.9-py3-none-win32.whl", hash = "sha256:cc7a37bd2509974379d0115cc5608a1a4a6c4bff1b452ea69db83c8855d53f93"},
    {file = "ruff-0.12.9-py3-none-win_amd64.whl", hash = "sha256:6fb15b1977309741d7d098c8a3cb7a30bc112760a00fb6efb7abc85f00ba5908"},
    {file = "ruff-0.12.9-py3-none-win_arm64.whl", hash = "sha256:63c8c819739d86b96d500cce885956a1a48ab056bbcbc61b747ad494b2485089"},
    {file = "ruff-0.12.9.tar.gz", hash = "sha256:fbd94b2e3c623f659962934e52c2bea6fc6da11f667a427a368adaf3af2c866a"},
]

[[package]]
name = "setuptools"
version = "80.9.0"
description = "Easily download, build, install, upgrade, and uninstall Python packages"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "setuptools-80.9.0-py3-none-any.whl", hash = "sha256:062d34222ad13e0cc312a4c02d73f059e86a4acbfbdea8f8f76b28c99f306922"},
    {file = "setuptools-80.9.0.tar.gz", hash = "sha256:f36b47402ecde768dbfafc46e8e4207b4360c654f1f3bb84475f0a28628fb19c"},
]

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1) ; sys_platform != \"cygwin\"", "ruff (>=0.8.0) ; sys_platform != \"cygwin\""]
core = ["importlib_metadata (>=6) ; python_version < \"3.10\"", "jaraco.functools (>=4)", "jaraco.text (>=3.7)", "more_itertools", "more_itertools (>=8.8)", "packaging (>=24.2)", "platformdirs (>=4.2.2)", "tomli (>=2.0.1) ; python_version < \"3.11\"", "wheel (>=0.43.0)"]
cover = ["pytest-cov"]
doc = ["furo", "jaraco.packaging (>=9.3)", "jaraco.tidelift (>=1.4)", "pygments-github-lexers (==0.0.5)", "pyproject-hooks (!=1.1)", "rst.linker (>=1.9)", "sphinx (>=3.5)", "sphinx-favicon", "sphinx-inline-tabs", "sphinx-lint", "sphinx-notfound-page (>=1,<2)", "sphinx-reredirects", "sphinxcontrib-towncrier", "towncrier (<24.7)"]
enabler = ["pytest-enabler (>=2.2)"]
test = ["build[virtualenv] (>=1.0.3)", "filelock (>=3.4.0)", "ini2toml[lite] (>=0.14)", "jaraco.develop (>=7.21) ; python_version >= \"3.9\" and sys_platform != \"cygwin\"", "jaraco.envs (>=2.2)", "jaraco.path (>=3.7.2)", "jaraco.test (>=5.5)", "packaging (>=24.2)", "pip (>=19.1)", "pyproject-hooks (!=1.1)", "pytest (>=6,!=8.1.*)", "pytest-home (>=0.5)", "pytest-perf ; sys_platform != \"cygwin\"", "pytest-subprocess", "pytest-timeout", "pytest-xdist (>=3)", "tomli-w (>=1.0.0)", "virtualenv (>=13.0.0)", "wheel (>=0.44.0)"]
type = ["importlib_metadata (>=7.0.2) ; python_version < \"3.10\"", "jaraco.develop (>=7.21) ; sys_platform != \"cygwin\"", "mypy (==1.14.*)", "pytest-mypy"]

[[package]]
name = "six"
version = "1.17.0"
description = "Python 2 and 3 compatibility utilities"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"
groups = ["main"]
files = [
    {file = "six-1.17.0-py2.py3-none-any.whl", hash = "sha256:4721f391ed90541fddacab5acf947aa0d3dc7d27b2e1e8eda2be8970586c3274"},
    {file = "six-1.17.0.tar.gz", hash = "sha256:ff70335d468e7eb6ec65b95b99d3a2836546063f63acc5171de367e834932a81"},
]

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "sniffio-1.3.1-py3-none-any.whl", hash = "sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2"},
    {file = "sniffio-1.3.1.tar.gz", hash = "sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc"},
]

[[package]]
name = "starlette"
version = "0.47.2"
description = "The little ASGI library that shines."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "starlette-0.47.2-py3-none-any.whl", hash = "sha256:c5847e96134e5c5371ee9fac6fdf1a67336d5815e09eb2a01fdb57a351ef915b"},
    {file = "starlette-0.47.2.tar.gz", hash = "sha256:6ae9aa5db235e4846decc1e7b79c4f346adf41e9777aebeb49dfd09bbd7023d8"},
]

[package.dependencies]
anyio = ">=3.6.2,<5"
typing-extensions = {version = ">=4.10.0", markers = "python_version < \"3.13\""}

[package.extras]
full = ["httpx (>=0.27.0,<0.29.0)", "itsdangerous", "jinja2", "python-multipart (>=0.0.18)", "pyyaml"]

[[package]]
name = "stevedore"
version = "5.4.1"
description = "Manage dynamic plugins for Python applications"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "stevedore-5.4.1-py3-none-any.whl", hash = "sha256:d10a31c7b86cba16c1f6e8d15416955fc797052351a56af15e608ad20811fcfe"},
    {file = "stevedore-5.4.1.tar.gz", hash = "sha256:3135b5ae50fe12816ef291baff420acb727fcd356106e3e9cbfa9e5985cd6f4b"},
]

[package.dependencies]
pbr = ">=2.0.0"

[[package]]
name = "tortoise-orm"
version = "0.25.1"
description = "Easy async ORM for python, built with relations in mind"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "tortoise_orm-0.25.1-py3-none-any.whl", hash = "sha256:df0ef7e06eb0650a7e5074399a51ee6e532043308c612db2cac3882486a3fd9f"},
    {file = "tortoise_orm-0.25.1.tar.gz", hash = "sha256:4d5bfd13d5750935ffe636a6b25597c5c8f51c47e5b72d7509d712eda1a239fe"},
]

[package.dependencies]
aiosqlite = ">=0.16.0,<1.0.0"
iso8601 = {version = ">=2.1.0,<3.0.0", markers = "python_version < \"4.0\""}
pypika-tortoise = {version = ">=0.6.1,<1.0.0", markers = "python_version < \"4.0\""}
pytz = "*"

[package.extras]
accel = ["ciso8601 ; sys_platform != \"win32\" and implementation_name == \"cpython\"", "orjson", "uvloop ; sys_platform != \"win32\" and implementation_name == \"cpython\""]
aiomysql = ["aiomysql"]
asyncmy = ["asyncmy (>=0.2.8,<1.0.0) ; python_version < \"4.0\""]
asyncodbc = ["asyncodbc (>=0.1.1,<1.0.0) ; python_version < \"4.0\""]
asyncpg = ["asyncpg"]
psycopg = ["psycopg[binary,pool] (>=3.0.12,<4.0.0)"]

[[package]]
name = "typing-extensions"
version = "4.14.1"
description = "Backported and Experimental Type Hints for Python 3.9+"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "typing_extensions-4.14.1-py3-none-any.whl", hash = "sha256:d1e1e3b58374dc93031d6eda2420a48ea44a36c2b4766a4fdeb3710755731d76"},
    {file = "typing_extensions-4.14.1.tar.gz", hash = "sha256:38b39f4aeeab64884ce9f74c94263ef78f3c22467c8724005483154c26648d36"},
]

[[package]]
name = "typing-inspection"
version = "0.4.1"
description = "Runtime typing introspection tools"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "typing_inspection-0.4.1-py3-none-any.whl", hash = "sha256:389055682238f53b04f7badcb49b989835495a96700ced5dab2d8feae4b26f51"},
    {file = "typing_inspection-0.4.1.tar.gz", hash = "sha256:6ae134cc0203c33377d43188d4064e9b357dba58cff3185f22924610e70a9d28"},
]

[package.dependencies]
typing-extensions = ">=4.12.0"

[[package]]
name = "uvicorn"
version = "0.35.0"
description = "The lightning-fast ASGI server."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "uvicorn-0.35.0-py3-none-any.whl", hash = "sha256:197535216b25ff9b785e29a0b79199f55222193d47f820816e7da751e9bc8d4a"},
    {file = "uvicorn-0.35.0.tar.gz", hash = "sha256:bc662f087f7cf2ce11a1d7fd70b90c9f98ef2e2831556dd078d131b96cc94a01"},
]

[package.dependencies]
click = ">=7.0"
h11 = ">=0.8"

[package.extras]
standard = ["colorama (>=0.4) ; sys_platform == \"win32\"", "httptools (>=0.6.3)", "python-dotenv (>=0.13)", "pyyaml (>=5.1)", "uvloop (>=0.15.1) ; sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"PyPy\"", "watchfiles (>=0.13)", "websockets (>=10.4)"]

[metadata]
lock-version = "2.1"
python-versions = ">=3.11"
content-hash = "86027d893a0460b325a34c9b3b5241c36eb3dc07154503a8033086a4d167cd6d"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/poetry.lock ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/pyproject.toml ==========
[project]
name = "posts-app"
version = "0.1.0"
description = ""
authors = [
    {name = "Sebastian Betancourth Zapata", email = "s.betancourth@uniandes.edu.co"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "tortoise-orm (>=0.25.1,<0.26.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "black (>=25.1.0,<26.0.0)",
    "isort (>=6.0.1,<7.0.0)",
    "bandit (>=1.8.6,<2.0.0)",
    "pytest-assume (>=2.4.3,<3.0.0)",
    "ruff (>=0.12.9,<0.13.0)",
    "httpx (>=0.28.1,<0.29.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
aerich = "^0.9.1"
pytest = "^8.4.1"

pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"

[[tool.poetry.packages]]
include = "src"
from = "."

[tool.aerich]

tortoise_orm = "tortoise_config.tortoise_config"

location = "./migrations"

src_folder = "./."

[tool.pytest.ini_options]
# https://docs.pytest.org/en/7.2.x/reference/customize.html for reference
python_files = "test_*.py"
pythonpath = "src"
testpaths = [
  "tests"
]
addopts = "--asyncio-mode=auto"

========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/pyproject.toml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/models.py ==========
import uuid

from tortoise import fields, models

class Post(models.Model):
    id = fields.UUIDField(pk=True, default=uuid.uuid4)
    routeId = fields.CharField(max_length=64)
    userId = fields.CharField(max_length=64)
    expireAt = fields.DatetimeField()
    createdAt = fields.DatetimeField(auto_now_add=True)

    class Meta:
        table = "posts"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/models.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/post_repository_adapter.py ==========
import datetime
from typing import Dict, List, Optional

from adapters.bd.models import Post
from domain.models.post import Post as DomainPost
from domain.models.post import PostCreate
from domain.ports.post_repository_port import PostRepositoryPort
from errors import PostNotFoundError

class DBPostRepositoryAdapter(PostRepositoryPort):
    async def create(self, post_create: PostCreate) -> Dict:
        post_db = Post(
            routeId=post_create.routeId,
            userId=post_create.userId,
            expireAt=post_create.expireAt,
        )
        await post_db.save()
        return {
            "id": post_db.id,
            "userId": str(post_db.userId),
            "createdAt": post_db.createdAt.isoformat(),
        }

    async def get_by_id(self, post_id: str) -> Optional[Post]:
        return await Post.get_or_none(id=post_id)

    async def get_all(self) -> List[Post]:
        return await Post.all()

    async def update(self, post: Post) -> Post:
        existing = await Post.get_or_none(id=post.id)
        if not existing:
            raise PostNotFoundError(f"Post with id {post.id} not found")
        existing.routeId = post.routeId
        existing.userId = post.userId
        existing.expireAt = post.expireAt
        await existing.save()
        return existing

    async def delete(self, post_id: str) -> Post:
        post = await Post.get_or_none(id=post_id)
        if not post:
            raise PostNotFoundError(f"Post with id {post_id} not found")
        await post.delete()
        return post

    async def delete_all_post(self) -> None:
        """Delete all posts."""
        await Post.all().delete()
        return None

    async def get_posts_filter(
        self, route_id: str, user_id: str, expire: str
    ) -> List[DomainPost]:
        dict_filter = {}
        now = datetime.datetime.now(datetime.timezone.utc)
        if route_id is not None:
            dict_filter["routeId"] = route_id
        if user_id is not None:
            dict_filter["userId"] = user_id
        if expire is not None:
            if expire.lower() == "true":
                dict_filter["expireAt__lte"] = now
            elif expire.lower() == "false":
                dict_filter["expireAt__gt"] = now
        posts = await Post.filter(**dict_filter).all()
        return posts
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/adapters/bd/post_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/assembly.py ==========
from adapters.bd.post_repository_adapter import DBPostRepositoryAdapter
from domain.use_cases.base_use_case import BaseUseCase
from domain.use_cases.create_post_use_case import CreatePostUseCase
from domain.use_cases.delete_all_post_use_case import DeleteAllPostUseCase
from domain.use_cases.delete_post_use_case import DeletePostUseCase
from domain.use_cases.get_all_post_use_case import GetAllPostUseCase
from domain.use_cases.get_post_filter_use_case import GetFilterPostUseCase
from domain.use_cases.get_post_use_case import GetPostUseCase

repository: DBPostRepositoryAdapter = DBPostRepositoryAdapter()

def build_create_post_use_case() -> BaseUseCase:
    """Get create post use case."""
    return CreatePostUseCase(repository)

def build_get_post_use_case() -> BaseUseCase:
    """Get pet use case."""
    return GetPostUseCase(repository)

def build_delete_post_use_case() -> BaseUseCase:
    """Get delete pet use case."""
    return DeletePostUseCase(repository)

def build_get_all_post_use_case() -> BaseUseCase:
    """Get all post use case."""
    return GetAllPostUseCase(repository)

def build_delete_all_post_use_case() -> BaseUseCase:
    """Get all post use case."""
    return DeleteAllPostUseCase(repository)

def build_get_post_filter_use_case() -> BaseUseCase:
    """Get all post use case."""
    return GetFilterPostUseCase(repository)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/assembly.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/config.py ==========
import os
from functools import lru_cache

class classproperty:
    def __init__(self, fget):
        self.fget = fget

    def __get__(self, instance, owner):
        return self.fget(owner)

class Settings:
    """Application settings."""

    @classproperty
    @lru_cache()
    def app_name(self) -> str:
        return os.getenv("APP_NAME", "Post App")

    @classproperty
    @lru_cache()
    def log_level(self) -> str:
        return os.getenv("LOG_LEVEL", "DEBUG")

    @classproperty
    @lru_cache()
    def db_url(self) -> str:
        user = os.getenv("POSTGRES_USER")
        password = os.getenv("POSTGRES_PASSWORD")
        host = os.getenv("POSTGRES_HOST", "localhost")
        port = os.getenv("POSTGRES_PORT", "5432")
        db = os.getenv("POSTGRES_DB")
        return f"postgres://{user}:{password}@{host}:{port}/{db}"

    @classproperty
    @lru_cache()
    def tortoise_config(self) -> dict:
        return {
            "connections": {"default": Settings.db_url},
            "apps": {
                "models": {
                    "models": ["adapters.bd.models"],
                    "default_connection": "default",
                }
            },
        }
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/config.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/models/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/models/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/models/post.py ==========
from datetime import datetime
from uuid import UUID

from pydantic import BaseModel

class Post(BaseModel):
    id: UUID
    routeId: UUID
    userId: UUID
    expireAt: datetime
    createdAt: datetime

    class Config:
        from_attributes = True

class PostCreate(BaseModel):
    routeId: UUID
    userId: UUID
    expireAt: datetime

class PostResponse(BaseModel):
    id: UUID
    userId: UUID
    createdAt: datetime
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/models/post.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/ports/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/ports/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/ports/post_repository_port.py ==========
from abc import ABC, abstractmethod
from typing import Dict, List, Optional

from domain.models.post import Post, PostCreate

class PostRepositoryPort(ABC):
    """Post repository interface."""

    @abstractmethod
    async def create(self, post: PostCreate) -> Dict:
        """Create a new post."""
        pass

    @abstractmethod
    async def get_by_id(self, post_id: str) -> Optional[Post]:
        """Get post by ID."""
        pass

    @abstractmethod
    async def get_all(self) -> List[Post]:
        """Get all Post."""
        pass

    @abstractmethod
    async def update(self, post: Post) -> Post:
        """Update an existing post."""
        pass

    @abstractmethod
    async def delete(self, post_id: str) -> Post:
        """Delete a post."""
        pass

    @abstractmethod
    async def delete_all_post(self) -> None:
        """Delete all posts."""
        pass

    @abstractmethod
    async def get_posts_filter(self, route_id, user_id, expire) -> List[Post]:
        """Get posts by filters."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/ports/post_repository_port.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/base_use_case.py ==========
from abc import ABC, abstractmethod

class BaseUseCase(ABC):
    """Base use case class."""

    @abstractmethod
    def execute(self, *args, **kwargs):
        """Execute the use case."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/base_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/create_post_use_case.py ==========
from typing import Dict

from domain.models.post import PostCreate
from domain.ports.post_repository_port import PostRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class CreatePostUseCase(BaseUseCase):
    """Use case for saving a post."""

    def __init__(self, post_repository: PostRepositoryPort):
        self.post_repository = post_repository

    def execute(self, post: PostCreate) -> Dict:
        """Create a new pet."""
        return self.post_repository.create(post)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/create_post_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/delete_all_post_use_case.py ==========
from typing import Dict

from domain.ports.post_repository_port import PostRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class DeleteAllPostUseCase(BaseUseCase):
    """Use case for deleting a post."""

    def __init__(self, post_repository: PostRepositoryPort):
        self.post_repository = post_repository

    def execute(self) -> Dict:
        return self.post_repository.delete_all_post()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/delete_all_post_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/delete_post_use_case.py ==========
from domain.models.post import Post
from domain.ports.post_repository_port import PostRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class DeletePostUseCase(BaseUseCase):
    """Use case for deleting a post."""

    def __init__(self, post_repository: PostRepositoryPort):
        self.post_repository = post_repository

    def execute(self, post_id: str) -> Post:
        return self.post_repository.delete(post_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/delete_post_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_all_post_use_case.py ==========
from domain.models.post import Post
from domain.ports.post_repository_port import PostRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetAllPostUseCase(BaseUseCase):
    """Use case for getting all post."""

    def __init__(self, post_repository: PostRepositoryPort):
        self.post_repository = post_repository

    def execute(self) -> Post:
        return self.post_repository.get_all()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_all_post_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_post_filter_use_case.py ==========
from domain.models.post import Post
from domain.ports.post_repository_port import PostRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetFilterPostUseCase(BaseUseCase):
    """Use case for getting all post."""

    def __init__(self, post_repository: PostRepositoryPort):
        self.post_repository = post_repository

    def execute(
        self,
        route_id: str,
        user_id: str,
        expire: str,
    ) -> Post:
        return self.post_repository.get_posts_filter(route_id, user_id, expire)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_post_filter_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_post_use_case.py ==========
from domain.models.post import Post
from domain.ports.post_repository_port import PostRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetPostUseCase(BaseUseCase):
    """Use case for getting a post."""

    def __init__(self, post_repository: PostRepositoryPort):
        self.post_repository = post_repository

    def execute(self, post_id: str) -> Post:
        return self.post_repository.get_by_id(post_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/domain/use_cases/get_post_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/main.py ==========
from fastapi import FastAPI, Request
from fastapi.exceptions import RequestValidationError
from fastapi.responses import JSONResponse
from tortoise.contrib.fastapi import register_tortoise

from config import Settings
from entrypoints.api.routers.post_router import router as post_router

app = FastAPI(title=Settings.app_name)

@app.exception_handler(RequestValidationError)
async def validation_exception_handler(request: Request, exc: RequestValidationError):
    return JSONResponse(
        status_code=400,
        content=None,
    )

app.include_router(post_router)

register_tortoise(
    app,
    config=Settings.tortoise_config,
    generate_schemas=True,
    add_exception_handlers=True,
)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/main.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/routers/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/routers/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/routers/post_router.py ==========
import datetime
import uuid
from enum import Enum
from typing import List

from fastapi import APIRouter, Depends, HTTPException
from fastapi.responses import JSONResponse, PlainTextResponse

from assembly import (
    build_create_post_use_case,
    build_delete_all_post_use_case,
    build_delete_post_use_case,
    build_get_all_post_use_case,
    build_get_post_filter_use_case,
    build_get_post_use_case,
)
from domain.models.post import Post, PostCreate, PostResponse
from domain.use_cases.base_use_case import BaseUseCase
from errors import PostNotFoundError

class ExpireEnum(str, Enum):
    true = "true"
    false = "false"

router = APIRouter(prefix="/posts")

@router.get("/ping", response_class=PlainTextResponse)
def health_check():
    """Healthcheck endpoint."""
    return "pong"

@router.post("/", response_model=PostResponse, status_code=201)
async def create_post(
    post: PostCreate, use_case: BaseUseCase = Depends(build_create_post_use_case)
):
    """Create a new post."""
    try:
        if post.expireAt <= datetime.datetime.now(datetime.timezone.utc):
            return JSONResponse(
                status_code=412, content={"msg": "La fecha expiración no es válida"}
            )
    except ValueError:
        return JSONResponse(
            status_code=412, content={"msg": "La fecha expiración no es válida"}
        )
    result = await use_case.execute(post)
    return PostResponse(**result)

@router.get("/count", response_class=JSONResponse)
async def get_all_post(use_case: BaseUseCase = Depends(build_get_all_post_use_case)):
    """Delete post."""
    try:
        all_post = await use_case.execute()
        return JSONResponse({"count": len(all_post)}, status_code=200)
    except PostNotFoundError as err:
        return JSONResponse({"error": str(err)}, status_code=404)

@router.post("/reset", response_class=JSONResponse)
async def delete_all_post(
    use_case: BaseUseCase = Depends(build_delete_all_post_use_case),
):
    """Delete all posts."""

    await use_case.execute()
    return JSONResponse({"msg": "Todos los datos fueron eliminados"}, status_code=200)

@router.get("/", response_model=List[Post])
async def get_filter_posts(
    route: str = None,
    owner: str = None,
    expire: str = None,
    use_case: BaseUseCase = Depends(build_get_post_filter_use_case),
):
    """Get all posts with filters."""
    if route:
        try:
            uuid.UUID(route)
        except ValueError:
            raise HTTPException(
                status_code=400, detail={"msg": "route_id no es un UUID válido"}
            )
    if owner:
        try:
            uuid.UUID(owner)
        except ValueError:
            raise HTTPException(
                status_code=400, detail={"msg": "owner no es un UUID válido"}
            )
    if expire:
        expire_normalized = expire.lower()
        if expire_normalized not in ExpireEnum.__members__:
            raise HTTPException(
                status_code=400,
                detail={"msg": "expire no es válido, debe ser 'true' o 'false'"},
            )
        expire = expire_normalized

    posts = await use_case.execute(route, owner, expire)
    return posts

@router.get("/{id}", response_model=Post)
async def get_post(id: str, use_case: BaseUseCase = Depends(build_get_post_use_case)):
    """Get a post by ID."""
    try:
        uuid.UUID(id)
    except ValueError:
        raise HTTPException(
            status_code=400, detail={"msg": "route_id no es un UUID válido"}
        )
    post = await use_case.execute(id)
    if not post:
        raise HTTPException(status_code=404, detail="Post not found")
    return post

@router.delete("/{id}", response_class=JSONResponse)
async def delete_post(
    id: str, use_case: BaseUseCase = Depends(build_delete_post_use_case)
):
    """Delete post."""
    try:
        uuid.UUID(id)
    except ValueError:
        raise HTTPException(
            status_code=400, detail={"msg": "route_id no es un UUID válido"}
        )
    try:
        await use_case.execute(id)
        return JSONResponse({"msg": "la publicación fue eliminada"}, status_code=200)
    except PostNotFoundError as err:
        return JSONResponse({"error": str(err)}, status_code=404)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/entrypoints/api/routers/post_router.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/errors.py ==========
class PostNotFoundError(Exception):
    """Exception raised when a pet is not found."""

    pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/src/errors.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/adapter/test_post_repository_adapter.py ==========
import datetime
import uuid

import pytest
from tortoise import Tortoise

from adapters.bd.post_repository_adapter import DBPostRepositoryAdapter
from config import Settings
from domain.models.post import PostCreate
from errors import PostNotFoundError

@pytest.fixture(scope="function")
async def init_tortoise():
    await Tortoise.init(config=Settings.tortoise_config)
    await Tortoise.generate_schemas()
    yield
    await Tortoise.close_connections()

@pytest.fixture(autouse=True)
async def clean_posts(init_tortoise):
    adapter = DBPostRepositoryAdapter()
    await adapter.delete_all_post()

@pytest.mark.asyncio
async def test_create_post():
    adapter = DBPostRepositoryAdapter()
    user = str(uuid.uuid4())
    post_data = PostCreate(
        routeId=str(uuid.uuid4()),
        userId=user,
        expireAt=datetime.datetime.now(datetime.timezone.utc),
    )
    result = await adapter.create(post_data)
    pytest.assume("id" in result)
    pytest.assume(result["userId"] == user)

@pytest.mark.asyncio
async def test_get_by_id_found():
    adapter = DBPostRepositoryAdapter()
    route = str(uuid.uuid4())
    post_data = PostCreate(
        routeId=route,
        userId=str(uuid.uuid4()),
        expireAt=datetime.datetime.now(datetime.timezone.utc),
    )
    created = await adapter.create(post_data)
    post = await adapter.get_by_id(created["id"])
    pytest.assume(post is not None)
    pytest.assume(post.routeId == route)

@pytest.mark.asyncio
async def test_get_by_id_not_found():
    adapter = DBPostRepositoryAdapter()
    nuevo_uuid = str(uuid.uuid4())
    post = await adapter.get_by_id(nuevo_uuid)
    pytest.assume(post is None)

@pytest.mark.asyncio
async def test_get_all_posts():
    adapter = DBPostRepositoryAdapter()
    post_data = PostCreate(
        routeId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        expireAt=datetime.datetime.now(datetime.timezone.utc),
    )
    await adapter.create(post_data)
    posts = await adapter.get_all()
    pytest.assume(isinstance(posts, list))
    pytest.assume(len(posts) == 1)

@pytest.mark.asyncio
async def test_delete_post():
    adapter = DBPostRepositoryAdapter()
    post_data = PostCreate(
        routeId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        expireAt=datetime.datetime.now(datetime.timezone.utc),
    )
    created = await adapter.create(post_data)
    deleted = await adapter.delete(created["id"])
    pytest.assume(deleted.id == created["id"])

@pytest.mark.asyncio
async def test_delete_post_not_found():
    adapter = DBPostRepositoryAdapter()
    with pytest.raises(PostNotFoundError):
        nuevo_uuid = str(uuid.uuid4())
        await adapter.delete(nuevo_uuid)

@pytest.mark.asyncio
async def test_delete_all_post():
    adapter = DBPostRepositoryAdapter()
    post_data = PostCreate(
        routeId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        expireAt=datetime.datetime.now(datetime.timezone.utc),
    )
    await adapter.create(post_data)
    await adapter.delete_all_post()
    posts = await adapter.get_all()
    pytest.assume(posts == [])

@pytest.mark.asyncio
async def test_get_posts_filter_true():
    adapter = DBPostRepositoryAdapter()
    now = datetime.datetime.now(datetime.timezone.utc)
    route = str(uuid.uuid4())
    user = str(uuid.uuid4())
    post_data = PostCreate(
        routeId=route, userId=user, expireAt=now - datetime.timedelta(days=1)
    )
    await adapter.create(post_data)
    posts = await adapter.get_posts_filter(route_id=route, user_id=user, expire="true")
    pytest.assume(all(p.routeId == route for p in posts))

@pytest.mark.asyncio
async def test_get_posts_filter_false():
    adapter = DBPostRepositoryAdapter()
    now = datetime.datetime.now(datetime.timezone.utc)
    route = str(uuid.uuid4())
    user = str(uuid.uuid4())
    post_data = PostCreate(
        routeId=route, userId=user, expireAt=now + datetime.timedelta(days=1)
    )
    await adapter.create(post_data)
    posts = await adapter.get_posts_filter(route_id=route, user_id=user, expire="false")
    pytest.assume(all(p.routeId == route for p in posts))
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/adapter/test_post_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/api/mocks.py ==========
class MockCreatePostUseCase:
    async def execute(self, post):
        return {
            "routeId": post.routeId,
            "expireAt": post.expireAt,
            "userId": post.userId,
        }

class MockDeletePostUseCase:
    async def execute(self, id):
        if id == "no-existe":
            raise Exception("PostNotFoundError")
        return None

class MockGetPostUseCase:
    async def execute(self, id):
        if id == "no-existe":
            return None
        return {
            "routeId": id,
            "expireAt": "2030-01-01T00:00:00Z",
            "userId": "user-id-existente",
        }

class MockGetAllPostUseCase:
    async def execute(self):
        return [
            {"routeId": "1", "expireAt": "2030-01-01T00:00:00Z", "userId": "u1"},
            {"routeId": "2", "expireAt": "2030-01-01T00:00:00Z", "userId": "u2"},
        ]

class MockGetPostFilterUseCase:
    async def execute(self, route, owner, expire):
        return [
            {"routeId": "filtrado", "expireAt": "2030-01-01T00:00:00Z", "userId": "u3"},
        ]

class MockDeleteAllPostUseCase:
    async def execute(self):
        return None
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/api/mocks.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/api/test_api.py ==========
import pytest
from fastapi.testclient import TestClient
from mocks import (
    MockCreatePostUseCase,
    MockDeleteAllPostUseCase,
    MockDeletePostUseCase,
    MockGetAllPostUseCase,
    MockGetPostFilterUseCase,
    MockGetPostUseCase,
)

from assembly import (
    build_create_post_use_case,
    build_delete_all_post_use_case,
    build_delete_post_use_case,
    build_get_all_post_use_case,
    build_get_post_filter_use_case,
    build_get_post_use_case,
)
from entrypoints.api.main import app

client = TestClient(app)

app.dependency_overrides[build_create_post_use_case] = lambda: MockCreatePostUseCase()
app.dependency_overrides[build_delete_post_use_case] = lambda: MockDeletePostUseCase()
app.dependency_overrides[build_get_post_use_case] = lambda: MockGetPostUseCase()
app.dependency_overrides[build_get_all_post_use_case] = lambda: MockGetAllPostUseCase()
app.dependency_overrides[build_get_post_filter_use_case] = (
    lambda: MockGetPostFilterUseCase()
)
app.dependency_overrides[build_delete_all_post_use_case] = (
    lambda: MockDeleteAllPostUseCase()
)

def test_health_check():
    response = client.get("/posts/ping")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.text == "pong")

def test_create_post_expired_date():
    response = client.post(
        "/posts/",
        json={
            "routeId": "8c7b959c-6093-424f-847f-a2fbffdb8666",
            "expireAt": "2022-08-01T21:20:53.214Z",
            "userId": "c7ac4997-2a41-440d-b1a9-d73649328c98",
        },
    )
    pytest.assume(response.status_code == 412)
    pytest.assume(response.json()["msg"] == "La fecha expiración no es válida")

def test_delete_post_ok():
    post_id = "8c7b959c-6093-424f-847f-a2fbffdb8666"
    response = client.delete(f"/posts/{post_id}")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.json()["msg"] == "la publicación fue eliminada")

def test_delete_post_not_found():
    post_id = "no-existe"
    response = client.delete(f"/posts/{post_id}")
    pytest.assume(response.status_code == 400 or response.status_code == 500)

def test_get_post_not_found():
    post_id = "no-existe"
    response = client.get(f"/posts/{post_id}")
    pytest.assume(response.status_code == 400)

def test_get_all_post_count():
    response = client.get("/posts/count")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.json()["count"] == 2)

def test_delete_all_post():
    response = client.post("/posts/reset")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.json()["msg"] == "Todos los datos fueron eliminados")
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/api/test_api.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/use_cases/test_use_cases.py ==========
import pytest

from assembly import (
    build_create_post_use_case,
    build_delete_all_post_use_case,
    build_delete_post_use_case,
    build_get_all_post_use_case,
    build_get_post_filter_use_case,
    build_get_post_use_case,
)
from domain.use_cases.create_post_use_case import CreatePostUseCase
from domain.use_cases.delete_all_post_use_case import DeleteAllPostUseCase
from domain.use_cases.delete_post_use_case import DeletePostUseCase
from domain.use_cases.get_all_post_use_case import GetAllPostUseCase
from domain.use_cases.get_post_filter_use_case import GetFilterPostUseCase
from domain.use_cases.get_post_use_case import GetPostUseCase

def test_build_create_post_use_case():
    use_case = build_create_post_use_case()
    pytest.assume(isinstance(use_case, CreatePostUseCase))

def test_build_get_post_use_case():
    use_case = build_get_post_use_case()
    pytest.assume(isinstance(use_case, GetPostUseCase))

def test_build_delete_post_use_case():
    use_case = build_delete_post_use_case()
    pytest.assume(isinstance(use_case, DeletePostUseCase))

def test_build_get_all_post_use_case():
    use_case = build_get_all_post_use_case()
    pytest.assume(isinstance(use_case, GetAllPostUseCase))

def test_build_delete_all_post_use_case():
    use_case = build_delete_all_post_use_case()
    pytest.assume(isinstance(use_case, DeleteAllPostUseCase))

def test_build_get_post_filter_use_case():
    use_case = build_get_post_filter_use_case()
    pytest.assume(isinstance(use_case, GetFilterPostUseCase))
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/posts_app/tests/unit/use_cases/test_use_cases.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/Dockerfile ==========
# Use Python 3.11 slim image as base
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==2.1.4

# Configure Poetry
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=0 \
    POETRY_CACHE_DIR=/tmp/poetry_cache \
    POETRY_VIRTUALENVS_CREATE=false

# Create non-root user for security
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid appuser --shell /bin/bash --create-home appuser

# Set work directory
WORKDIR /routes_app

# Copy poetry files
COPY pyproject.toml ./  
COPY poetry.lock ./  

# Install dependencies
RUN poetry lock && \
    poetry install --only=main --no-root && \
    rm -rf $POETRY_CACHE_DIR

# Copy application code
COPY src/ ./src/

# Change ownership of the app directory to appuser
RUN chown -R appuser:appuser /routes_app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Set PYTHONPATH
ENV PYTHONPATH=/routes_app/src

# Run the application using poetry
CMD ["poetry", "run", "uvicorn", "entrypoints.api.main:app", "--host", "0.0.0.0", "--port", "8000"]
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/Dockerfile ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/README.md ==========
# Pets - Proyecto ejemplo

Este proyecto es un ejemplo de una aplicación FastAPI que implementa una arquitectura hexagonal (también conocida como puertos y adaptadores) para gestionar la entidad Pet. La aplicación se ejecuta haciendo uso de docker y puede ser ejecutada directamente en su ambiente o haciendo uso de k8s.

Haciendo uso de este proyecto usted entenderá:

- Cómo construir una aplicación siguiendo los principios SOLID con tecnologías como Python, FastAPI, Poetry y Pytest.
- Cómo ejecutar la aplicación por medio de Docker siguiendo buenas prácticas como son: stages y rootless.
- Cómo hacer uso de postman para automatizar pruebas de API que pueden ser ejecutadas en cualquier ambiente.
- Cómo ejecutar la aplicación en minikube para posteriormente ser ejecutada en ambientes productivos de k8s.
- Cómo configurar pipelines en github que ejecute pruebas unitarias, linters en Python, y pruebas con newman sobre docker y minikube.

## Tabla de contenido

- [Pets - Proyecto ejemplo](#pets---proyecto-ejemplo)
  - [Tabla de contenido](#tabla-de-contenido)
  - [Requisitos](#requisitos)
  - [Estructura del Proyecto](#estructura-del-proyecto)
    - [Carpeta src](#carpeta-src)
      - [Domain](#domain)
      - [Adapters](#adapters)
      - [Entrypoints](#entrypoints)
      - [Configuración y ensamble](#configuración-y-ensamble)
      - [Errores](#errores)
    - [Configuración](#configuración)
  - [Ejecución de la aplicación](#ejecución-de-la-aplicación)
    - [1. Instale las dependencias:](#1-instale-las-dependencias)
    - [2. Ejecución](#2-ejecución)
  - [Ejecutar en Docker](#ejecutar-en-docker)
  - [Ejecutar en minikube](#ejecutar-en-minikube)
  - [API Endpoints](#api-endpoints)
  - [Pet Model](#pet-model)
  - [Pruebas](#pruebas)
    - [Unitarias](#unitarias)
    - [Integración](#integración)
  - [Pipelines](#pipelines)
  - [Cómo contribuir](#cómo-contribuir)
  - [Licencia](#licencia)
  - [Autor](#autor)

## Requisitos

- Python 3.11
- Poetry version 2.1.1
- Docker
- Postman

## Estructura del Proyecto

```
.
├── src/
│   ├── domain/             # Capa de dominio
│   │   ├── models/         # Modelos de dominio
│   │   ├── ports/          # Puertos (interfaces)
│   │   └── use_cases/      # Casos de uso
│   ├── adapters/           # Capa de adaptadores
│   │   └── database/       # Adaptador de base de datos
│   └── entrypoints/        # Puntos de entrada
│       └── api/            # API REST
├── tests/                  # Pruebas
├── Dockerfile              # Configuración de Docker
├── pyproject.toml          # Configuración de Poetry
└── README.md               # Este archivo
```

### Carpeta src

Esta carpeta contiene el código y la lógica de la aplicación que permite exponer el API y puede integrar otras aplicaciones o componentes si lo requiere.

#### Domain

Carpeta con la lógica de la aplicación. Si tu aplicación está diseñada para cocinar una receta, esta carpeta es la cocina. 

- `/domain/models`: Contiene las clases que representan las entidades necesarias para los casos de uso de la aplicación. Comúnmente estos modelos son usados para el almacenamiento en la base de datos, pero no deben confundirse, estas clases no deben estar acopladas a una base de datos en específico y solo representan las entidades que se van a manipular en los casos de uso. Será responsabilidad de los adaptadores transformarlas y almacenarlas en una determinada base de datos. En este ejemplo los modelos estarán soportados haciendo uso de pydantic por facilidad de validación e integración con FastAPI.

```python
# domain/models/pet.py
class Pet(BaseModel):
    """Pet domain model."""

    id: int | None = None
    name: str = Field(min_length=1, description="Name cannot be empty")
    type: PetType
    age: int = Field(gt=0, description="Age must be greater than 0")
    owner_name: str = Field(min_length=1, description="Owner name cannot be empty")
```

- `/domain/ports`: Contiene las interfaces que habilitan la interacción con componentes o lógica externa. Estas clases no son implementaciones sino únicamente el "template" que deben seguir nuestras integraciones. Esto permite desacoplar la implementación, habilitando que se pueda reemplazar fácilmente los componentes con los que se integra la aplicación, siempre y cuando se respecte la definición de las interfaces. En este proyecto encontrará que se hace uso de una clase llamada [Repository](https://martinfowler.com/eaaCatalog/repository.html) la cual sigue un patrón que es comúnmente usado cuando el puerto es usado para almacenamiento de una entidad. Sin embargo, los puertos pueden seguir otros patrones para interactuar con otros componentes, por ejemplo notificaciones.

```python
# domain/ports/pet_repository_port.py
class PetRepositoryPort(ABC):
    """Pet repository interface."""

    @abstractmethod
    def create(self, pet: Pet) -> Pet:
        """Create a new pet."""
        pass
    ...

# another example
class NotificationDeliveryPort(ABC):
    """Designed to send notifications."""

    @abstractmethod
    def send(self, payload:Dict[str, str], title:str) -> bool:
        """Sends a notification."""
        pass
    ...
```

- `/domain/use_cases`: Contiene los casos de uso de la aplicación, almacenar, consultar, modificar, borrar o cualquier otra funcionalidad. Todos los casos de usos deben compartir el mismo contrato. Para ello deben extender de una interfaz que define como es el comportamiento de los casos de uso, esta interfaz resulta ser clave para permitir que los entrypoints de la aplicación puedan interactuar con los casos de uso sin generar acoplamiento.

```python
# domain/use_cases/base_use_case.py
class BaseUseCase(ABC):
    """Base use case class."""

    @abstractmethod
    def execute(self, *args, **kwargs):
        """Execute the use case."""
        pass

# domain/use_cases/create_pet_use_case.py
class CreatePetUseCase(BaseUseCase):
    """Use case for saving a pet."""

    def __init__(self, pet_repository: PetRepositoryPort):
        self.pet_repository = pet_repository

    def execute(self, pet: Pet) -> Pet:
        """Create a new pet."""
        return self.pet_repository.create(pet)
```
#### Adapters

En la carpeta adapters se encuentra la implementación de los puertos definidos en la carpeta de ports. En este proyecto de ejemplo se encuentra una implementación de un almacenamiento en memoria, pero usted puede seguir el mismo schema si quiere realizar una implementación para almacenar en una base de datos.

```python
# adapters/memory/pet_repository_adapter.py
class InMemoryPetRepositoryAdapter(PetRepositoryPort):
    """In memory implementation of PetRepository."""

    memory_store: Dict[int, Pet] = {}

    def sequence(self) -> int:
        """Generate a new sequence number."""
        return len(self.memory_store) + 1

    def create(self, pet: Pet) -> Pet:
        """Create a new pet."""
        pet.id = self.sequence()
        self.memory_store[pet.id] = pet
        return pet
    ...

# Another example
# Disclaimer: We suggest using Async Await if you plan to use SQL databases
class SQLAlchemyPetRepositoryAdapter(PetRepositoryPort):
    """SQL implementation of PetRepository."""
    def __init__(self, session: Session):
        self.session = session

    def create(self, pet: Pet) -> Pet:
        pet_model = pet_entity_to_model(pet)
        self.session.add(pet_model)
        self.session.commit()
        self.session.refresh(pet_model)
        return pet_model_to_entity(pet_model)
    ...
```

#### Entrypoints

Contiene los archivos que servirán como punto de acceso a la aplicación; también podrían considerarse como puertos de ingreso. En esta carpeta se encuentran las funciones o clases que permiten interactuar con los casos de uso. La implementación dependerá principalmente de la tecnología utilizada, cuando se trabaja con FastAPI normalmente se habla de Routers, mientras en Flask se encuentran los Blueprints.

En este proyecto se hace uso de routers donde se definen las rutas y los métodos HTTP que se soportan. Si usted quiere agregar nuevas rutas, debe agregar otro archivo router o modificar el actual siguiendo el mismo patrón.

```python
router = APIRouter(prefix="/pets")

@router.get("/ping", response_class=PlainTextResponse)
def health_check():
    """Healthcheck endpoint."""
    return "pong"
```

Posteriormente debe agregar el router a la aplicación en el archivo `main.py`

```python
app = FastAPI(title=Settings.app_name)
app.include_router(pet_router)
```

#### Configuración y ensamble

- `config.py`: En este archivo se encuentran las funciones que permiten leer las variables de ambiente o constantes que se usan en todo el proyecto. Es una buena práctica consolidar el manejo de las variables de ambiente y constantes a un solo archivo, facilita las pruebas y la mantenibilidad.
- `assembly.py`: Este archivo contiene las funciones que realizan la inyección de dependencias. Como ha podido ver en todos los ejemplos previos, las asociaciones entre las clases y funciones se realizan por medio de interfaces, ninguna clase conoce o usa una implementación en particular. Es en este paquete donde se instancian las implementaciones que se van a usar y las cuales son usadas por cada router:

```python
# assembly.py
repository: InMemoryPetRepositoryAdapter = InMemoryPetRepositoryAdapter()

def build_create_pet_use_case() -> BaseUseCase:
    """Get create pet use case."""
    return CreatePetUseCase(repository)
...

# entrypoints/api/routers/pet_router.py
@router.post("/", response_model=Pet)
def create_pet(
    pet: Pet, use_case: BaseUseCase = Depends(build_create_pet_use_case)
):
    """Create a new pet."""
    return use_case.execute(pet)
```

#### Errores

En el proyecto se encuentra el archivo `errors.py` el cual está diseñado para albergar todas las clases de excepciones personalizadas que se creen en el proyecto. Recomendamos crear sus propias clases de excepción para tener mayor control del flujo del programa.

```python
class PetNotFoundError(Exception):
    """Exception raised when a pet is not found."""
    pass
```

Haciendo uso de un handler de excepciones personalizado, puede indicarle a FastAPI que responda un error en particular cuando reciba este tipo de excepciones en un router.

```python
app = FastAPI(title=Settings.app_name)

@app.exception_handler(PetNotFoundError)
def pet_not_found_exception_handler(request: Request, exc: PetNotFoundError):
    return JSONResponse(
        status_code=404,
        content={"detail": exc.message},
    )
...
```

### Configuración

Este proyecto hace uso de [poetry](https://python-poetry.org/) para la gestión de dependencias y configuración de algunas librerías usadas en el proyecto. Encontrará la configuración en el archivo `pyproject.toml` el cuál ya es un estandar para la configuración de proyectos en Python. [Documentación](https://packaging.python.org/en/latest/guides/writing-pyproject-toml/).

> Recomendación: procure evitar otros archivos de configuración como el `setup.cfg`, `setup.py`, `<archivo>.ini` u otros, con el fin de mejorar la mantenibilidad de nuestro código y evitar errores por conflictos de configuración.

Algunos puntos que tener en cuenta en la configuración:

- Agregue todas las dependencias que se usarán en producción en el group por defecto `[tool.poetry.dependencies]`. Esto sucederá por defecto al usar el comando add de poetry: 
```bash
poetry add <libreria>
```
- Agregue las dependencias de desarrollo en el grupo `dev`. Para esto defina el grupo cuando agregue la librería:
```bash
poetry add <librería> --group dev
```
- El archivo contiene las reglas de configuración de linters y herramientas de análisis habilitadas en el proyecto. `[tool.isort]`, `[tool.bandit]`, `[tool.pydoclint]`, `[tool.ruff]`. Si desea modificar las reglas o conocer más de ellas puede revisar los links en cada sección.
- El archivo contiene las reglas de configuración para la ejecución de pruebas con pytest. En la sección `[tool.pytest.ini_options]` puede modificar o agregar nuevas reglas de pruebas. Así como las variables de ambiente que se usarán en las pruebas.

Siempre que modifique el archivo, recomendamos regenerar el archivo de poetry.lock usando:
```bash
poetry lock
```

## Ejecución de la aplicación

### 1. Instale las dependencias:
```bash
poetry install

# Si no existe el archivo poetry.lock ejecute primero
# poetry lock
```
Poetry instalará todas las dependencias en un ambiente virtual gestionado por Poetry.

### 2. Ejecución

dado que todas las dependencias están instaladas en una ambiente virtualizado y gestionado por Poetry es necesario correr el servidor haciendo uso de Poetry:
```bash
PYTHONPATH=$(pwd)/src poetry run uvicorn entrypoints.api.main:app --host 0.0.0.0 --port 9000
```

El API estará disponible en `http://localhost:9000`

Cargue el archivo `pets_app/tests/api/pets.postman_collection.json` en su postman y reemplace la variable `baseUrl` por la url.

Ejecute las pruebas y verifique que se completa correctamente.

## Ejecutar en Docker

```bash
APP_VERSION = ... # use la misma versión del documento pyproject.toml
APP_NAME = ... # use el mismo definido en el documento pyproject.toml
docker build --rm --platform linux/amd64 -t ${APP_NAME}:${APP_VERSION} -f Dockerfile --target runner --label version=${APP_VERSION} .

docker run --platform linux/amd64 -p 9000:9000 ${APP_NAME}:${APP_VERSION}
```

## Ejecutar en minikube

Después de haber creado la imagen haciendo uso de docker, ejecute:

```bash
minikube start --cpus=2 --memory=3g --cni calico

#make mkbuild
minikube image load ${APP_NAME}:${APP_VERSION}

kubectl apply -f k8s
minikube service pets-service
```

Minikube asignará un puerto para que pueda acceder a su servicio. Puede usarlo en su browser o en postman.

## API Endpoints

- `POST /pets/` - Crea un Pet
- `GET /pets/{pet_id}` - Trae un Pet en específico
- `GET /pets/` - Trae todos los pets
- `PUT /pets/{pet_id}` - Modifica un pet
- `DELETE /pets/{pet_id}` - Borra un pet

Accede a la documentación después de ejecutar la aplicación:
- Swagger UI: `http://localhost:9000/docs`

## Pet Model

Un Pet tiene los siguientes campos:
- `id`: Integer (auto-generated)
- `name`: String
- `type`: Enum (dog, cat, bird, other)
- `age`: Integer
- `owner_name`: String

## Pruebas

El proyecto contempla dos paquetes de pruebas: pruebas unitarias y pruebas de API (Integración).

### Unitarias

Cree las pruebas usando la misma estructura de la carpeta src. Si la clase que va a probar es `domain/models/pet.py`, las pruebas deben estar ubicadas en `tests/unit/domain/models/test_pet.py`.

Si está usando pytest para sus pruebas, utilice [fixtures](https://docs.pytest.org/en/stable/explanation/fixtures.html) para crear recursos reutilizables en las pruebas. Esto mejorará su código y permitirá que las pruebas sean consistentes. Estos fixtures deben estar ubicados en un archivo `conftest.py` y no en los archivos de pruebas.

```python
# conftest.py
@pytest.fixture
def valid_pet_data():
    """Fixture providing valid pet data."""
    return {"name": "Rex", "type": PetType.DOG, "age": 5, "owner_name": "John Doe"}

# test_pet.py
def test_create_pet_with_valid_data(valid_pet_data):
    """Test creating a pet with valid data."""
    pet = Pet(**valid_pet_data)
    ...
```

Para ejecutar las pruebas unitarias y establecer el porcentaje mínimo de cobertura del conjunto de pruebas en 70%, ejecuta el siguiente comando:
```bash
poetry install
poetry run pytest --cov=src -v -s --cov-fail-under=70 --cov-report term-missing
```

Por último, recuerde que la configuración de pytest está en el archivo `pyproject.toml`, ajuste la sección dependiendo de las necesidades que tenga. Acuda a la [documentación](https://docs.pytest.org/en/stable/reference/customize.html) si lo requiere.

### Integración

Las pruebas de integración se realizan por medio de postman y newman. Encontrará un archivo de colección de postman en la carpeta `tests/api/` el cuál puede cargar en su aplicación de postman de manera local. Posteriormente puede ejecutar `Run collection` para verificar que la aplicación está funcionando correctamente.

Estas pruebas son ejecutadas de manera automática en los pipelines de pruebas.

## Pipelines

Utilice los ejemplos en la carpeta `.github/workflows/` de este repositorio para configurar sus pipelines. Estos pipelines son solo una guía y no son obligatorios para todos los proyectos. 

Para más información puede revisar la [documentación oficial](https://github.com/features/actions)

## Cómo contribuir

Sigue las reglas definidas en la carpeta .cursor para agregar nuevos features a este proyecto. Si tiene sugerencias o recomendaciones para mejorar los cursor rules le agradecemos nos las comparta.

## Licencia

Este proyecto está licenciado bajo la Licencia MIT - ver el archivo [LICENSE](LICENSE) para más detalles.

## Autor

- César Forero - [ca.forero10@uniandes.edu.co](mailto:ca.forero10@uniandes.edu.co)========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/README.md ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/poetry.lock ==========
# This file is automatically @generated by Poetry 2.1.4 and should not be changed by hand.

[[package]]
name = "aerich"
version = "0.9.1"
description = "A database migrations tool for Tortoise ORM."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "aerich-0.9.1-py3-none-any.whl", hash = "sha256:6ff34a2104454d03f7473dc99e7ad51f405a909c261126a1b8a52d44ca7b4cbc"},
    {file = "aerich-0.9.1.tar.gz", hash = "sha256:629afbef5902635c41f410dd05def984c02e05e62d8a2020210a29a4aae19001"},
]

[package.dependencies]
asyncclick = ">=8.1.7,<9.0.0"
dictdiffer = ">=0.9.0,<1.0.0"
pydantic = ">=2.0.2,<2.1.0 || >2.1.0,<2.7.0 || >2.7.0,<3.0.0"
tortoise-orm = ">=0.24.0,<1.0.0"

[package.extras]
asyncmy = ["asyncmy (>=0.2.9) ; python_version < \"4.0\""]
asyncpg = ["asyncpg"]
mysql = ["aiomysql (>=0.2.0)"]
psycopg = ["psycopg[binary,pool] (>=3.0.12,<4.0.0)"]
toml = ["tomli-w (>=1.1.0,<2.0.0) ; python_version >= \"3.11\"", "tomlkit (>=0.11.4,<1.0.0) ; python_version < \"3.11\""]

[[package]]
name = "aiosqlite"
version = "0.21.0"
description = "asyncio bridge to the standard sqlite3 module"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "aiosqlite-0.21.0-py3-none-any.whl", hash = "sha256:2549cf4057f95f53dcba16f2b64e8e2791d7e1adedb13197dd8ed77bb226d7d0"},
    {file = "aiosqlite-0.21.0.tar.gz", hash = "sha256:131bb8056daa3bc875608c631c678cda73922a2d4ba8aec373b19f18c17e7aa3"},
]

[package.dependencies]
typing_extensions = ">=4.0"

[package.extras]
dev = ["attribution (==1.7.1)", "black (==24.3.0)", "build (>=1.2)", "coverage[toml] (==7.6.10)", "flake8 (==7.0.0)", "flake8-bugbear (==24.12.12)", "flit (==3.10.1)", "mypy (==1.14.1)", "ufmt (==2.5.1)", "usort (==1.0.8.post1)"]
docs = ["sphinx (==8.1.3)", "sphinx-mdinclude (==0.6.1)"]

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "annotated_types-0.7.0-py3-none-any.whl", hash = "sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53"},
    {file = "annotated_types-0.7.0.tar.gz", hash = "sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89"},
]

[[package]]
name = "anyio"
version = "4.10.0"
description = "High-level concurrency and networking framework on top of asyncio or Trio"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "anyio-4.10.0-py3-none-any.whl", hash = "sha256:60e474ac86736bbfd6f210f7a61218939c318f43f9972497381f1c5e930ed3d1"},
    {file = "anyio-4.10.0.tar.gz", hash = "sha256:3f3fae35c96039744587aa5b8371e7e8e603c0702999535961dd336026973ba6"},
]

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
trio = ["trio (>=0.26.1)"]

[[package]]
name = "asyncclick"
version = "8.2.2.2"
description = "Composable command line interface toolkit, async fork"
optional = false
python-versions = ">=3.11"
groups = ["dev"]
files = [
    {file = "asyncclick-8.2.2.2-py3-none-any.whl", hash = "sha256:ee500f57923e2588d624227d80b568546325a758b902a89519913926454187d9"},
    {file = "asyncclick-8.2.2.2.tar.gz", hash = "sha256:014f6b7bfb1ef34a2215bc36aebd5150d5d2e50668b12eceb749961e32c24660"},
]

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "asyncpg"
version = "0.30.0"
description = "An asyncio PostgreSQL driver"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:bfb4dd5ae0699bad2b233672c8fc5ccbd9ad24b89afded02341786887e37927e"},
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:dc1f62c792752a49f88b7e6f774c26077091b44caceb1983509edc18a2222ec0"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3152fef2e265c9c24eec4ee3d22b4f4d2703d30614b0b6753e9ed4115c8a146f"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c7255812ac85099a0e1ffb81b10dc477b9973345793776b128a23e60148dd1af"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:578445f09f45d1ad7abddbff2a3c7f7c291738fdae0abffbeb737d3fc3ab8b75"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:c42f6bb65a277ce4d93f3fba46b91a265631c8df7250592dd4f11f8b0152150f"},
    {file = "asyncpg-0.30.0-cp310-cp310-win32.whl", hash = "sha256:aa403147d3e07a267ada2ae34dfc9324e67ccc4cdca35261c8c22792ba2b10cf"},
    {file = "asyncpg-0.30.0-cp310-cp310-win_amd64.whl", hash = "sha256:fb622c94db4e13137c4c7f98834185049cc50ee01d8f657ef898b6407c7b9c50"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:5e0511ad3dec5f6b4f7a9e063591d407eee66b88c14e2ea636f187da1dcfff6a"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:915aeb9f79316b43c3207363af12d0e6fd10776641a7de8a01212afd95bdf0ed"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1c198a00cce9506fcd0bf219a799f38ac7a237745e1d27f0e1f66d3707c84a5a"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3326e6d7381799e9735ca2ec9fd7be4d5fef5dcbc3cb555d8a463d8460607956"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:51da377487e249e35bd0859661f6ee2b81db11ad1f4fc036194bc9cb2ead5056"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:bc6d84136f9c4d24d358f3b02be4b6ba358abd09f80737d1ac7c444f36108454"},
    {file = "asyncpg-0.30.0-cp311-cp311-win32.whl", hash = "sha256:574156480df14f64c2d76450a3f3aaaf26105869cad3865041156b38459e935d"},
    {file = "asyncpg-0.30.0-cp311-cp311-win_amd64.whl", hash = "sha256:3356637f0bd830407b5597317b3cb3571387ae52ddc3bca6233682be88bbbc1f"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:c902a60b52e506d38d7e80e0dd5399f657220f24635fee368117b8b5fce1142e"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:aca1548e43bbb9f0f627a04666fedaca23db0a31a84136ad1f868cb15deb6e3a"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6c2a2ef565400234a633da0eafdce27e843836256d40705d83ab7ec42074efb3"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1292b84ee06ac8a2ad8e51c7475aa309245874b61333d97411aab835c4a2f737"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:0f5712350388d0cd0615caec629ad53c81e506b1abaaf8d14c93f54b35e3595a"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:db9891e2d76e6f425746c5d2da01921e9a16b5a71a1c905b13f30e12a257c4af"},
    {file = "asyncpg-0.30.0-cp312-cp312-win32.whl", hash = "sha256:68d71a1be3d83d0570049cd1654a9bdfe506e794ecc98ad0873304a9f35e411e"},
    {file = "asyncpg-0.30.0-cp312-cp312-win_amd64.whl", hash = "sha256:9a0292c6af5c500523949155ec17b7fe01a00ace33b68a476d6b5059f9630305"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:05b185ebb8083c8568ea8a40e896d5f7af4b8554b64d7719c0eaa1eb5a5c3a70"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:c47806b1a8cbb0a0db896f4cd34d89942effe353a5035c62734ab13b9f938da3"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9b6fde867a74e8c76c71e2f64f80c64c0f3163e687f1763cfaf21633ec24ec33"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:46973045b567972128a27d40001124fbc821c87a6cade040cfcd4fa8a30bcdc4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:9110df111cabc2ed81aad2f35394a00cadf4f2e0635603db6ebbd0fc896f46a4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:04ff0785ae7eed6cc138e73fc67b8e51d54ee7a3ce9b63666ce55a0bf095f7ba"},
    {file = "asyncpg-0.30.0-cp313-cp313-win32.whl", hash = "sha256:ae374585f51c2b444510cdf3595b97ece4f233fde739aa14b50e0d64e8a7a590"},
    {file = "asyncpg-0.30.0-cp313-cp313-win_amd64.whl", hash = "sha256:f59b430b8e27557c3fb9869222559f7417ced18688375825f8f12302c34e915e"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:29ff1fc8b5bf724273782ff8b4f57b0f8220a1b2324184846b39d1ab4122031d"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:64e899bce0600871b55368b8483e5e3e7f1860c9482e7f12e0a771e747988168"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5b290f4726a887f75dcd1b3006f484252db37602313f806e9ffc4e5996cfe5cb"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f86b0e2cd3f1249d6fe6fd6cfe0cd4538ba994e2d8249c0491925629b9104d0f"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:393af4e3214c8fa4c7b86da6364384c0d1b3298d45803375572f415b6f673f38"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:fd4406d09208d5b4a14db9a9dbb311b6d7aeeab57bded7ed2f8ea41aeef39b34"},
    {file = "asyncpg-0.30.0-cp38-cp38-win32.whl", hash = "sha256:0b448f0150e1c3b96cb0438a0d0aa4871f1472e58de14a3ec320dbb2798fb0d4"},
    {file = "asyncpg-0.30.0-cp38-cp38-win_amd64.whl", hash = "sha256:f23b836dd90bea21104f69547923a02b167d999ce053f3d502081acea2fba15b"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6f4e83f067b35ab5e6371f8a4c93296e0439857b4569850b178a01385e82e9ad"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:5df69d55add4efcd25ea2a3b02025b669a285b767bfbf06e356d68dbce4234ff"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a3479a0d9a852c7c84e822c073622baca862d1217b10a02dd57ee4a7a081f708"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:26683d3b9a62836fad771a18ecf4659a30f348a561279d6227dab96182f46144"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:1b982daf2441a0ed314bd10817f1606f1c28b1136abd9e4f11335358c2c631cb"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:1c06a3a50d014b303e5f6fc1e5f95eb28d2cee89cf58384b700da621e5d5e547"},
    {file = "asyncpg-0.30.0-cp39-cp39-win32.whl", hash = "sha256:1b11a555a198b08f5c4baa8f8231c74a366d190755aa4f99aacec5970afe929a"},
    {file = "asyncpg-0.30.0-cp39-cp39-win_amd64.whl", hash = "sha256:8b684a3c858a83cd876f05958823b68e8d14ec01bb0c0d14a6704c5bf9711773"},
    {file = "asyncpg-0.30.0.tar.gz", hash = "sha256:c551e9928ab6707602f44811817f82ba3c446e018bfe1d3abecc8ba5f3eac851"},
]

[package.extras]
docs = ["Sphinx (>=8.1.3,<8.2.0)", "sphinx-rtd-theme (>=1.2.2)"]
gssauth = ["gssapi ; platform_system != \"Windows\"", "sspilib ; platform_system == \"Windows\""]
test = ["distro (>=1.9.0,<1.10.0)", "flake8 (>=6.1,<7.0)", "flake8-pyi (>=24.1.0,<24.2.0)", "gssapi ; platform_system == \"Linux\"", "k5test ; platform_system == \"Linux\"", "mypy (>=1.8.0,<1.9.0)", "sspilib ; platform_system == \"Windows\"", "uvloop (>=0.15.3) ; platform_system != \"Windows\" and python_version < \"3.14.0\""]

[[package]]
name = "bandit"
version = "1.8.6"
description = "Security oriented static analyser for python code."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "bandit-1.8.6-py3-none-any.whl", hash = "sha256:3348e934d736fcdb68b6aa4030487097e23a501adf3e7827b63658df464dddd0"},
    {file = "bandit-1.8.6.tar.gz", hash = "sha256:dbfe9c25fc6961c2078593de55fd19f2559f9e45b99f1272341f5b95dea4e56b"},
]

[package.dependencies]
colorama = {version = ">=0.3.9", markers = "platform_system == \"Windows\""}
PyYAML = ">=5.3.1"
rich = "*"
stevedore = ">=1.20.0"

[package.extras]
baseline = ["GitPython (>=3.1.30)"]
sarif = ["jschema-to-python (>=1.2.3)", "sarif-om (>=1.0.4)"]
test = ["beautifulsoup4 (>=4.8.0)", "coverage (>=4.5.4)", "fixtures (>=3.0.0)", "flake8 (>=4.0.0)", "pylint (==1.9.4)", "stestr (>=2.5.0)", "testscenarios (>=0.5.0)", "testtools (>=2.3.0)"]
toml = ["tomli (>=1.1.0) ; python_version < \"3.11\""]
yaml = ["PyYAML"]

[[package]]
name = "black"
version = "25.1.0"
description = "The uncompromising code formatter."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "black-25.1.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:759e7ec1e050a15f89b770cefbf91ebee8917aac5c20483bc2d80a6c3a04df32"},
    {file = "black-25.1.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e519ecf93120f34243e6b0054db49c00a35f84f195d5bce7e9f5cfc578fc2da"},
    {file = "black-25.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:055e59b198df7ac0b7efca5ad7ff2516bca343276c466be72eb04a3bcc1f82d7"},
    {file = "black-25.1.0-cp310-cp310-win_amd64.whl", hash = "sha256:db8ea9917d6f8fc62abd90d944920d95e73c83a5ee3383493e35d271aca872e9"},
    {file = "black-25.1.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:a39337598244de4bae26475f77dda852ea00a93bd4c728e09eacd827ec929df0"},
    {file = "black-25.1.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:96c1c7cd856bba8e20094e36e0f948718dc688dba4a9d78c3adde52b9e6c2299"},
    {file = "black-25.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:bce2e264d59c91e52d8000d507eb20a9aca4a778731a08cfff7e5ac4a4bb7096"},
    {file = "black-25.1.0-cp311-cp311-win_amd64.whl", hash = "sha256:172b1dbff09f86ce6f4eb8edf9dede08b1fce58ba194c87d7a4f1a5aa2f5b3c2"},
    {file = "black-25.1.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:4b60580e829091e6f9238c848ea6750efed72140b91b048770b64e74fe04908b"},
    {file = "black-25.1.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:1e2978f6df243b155ef5fa7e558a43037c3079093ed5d10fd84c43900f2d8ecc"},
    {file = "black-25.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:3b48735872ec535027d979e8dcb20bf4f70b5ac75a8ea99f127c106a7d7aba9f"},
    {file = "black-25.1.0-cp312-cp312-win_amd64.whl", hash = "sha256:ea0213189960bda9cf99be5b8c8ce66bb054af5e9e861249cd23471bd7b0b3ba"},
    {file = "black-25.1.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:8f0b18a02996a836cc9c9c78e5babec10930862827b1b724ddfe98ccf2f2fe4f"},
    {file = "black-25.1.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:afebb7098bfbc70037a053b91ae8437c3857482d3a690fefc03e9ff7aa9a5fd3"},
    {file = "black-25.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:030b9759066a4ee5e5aca28c3c77f9c64789cdd4de8ac1df642c40b708be6171"},
    {file = "black-25.1.0-cp313-cp313-win_amd64.whl", hash = "sha256:a22f402b410566e2d1c950708c77ebf5ebd5d0d88a6a2e87c86d9fb48afa0d18"},
    {file = "black-25.1.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:a1ee0a0c330f7b5130ce0caed9936a904793576ef4d2b98c40835d6a65afa6a0"},
    {file = "black-25.1.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:f3df5f1bf91d36002b0a75389ca8663510cf0531cca8aa5c1ef695b46d98655f"},
    {file = "black-25.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:d9e6827d563a2c820772b32ce8a42828dc6790f095f441beef18f96aa6f8294e"},
    {file = "black-25.1.0-cp39-cp39-win_amd64.whl", hash = "sha256:bacabb307dca5ebaf9c118d2d2f6903da0d62c9faa82bd21a33eecc319559355"},
    {file = "black-25.1.0-py3-none-any.whl", hash = "sha256:95e8176dae143ba9097f351d174fdaf0ccd29efb414b362ae3fd72bf0f710717"},
    {file = "black-25.1.0.tar.gz", hash = "sha256:33496d5cd1222ad73391352b4ae8da15253c5de89b93a80b3e2c8d9a19ec2666"},
]

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
packaging = ">=22.0"
pathspec = ">=0.9.0"
platformdirs = ">=2"

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.10)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "certifi"
version = "2025.8.3"
description = "Python package for providing Mozilla's CA Bundle."
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "certifi-2025.8.3-py3-none-any.whl", hash = "sha256:f6c12493cfb1b06ba2ff328595af9350c65d6644968e5d3a2ffd78699af217a5"},
    {file = "certifi-2025.8.3.tar.gz", hash = "sha256:e564105f78ded564e3ae7c923924435e1daa7463faeab5bb932bc53ffae63407"},
]

[[package]]
name = "click"
version = "8.2.1"
description = "Composable command line interface toolkit"
optional = false
python-versions = ">=3.10"
groups = ["main"]
files = [
    {file = "click-8.2.1-py3-none-any.whl", hash = "sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b"},
    {file = "click-8.2.1.tar.gz", hash = "sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202"},
]

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"
groups = ["main", "dev"]
files = [
    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},
    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},
]
markers = {main = "platform_system == \"Windows\" or sys_platform == \"win32\"", dev = "sys_platform == \"win32\" or platform_system == \"Windows\""}

[[package]]
name = "coverage"
version = "7.10.5"
description = "Code coverage measurement for Python"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "coverage-7.10.5-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:c6a5c3414bfc7451b879141ce772c546985163cf553f08e0f135f0699a911801"},
    {file = "coverage-7.10.5-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:bc8e4d99ce82f1710cc3c125adc30fd1487d3cf6c2cd4994d78d68a47b16989a"},
    {file = "coverage-7.10.5-cp310-cp310-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:02252dc1216e512a9311f596b3169fad54abcb13827a8d76d5630c798a50a754"},
    {file = "coverage-7.10.5-cp310-cp310-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:73269df37883e02d460bee0cc16be90509faea1e3bd105d77360b512d5bb9c33"},
    {file = "coverage-7.10.5-cp310-cp310-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:1f8a81b0614642f91c9effd53eec284f965577591f51f547a1cbeb32035b4c2f"},
    {file = "coverage-7.10.5-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:6a29f8e0adb7f8c2b95fa2d4566a1d6e6722e0a637634c6563cb1ab844427dd9"},
    {file = "coverage-7.10.5-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:fcf6ab569436b4a647d4e91accba12509ad9f2554bc93d3aee23cc596e7f99c3"},
    {file = "coverage-7.10.5-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:90dc3d6fb222b194a5de60af8d190bedeeddcbc7add317e4a3cd333ee6b7c879"},
    {file = "coverage-7.10.5-cp310-cp310-win32.whl", hash = "sha256:414a568cd545f9dc75f0686a0049393de8098414b58ea071e03395505b73d7a8"},
    {file = "coverage-7.10.5-cp310-cp310-win_amd64.whl", hash = "sha256:e551f9d03347196271935fd3c0c165f0e8c049220280c1120de0084d65e9c7ff"},
    {file = "coverage-7.10.5-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:c177e6ffe2ebc7c410785307758ee21258aa8e8092b44d09a2da767834f075f2"},
    {file = "coverage-7.10.5-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:14d6071c51ad0f703d6440827eaa46386169b5fdced42631d5a5ac419616046f"},
    {file = "coverage-7.10.5-cp311-cp311-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:61f78c7c3bc272a410c5ae3fde7792b4ffb4acc03d35a7df73ca8978826bb7ab"},
    {file = "coverage-7.10.5-cp311-cp311-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:f39071caa126f69d63f99b324fb08c7b1da2ec28cbb1fe7b5b1799926492f65c"},
    {file = "coverage-7.10.5-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:343a023193f04d46edc46b2616cdbee68c94dd10208ecd3adc56fcc54ef2baa1"},
    {file = "coverage-7.10.5-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:585ffe93ae5894d1ebdee69fc0b0d4b7c75d8007983692fb300ac98eed146f78"},
    {file = "coverage-7.10.5-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:b0ef4e66f006ed181df29b59921bd8fc7ed7cd6a9289295cd8b2824b49b570df"},
    {file = "coverage-7.10.5-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:eb7b0bbf7cc1d0453b843eca7b5fa017874735bef9bfdfa4121373d2cc885ed6"},
    {file = "coverage-7.10.5-cp311-cp311-win32.whl", hash = "sha256:1d043a8a06987cc0c98516e57c4d3fc2c1591364831e9deb59c9e1b4937e8caf"},
    {file = "coverage-7.10.5-cp311-cp311-win_amd64.whl", hash = "sha256:fefafcca09c3ac56372ef64a40f5fe17c5592fab906e0fdffd09543f3012ba50"},
    {file = "coverage-7.10.5-cp311-cp311-win_arm64.whl", hash = "sha256:7e78b767da8b5fc5b2faa69bb001edafcd6f3995b42a331c53ef9572c55ceb82"},
    {file = "coverage-7.10.5-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:c2d05c7e73c60a4cecc7d9b60dbfd603b4ebc0adafaef371445b47d0f805c8a9"},
    {file = "coverage-7.10.5-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:32ddaa3b2c509778ed5373b177eb2bf5662405493baeff52278a0b4f9415188b"},
    {file = "coverage-7.10.5-cp312-cp312-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:dd382410039fe062097aa0292ab6335a3f1e7af7bba2ef8d27dcda484918f20c"},
    {file = "coverage-7.10.5-cp312-cp312-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:7fa22800f3908df31cea6fb230f20ac49e343515d968cc3a42b30d5c3ebf9b5a"},
    {file = "coverage-7.10.5-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:f366a57ac81f5e12797136552f5b7502fa053c861a009b91b80ed51f2ce651c6"},
    {file = "coverage-7.10.5-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:5f1dc8f1980a272ad4a6c84cba7981792344dad33bf5869361576b7aef42733a"},
    {file = "coverage-7.10.5-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:2285c04ee8676f7938b02b4936d9b9b672064daab3187c20f73a55f3d70e6b4a"},
    {file = "coverage-7.10.5-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:c2492e4dd9daab63f5f56286f8a04c51323d237631eb98505d87e4c4ff19ec34"},
    {file = "coverage-7.10.5-cp312-cp312-win32.whl", hash = "sha256:38a9109c4ee8135d5df5505384fc2f20287a47ccbe0b3f04c53c9a1989c2bbaf"},
    {file = "coverage-7.10.5-cp312-cp312-win_amd64.whl", hash = "sha256:6b87f1ad60b30bc3c43c66afa7db6b22a3109902e28c5094957626a0143a001f"},
    {file = "coverage-7.10.5-cp312-cp312-win_arm64.whl", hash = "sha256:672a6c1da5aea6c629819a0e1461e89d244f78d7b60c424ecf4f1f2556c041d8"},
    {file = "coverage-7.10.5-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:ef3b83594d933020f54cf65ea1f4405d1f4e41a009c46df629dd964fcb6e907c"},
    {file = "coverage-7.10.5-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:2b96bfdf7c0ea9faebce088a3ecb2382819da4fbc05c7b80040dbc428df6af44"},
    {file = "coverage-7.10.5-cp313-cp313-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:63df1fdaffa42d914d5c4d293e838937638bf75c794cf20bee12978fc8c4e3bc"},
    {file = "coverage-7.10.5-cp313-cp313-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:8002dc6a049aac0e81ecec97abfb08c01ef0c1fbf962d0c98da3950ace89b869"},
    {file = "coverage-7.10.5-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:63d4bb2966d6f5f705a6b0c6784c8969c468dbc4bcf9d9ded8bff1c7e092451f"},
    {file = "coverage-7.10.5-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:1f672efc0731a6846b157389b6e6d5d5e9e59d1d1a23a5c66a99fd58339914d5"},
    {file = "coverage-7.10.5-cp313-cp313-musllinux_1_2_i686.whl", hash = "sha256:3f39cef43d08049e8afc1fde4a5da8510fc6be843f8dea350ee46e2a26b2f54c"},
    {file = "coverage-7.10.5-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:2968647e3ed5a6c019a419264386b013979ff1fb67dd11f5c9886c43d6a31fc2"},
    {file = "coverage-7.10.5-cp313-cp313-win32.whl", hash = "sha256:0d511dda38595b2b6934c2b730a1fd57a3635c6aa2a04cb74714cdfdd53846f4"},
    {file = "coverage-7.10.5-cp313-cp313-win_amd64.whl", hash = "sha256:9a86281794a393513cf117177fd39c796b3f8e3759bb2764259a2abba5cce54b"},
    {file = "coverage-7.10.5-cp313-cp313-win_arm64.whl", hash = "sha256:cebd8e906eb98bb09c10d1feed16096700b1198d482267f8bf0474e63a7b8d84"},
    {file = "coverage-7.10.5-cp313-cp313t-macosx_10_13_x86_64.whl", hash = "sha256:0520dff502da5e09d0d20781df74d8189ab334a1e40d5bafe2efaa4158e2d9e7"},
    {file = "coverage-7.10.5-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:d9cd64aca68f503ed3f1f18c7c9174cbb797baba02ca8ab5112f9d1c0328cd4b"},
    {file = "coverage-7.10.5-cp313-cp313t-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:0913dd1613a33b13c4f84aa6e3f4198c1a21ee28ccb4f674985c1f22109f0aae"},
    {file = "coverage-7.10.5-cp313-cp313t-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:1b7181c0feeb06ed8a02da02792f42f829a7b29990fef52eff257fef0885d760"},
    {file = "coverage-7.10.5-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:36d42b7396b605f774d4372dd9c49bed71cbabce4ae1ccd074d155709dd8f235"},
    {file = "coverage-7.10.5-cp313-cp313t-musllinux_1_2_aarch64.whl", hash = "sha256:b4fdc777e05c4940b297bf47bf7eedd56a39a61dc23ba798e4b830d585486ca5"},
    {file = "coverage-7.10.5-cp313-cp313t-musllinux_1_2_i686.whl", hash = "sha256:42144e8e346de44a6f1dbd0a56575dd8ab8dfa7e9007da02ea5b1c30ab33a7db"},
    {file = "coverage-7.10.5-cp313-cp313t-musllinux_1_2_x86_64.whl", hash = "sha256:66c644cbd7aed8fe266d5917e2c9f65458a51cfe5eeff9c05f15b335f697066e"},
    {file = "coverage-7.10.5-cp313-cp313t-win32.whl", hash = "sha256:2d1b73023854068c44b0c554578a4e1ef1b050ed07cf8b431549e624a29a66ee"},
    {file = "coverage-7.10.5-cp313-cp313t-win_amd64.whl", hash = "sha256:54a1532c8a642d8cc0bd5a9a51f5a9dcc440294fd06e9dda55e743c5ec1a8f14"},
    {file = "coverage-7.10.5-cp313-cp313t-win_arm64.whl", hash = "sha256:74d5b63fe3f5f5d372253a4ef92492c11a4305f3550631beaa432fc9df16fcff"},
    {file = "coverage-7.10.5-cp314-cp314-macosx_10_13_x86_64.whl", hash = "sha256:68c5e0bc5f44f68053369fa0d94459c84548a77660a5f2561c5e5f1e3bed7031"},
    {file = "coverage-7.10.5-cp314-cp314-macosx_11_0_arm64.whl", hash = "sha256:cf33134ffae93865e32e1e37df043bef15a5e857d8caebc0099d225c579b0fa3"},
    {file = "coverage-7.10.5-cp314-cp314-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:ad8fa9d5193bafcf668231294241302b5e683a0518bf1e33a9a0dfb142ec3031"},
    {file = "coverage-7.10.5-cp314-cp314-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:146fa1531973d38ab4b689bc764592fe6c2f913e7e80a39e7eeafd11f0ef6db2"},
    {file = "coverage-7.10.5-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:6013a37b8a4854c478d3219ee8bc2392dea51602dd0803a12d6f6182a0061762"},
    {file = "coverage-7.10.5-cp314-cp314-musllinux_1_2_aarch64.whl", hash = "sha256:eb90fe20db9c3d930fa2ad7a308207ab5b86bf6a76f54ab6a40be4012d88fcae"},
    {file = "coverage-7.10.5-cp314-cp314-musllinux_1_2_i686.whl", hash = "sha256:384b34482272e960c438703cafe63316dfbea124ac62006a455c8410bf2a2262"},
    {file = "coverage-7.10.5-cp314-cp314-musllinux_1_2_x86_64.whl", hash = "sha256:467dc74bd0a1a7de2bedf8deaf6811f43602cb532bd34d81ffd6038d6d8abe99"},
    {file = "coverage-7.10.5-cp314-cp314-win32.whl", hash = "sha256:556d23d4e6393ca898b2e63a5bca91e9ac2d5fb13299ec286cd69a09a7187fde"},
    {file = "coverage-7.10.5-cp314-cp314-win_amd64.whl", hash = "sha256:f4446a9547681533c8fa3e3c6cf62121eeee616e6a92bd9201c6edd91beffe13"},
    {file = "coverage-7.10.5-cp314-cp314-win_arm64.whl", hash = "sha256:5e78bd9cf65da4c303bf663de0d73bf69f81e878bf72a94e9af67137c69b9fe9"},
    {file = "coverage-7.10.5-cp314-cp314t-macosx_10_13_x86_64.whl", hash = "sha256:5661bf987d91ec756a47c7e5df4fbcb949f39e32f9334ccd3f43233bbb65e508"},
    {file = "coverage-7.10.5-cp314-cp314t-macosx_11_0_arm64.whl", hash = "sha256:a46473129244db42a720439a26984f8c6f834762fc4573616c1f37f13994b357"},
    {file = "coverage-7.10.5-cp314-cp314t-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:1f64b8d3415d60f24b058b58d859e9512624bdfa57a2d1f8aff93c1ec45c429b"},
    {file = "coverage-7.10.5-cp314-cp314t-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:44d43de99a9d90b20e0163f9770542357f58860a26e24dc1d924643bd6aa7cb4"},
    {file = "coverage-7.10.5-cp314-cp314t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:a931a87e5ddb6b6404e65443b742cb1c14959622777f2a4efd81fba84f5d91ba"},
    {file = "coverage-7.10.5-cp314-cp314t-musllinux_1_2_aarch64.whl", hash = "sha256:f9559b906a100029274448f4c8b8b0a127daa4dade5661dfd821b8c188058842"},
    {file = "coverage-7.10.5-cp314-cp314t-musllinux_1_2_i686.whl", hash = "sha256:b08801e25e3b4526ef9ced1aa29344131a8f5213c60c03c18fe4c6170ffa2874"},
    {file = "coverage-7.10.5-cp314-cp314t-musllinux_1_2_x86_64.whl", hash = "sha256:ed9749bb8eda35f8b636fb7632f1c62f735a236a5d4edadd8bbcc5ea0542e732"},
    {file = "coverage-7.10.5-cp314-cp314t-win32.whl", hash = "sha256:609b60d123fc2cc63ccee6d17e4676699075db72d14ac3c107cc4976d516f2df"},
    {file = "coverage-7.10.5-cp314-cp314t-win_amd64.whl", hash = "sha256:0666cf3d2c1626b5a3463fd5b05f5e21f99e6aec40a3192eee4d07a15970b07f"},
    {file = "coverage-7.10.5-cp314-cp314t-win_arm64.whl", hash = "sha256:bc85eb2d35e760120540afddd3044a5bf69118a91a296a8b3940dfc4fdcfe1e2"},
    {file = "coverage-7.10.5-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:62835c1b00c4a4ace24c1a88561a5a59b612fbb83a525d1c70ff5720c97c0610"},
    {file = "coverage-7.10.5-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:5255b3bbcc1d32a4069d6403820ac8e6dbcc1d68cb28a60a1ebf17e47028e898"},
    {file = "coverage-7.10.5-cp39-cp39-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:3876385722e335d6e991c430302c24251ef9c2a9701b2b390f5473199b1b8ebf"},
    {file = "coverage-7.10.5-cp39-cp39-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:8048ce4b149c93447a55d279078c8ae98b08a6951a3c4d2d7e87f4efc7bfe100"},
    {file = "coverage-7.10.5-cp39-cp39-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:4028e7558e268dd8bcf4d9484aad393cafa654c24b4885f6f9474bf53183a82a"},
    {file = "coverage-7.10.5-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:03f47dc870eec0367fcdd603ca6a01517d2504e83dc18dbfafae37faec66129a"},
    {file = "coverage-7.10.5-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:2d488d7d42b6ded7ea0704884f89dcabd2619505457de8fc9a6011c62106f6e5"},
    {file = "coverage-7.10.5-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:b3dcf2ead47fa8be14224ee817dfc1df98043af568fe120a22f81c0eb3c34ad2"},
    {file = "coverage-7.10.5-cp39-cp39-win32.whl", hash = "sha256:02650a11324b80057b8c9c29487020073d5e98a498f1857f37e3f9b6ea1b2426"},
    {file = "coverage-7.10.5-cp39-cp39-win_amd64.whl", hash = "sha256:b45264dd450a10f9e03237b41a9a24e85cbb1e278e5a32adb1a303f58f0017f3"},
    {file = "coverage-7.10.5-py3-none-any.whl", hash = "sha256:0be24d35e4db1d23d0db5c0f6a74a962e2ec83c426b5cac09f4234aadef38e4a"},
    {file = "coverage-7.10.5.tar.gz", hash = "sha256:f2e57716a78bc3ae80b2207be0709a3b2b63b9f2dcf9740ee6ac03588a2015b6"},
]

[package.extras]
toml = ["tomli ; python_full_version <= \"3.11.0a6\""]

[[package]]
name = "dictdiffer"
version = "0.9.0"
description = "Dictdiffer is a library that helps you to diff and patch dictionaries."
optional = false
python-versions = "*"
groups = ["dev"]
files = [
    {file = "dictdiffer-0.9.0-py2.py3-none-any.whl", hash = "sha256:442bfc693cfcadaf46674575d2eba1c53b42f5e404218ca2c2ff549f2df56595"},
    {file = "dictdiffer-0.9.0.tar.gz", hash = "sha256:17bacf5fbfe613ccf1b6d512bd766e6b21fb798822a133aa86098b8ac9997578"},
]

[package.extras]
all = ["Sphinx (>=3)", "check-manifest (>=0.42)", "mock (>=1.3.0)", "numpy (>=1.13.0) ; python_version < \"3.7\"", "numpy (>=1.15.0) ; python_version < \"3.8\"", "numpy (>=1.18.0) ; python_version < \"3.9\"", "numpy (>=1.20.0) ; python_version >= \"3.9\"", "pytest (==5.4.3) ; python_version <= \"3.5\"", "pytest (>=6) ; python_version > \"3.5\"", "pytest-cov (>=2.10.1)", "pytest-isort (>=1.2.0)", "pytest-pycodestyle (>=2) ; python_version <= \"3.5\"", "pytest-pycodestyle (>=2.2.0) ; python_version > \"3.5\"", "pytest-pydocstyle (>=2) ; python_version <= \"3.5\"", "pytest-pydocstyle (>=2.2.0) ; python_version > \"3.5\"", "sphinx (>=3)", "sphinx-rtd-theme (>=0.2)", "tox (>=3.7.0)"]
docs = ["Sphinx (>=3)", "sphinx-rtd-theme (>=0.2)"]
numpy = ["numpy (>=1.13.0) ; python_version < \"3.7\"", "numpy (>=1.15.0) ; python_version < \"3.8\"", "numpy (>=1.18.0) ; python_version < \"3.9\"", "numpy (>=1.20.0) ; python_version >= \"3.9\""]
tests = ["check-manifest (>=0.42)", "mock (>=1.3.0)", "pytest (==5.4.3) ; python_version <= \"3.5\"", "pytest (>=6) ; python_version > \"3.5\"", "pytest-cov (>=2.10.1)", "pytest-isort (>=1.2.0)", "pytest-pycodestyle (>=2) ; python_version <= \"3.5\"", "pytest-pycodestyle (>=2.2.0) ; python_version > \"3.5\"", "pytest-pydocstyle (>=2) ; python_version <= \"3.5\"", "pytest-pydocstyle (>=2.2.0) ; python_version > \"3.5\"", "sphinx (>=3)", "tox (>=3.7.0)"]

[[package]]
name = "fastapi"
version = "0.116.1"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "fastapi-0.116.1-py3-none-any.whl", hash = "sha256:c46ac7c312df840f0c9e220f7964bada936781bc4e2e6eb71f1c4d7553786565"},
    {file = "fastapi-0.116.1.tar.gz", hash = "sha256:ed52cbf946abfd70c5a0dccb24673f0670deeb517a88b3544d03c2a6bf283143"},
]

[package.dependencies]
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0 || >2.0.0,<2.0.1 || >2.0.1,<2.1.0 || >2.1.0,<3.0.0"
starlette = ">=0.40.0,<0.48.0"
typing-extensions = ">=4.8.0"

[package.extras]
all = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.8)", "httpx (>=0.23.0)", "itsdangerous (>=1.1.0)", "jinja2 (>=3.1.5)", "orjson (>=3.2.1)", "pydantic-extra-types (>=2.0.0)", "pydantic-settings (>=2.0.0)", "python-multipart (>=0.0.18)", "pyyaml (>=5.3.1)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)", "uvicorn[standard] (>=0.12.0)"]
standard = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.8)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]
standard-no-fastapi-cloud-cli = ["email-validator (>=2.0.0)", "fastapi-cli[standard-no-fastapi-cloud-cli] (>=0.0.8)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]

[[package]]
name = "h11"
version = "0.16.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "h11-0.16.0-py3-none-any.whl", hash = "sha256:63cf8bbe7522de3bf65932fda1d9c2772064ffb3dae62d55932da54b31cb6c86"},
    {file = "h11-0.16.0.tar.gz", hash = "sha256:4e35b956cf45792e4caa5885e69fba00bdbc6ffafbfa020300e549b208ee5ff1"},
]

[[package]]
name = "httpcore"
version = "1.0.9"
description = "A minimal low-level HTTP client."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "httpcore-1.0.9-py3-none-any.whl", hash = "sha256:2d400746a40668fc9dec9810239072b40b4484b640a8c38fd654a024c7a1bf55"},
    {file = "httpcore-1.0.9.tar.gz", hash = "sha256:6e34463af53fd2ab5d807f399a9b45ea31c3dfa2276f15a2c3f00afff6e176e8"},
]

[package.dependencies]
certifi = "*"
h11 = ">=0.16"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (==1.*)"]
trio = ["trio (>=0.22.0,<1.0)"]

[[package]]
name = "httpx"
version = "0.28.1"
description = "The next generation HTTP client."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "httpx-0.28.1-py3-none-any.whl", hash = "sha256:d909fcccc110f8c7faf814ca82a9a4d816bc5a6dbfea25d6591d6985b8ba59ad"},
    {file = "httpx-0.28.1.tar.gz", hash = "sha256:75e98c5f16b0f35b567856f597f06ff2270a374470a5c2392242528e3e3e42fc"},
]

[package.dependencies]
anyio = "*"
certifi = "*"
httpcore = "==1.*"
idna = "*"

[package.extras]
brotli = ["brotli ; platform_python_implementation == \"CPython\"", "brotlicffi ; platform_python_implementation != \"CPython\""]
cli = ["click (==8.*)", "pygments (==2.*)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (==1.*)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
optional = false
python-versions = ">=3.6"
groups = ["main"]
files = [
    {file = "idna-3.10-py3-none-any.whl", hash = "sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3"},
    {file = "idna-3.10.tar.gz", hash = "sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9"},
]

[package.extras]
all = ["flake8 (>=7.1.1)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "ruff (>=0.6.2)"]

[[package]]
name = "iniconfig"
version = "2.1.0"
description = "brain-dead simple config-ini parsing"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "iniconfig-2.1.0-py3-none-any.whl", hash = "sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760"},
    {file = "iniconfig-2.1.0.tar.gz", hash = "sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7"},
]

[[package]]
name = "iso8601"
version = "2.1.0"
description = "Simple module to parse ISO 8601 dates"
optional = false
python-versions = ">=3.7,<4.0"
groups = ["main", "dev"]
markers = "python_version < \"4.0\""
files = [
    {file = "iso8601-2.1.0-py3-none-any.whl", hash = "sha256:aac4145c4dcb66ad8b648a02830f5e2ff6c24af20f4f482689be402db2429242"},
    {file = "iso8601-2.1.0.tar.gz", hash = "sha256:6b1d3829ee8921c4301998c909f7829fa9ed3cbdac0d3b16af2d743aed1ba8df"},
]

[[package]]
name = "isort"
version = "6.0.1"
description = "A Python utility / library to sort Python imports."
optional = false
python-versions = ">=3.9.0"
groups = ["main"]
files = [
    {file = "isort-6.0.1-py3-none-any.whl", hash = "sha256:2dc5d7f65c9678d94c88dfc29161a320eec67328bc97aad576874cb4be1e9615"},
    {file = "isort-6.0.1.tar.gz", hash = "sha256:1cb5df28dfbc742e490c5e41bad6da41b805b0a8be7bc93cd0fb2a8a890ac450"},
]

[package.extras]
colors = ["colorama"]
plugins = ["setuptools"]

[[package]]
name = "markdown-it-py"
version = "4.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
optional = false
python-versions = ">=3.10"
groups = ["main"]
files = [
    {file = "markdown_it_py-4.0.0-py3-none-any.whl", hash = "sha256:87327c59b172c5011896038353a81343b6754500a08cd7a4973bb48c6d578147"},
    {file = "markdown_it_py-4.0.0.tar.gz", hash = "sha256:cb0a2b4aa34f932c007117b194e945bd74e0ec24133ceb5bac59009cda1cb9f3"},
]

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "markdown-it-pyrs", "mistletoe (>=1.0,<2.0)", "mistune (>=3.0,<4.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins (>=0.5.0)"]
profiling = ["gprof2dot"]
rtd = ["ipykernel", "jupyter_sphinx", "mdit-py-plugins (>=0.5.0)", "myst-parser", "pyyaml", "sphinx", "sphinx-book-theme (>=1.0,<2.0)", "sphinx-copybutton", "sphinx-design"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions", "requests"]

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},
    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},
]

[[package]]
name = "mypy-extensions"
version = "1.1.0"
description = "Type system extensions for programs checked with the mypy type checker."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "mypy_extensions-1.1.0-py3-none-any.whl", hash = "sha256:1be4cccdb0f2482337c4743e60421de3a356cd97508abadd57d47403e94f5505"},
    {file = "mypy_extensions-1.1.0.tar.gz", hash = "sha256:52e68efc3284861e772bbcd66823fde5ae21fd2fdb51c62a211403730b916558"},
]

[[package]]
name = "packaging"
version = "25.0"
description = "Core utilities for Python packages"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "packaging-25.0-py3-none-any.whl", hash = "sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484"},
    {file = "packaging-25.0.tar.gz", hash = "sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f"},
]

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "pathspec-0.12.1-py3-none-any.whl", hash = "sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08"},
    {file = "pathspec-0.12.1.tar.gz", hash = "sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712"},
]

[[package]]
name = "platformdirs"
version = "4.4.0"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "platformdirs-4.4.0-py3-none-any.whl", hash = "sha256:abd01743f24e5287cd7a5db3752faf1a2d65353f38ec26d98e25a6db65958c85"},
    {file = "platformdirs-4.4.0.tar.gz", hash = "sha256:ca753cf4d81dc309bc67b0ea38fd15dc97bc30ce419a7f58d13eb3bf14c4febf"},
]

[package.extras]
docs = ["furo (>=2024.8.6)", "proselint (>=0.14)", "sphinx (>=8.1.3)", "sphinx-autodoc-typehints (>=3)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest (>=8.3.4)", "pytest-cov (>=6)", "pytest-mock (>=3.14)"]
type = ["mypy (>=1.14.1)"]

[[package]]
name = "pluggy"
version = "1.6.0"
description = "plugin and hook calling mechanisms for python"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pluggy-1.6.0-py3-none-any.whl", hash = "sha256:e920276dd6813095e9377c0bc5566d94c932c33b27a3e3945d8389c374dd4746"},
    {file = "pluggy-1.6.0.tar.gz", hash = "sha256:7dcc130b76258d33b90f61b658791dede3486c3e6bfb003ee5c9bfb396dd22f3"},
]

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["coverage", "pytest", "pytest-benchmark"]

[[package]]
name = "pydantic"
version = "2.11.7"
description = "Data validation using Python type hints"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pydantic-2.11.7-py3-none-any.whl", hash = "sha256:dde5df002701f6de26248661f6835bbe296a47bf73990135c7d07ce741b9623b"},
    {file = "pydantic-2.11.7.tar.gz", hash = "sha256:d989c3c6cb79469287b1569f7447a17848c998458d49ebe294e975b9baf0f0db"},
]

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.33.2"
typing-extensions = ">=4.12.2"
typing-inspection = ">=0.4.0"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata ; python_version >= \"3.9\" and platform_system == \"Windows\""]

[[package]]
name = "pydantic-core"
version = "2.33.2"
description = "Core functionality for Pydantic validation and serialization"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pydantic_core-2.33.2-cp310-cp310-macosx_10_12_x86_64.whl", hash = "sha256:2b3d326aaef0c0399d9afffeb6367d5e26ddc24d351dbc9c636840ac355dc5d8"},
    {file = "pydantic_core-2.33.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e5b2671f05ba48b94cb90ce55d8bdcaaedb8ba00cc5359f6810fc918713983d"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0069c9acc3f3981b9ff4cdfaf088e98d83440a4c7ea1bc07460af3d4dc22e72d"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:d53b22f2032c42eaaf025f7c40c2e3b94568ae077a606f006d206a463bc69572"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:0405262705a123b7ce9f0b92f123334d67b70fd1f20a9372b907ce1080c7ba02"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:4b25d91e288e2c4e0662b8038a28c6a07eaac3e196cfc4ff69de4ea3db992a1b"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6bdfe4b3789761f3bcb4b1ddf33355a71079858958e3a552f16d5af19768fef2"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:efec8db3266b76ef9607c2c4c419bdb06bf335ae433b80816089ea7585816f6a"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:031c57d67ca86902726e0fae2214ce6770bbe2f710dc33063187a68744a5ecac"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_armv7l.whl", hash = "sha256:f8de619080e944347f5f20de29a975c2d815d9ddd8be9b9b7268e2e3ef68605a"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:73662edf539e72a9440129f231ed3757faab89630d291b784ca99237fb94db2b"},
    {file = "pydantic_core-2.33.2-cp310-cp310-win32.whl", hash = "sha256:0a39979dcbb70998b0e505fb1556a1d550a0781463ce84ebf915ba293ccb7e22"},
    {file = "pydantic_core-2.33.2-cp310-cp310-win_amd64.whl", hash = "sha256:b0379a2b24882fef529ec3b4987cb5d003b9cda32256024e6fe1586ac45fc640"},
    {file = "pydantic_core-2.33.2-cp311-cp311-macosx_10_12_x86_64.whl", hash = "sha256:4c5b0a576fb381edd6d27f0a85915c6daf2f8138dc5c267a57c08a62900758c7"},
    {file = "pydantic_core-2.33.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e799c050df38a639db758c617ec771fd8fb7a5f8eaaa4b27b101f266b216a246"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dc46a01bf8d62f227d5ecee74178ffc448ff4e5197c756331f71efcc66dc980f"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:a144d4f717285c6d9234a66778059f33a89096dfb9b39117663fd8413d582dcc"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:73cf6373c21bc80b2e0dc88444f41ae60b2f070ed02095754eb5a01df12256de"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3dc625f4aa79713512d1976fe9f0bc99f706a9dee21dfd1810b4bbbf228d0e8a"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:881b21b5549499972441da4758d662aeea93f1923f953e9cbaff14b8b9565aef"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bdc25f3681f7b78572699569514036afe3c243bc3059d3942624e936ec93450e"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:fe5b32187cbc0c862ee201ad66c30cf218e5ed468ec8dc1cf49dec66e160cc4d"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_armv7l.whl", hash = "sha256:bc7aee6f634a6f4a95676fcb5d6559a2c2a390330098dba5e5a5f28a2e4ada30"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:235f45e5dbcccf6bd99f9f472858849f73d11120d76ea8707115415f8e5ebebf"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win32.whl", hash = "sha256:6368900c2d3ef09b69cb0b913f9f8263b03786e5b2a387706c5afb66800efd51"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win_amd64.whl", hash = "sha256:1e063337ef9e9820c77acc768546325ebe04ee38b08703244c1309cccc4f1bab"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win_arm64.whl", hash = "sha256:6b99022f1d19bc32a4c2a0d544fc9a76e3be90f0b3f4af413f87d38749300e65"},
    {file = "pydantic_core-2.33.2-cp312-cp312-macosx_10_12_x86_64.whl", hash = "sha256:a7ec89dc587667f22b6a0b6579c249fca9026ce7c333fc142ba42411fa243cdc"},
    {file = "pydantic_core-2.33.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:3c6db6e52c6d70aa0d00d45cdb9b40f0433b96380071ea80b09277dba021ddf7"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4e61206137cbc65e6d5256e1166f88331d3b6238e082d9f74613b9b765fb9025"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:eb8c529b2819c37140eb51b914153063d27ed88e3bdc31b71198a198e921e011"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c52b02ad8b4e2cf14ca7b3d918f3eb0ee91e63b3167c32591e57c4317e134f8f"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:96081f1605125ba0855dfda83f6f3df5ec90c61195421ba72223de35ccfb2f88"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8f57a69461af2a5fa6e6bbd7a5f60d3b7e6cebb687f55106933188e79ad155c1"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:572c7e6c8bb4774d2ac88929e3d1f12bc45714ae5ee6d9a788a9fb35e60bb04b"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:db4b41f9bd95fbe5acd76d89920336ba96f03e149097365afe1cb092fceb89a1"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_armv7l.whl", hash = "sha256:fa854f5cf7e33842a892e5c73f45327760bc7bc516339fda888c75ae60edaeb6"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:5f483cfb75ff703095c59e365360cb73e00185e01aaea067cd19acffd2ab20ea"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win32.whl", hash = "sha256:9cb1da0f5a471435a7bc7e439b8a728e8b61e59784b2af70d7c169f8dd8ae290"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win_amd64.whl", hash = "sha256:f941635f2a3d96b2973e867144fde513665c87f13fe0e193c158ac51bfaaa7b2"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win_arm64.whl", hash = "sha256:cca3868ddfaccfbc4bfb1d608e2ccaaebe0ae628e1416aeb9c4d88c001bb45ab"},
    {file = "pydantic_core-2.33.2-cp313-cp313-macosx_10_12_x86_64.whl", hash = "sha256:1082dd3e2d7109ad8b7da48e1d4710c8d06c253cbc4a27c1cff4fbcaa97a9e3f"},
    {file = "pydantic_core-2.33.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:f517ca031dfc037a9c07e748cefd8d96235088b83b4f4ba8939105d20fa1dcd6"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0a9f2c9dd19656823cb8250b0724ee9c60a82f3cdf68a080979d13092a3b0fef"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2b0a451c263b01acebe51895bfb0e1cc842a5c666efe06cdf13846c7418caa9a"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1ea40a64d23faa25e62a70ad163571c0b342b8bf66d5fa612ac0dec4f069d916"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:0fb2d542b4d66f9470e8065c5469ec676978d625a8b7a363f07d9a501a9cb36a"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9fdac5d6ffa1b5a83bca06ffe7583f5576555e6c8b3a91fbd25ea7780f825f7d"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:04a1a413977ab517154eebb2d326da71638271477d6ad87a769102f7c2488c56"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:c8e7af2f4e0194c22b5b37205bfb293d166a7344a5b0d0eaccebc376546d77d5"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_armv7l.whl", hash = "sha256:5c92edd15cd58b3c2d34873597a1e20f13094f59cf88068adb18947df5455b4e"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:65132b7b4a1c0beded5e057324b7e16e10910c106d43675d9bd87d4f38dde162"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win32.whl", hash = "sha256:52fb90784e0a242bb96ec53f42196a17278855b0f31ac7c3cc6f5c1ec4811849"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win_amd64.whl", hash = "sha256:c083a3bdd5a93dfe480f1125926afcdbf2917ae714bdb80b36d34318b2bec5d9"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win_arm64.whl", hash = "sha256:e80b087132752f6b3d714f041ccf74403799d3b23a72722ea2e6ba2e892555b9"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:61c18fba8e5e9db3ab908620af374db0ac1baa69f0f32df4f61ae23f15e586ac"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:95237e53bb015f67b63c91af7518a62a8660376a6a0db19b89acc77a4d6199f5"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-win_amd64.whl", hash = "sha256:c2fc0a768ef76c15ab9238afa6da7f69895bb5d1ee83aeea2e3509af4472d0b9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-macosx_10_12_x86_64.whl", hash = "sha256:a2b911a5b90e0374d03813674bf0a5fbbb7741570dcd4b4e85a2e48d17def29d"},
    {file = "pydantic_core-2.33.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:6fa6dfc3e4d1f734a34710f391ae822e0a8eb8559a85c6979e14e65ee6ba2954"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c54c939ee22dc8e2d545da79fc5381f1c020d6d3141d3bd747eab59164dc89fb"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:53a57d2ed685940a504248187d5685e49eb5eef0f696853647bf37c418c538f7"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09fb9dd6571aacd023fe6aaca316bd01cf60ab27240d7eb39ebd66a3a15293b4"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:0e6116757f7959a712db11f3e9c0a99ade00a5bbedae83cb801985aa154f071b"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8d55ab81c57b8ff8548c3e4947f119551253f4e3787a7bbc0b6b3ca47498a9d3"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c20c462aa4434b33a2661701b861604913f912254e441ab8d78d30485736115a"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:44857c3227d3fb5e753d5fe4a3420d6376fa594b07b621e220cd93703fe21782"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_armv7l.whl", hash = "sha256:eb9b459ca4df0e5c87deb59d37377461a538852765293f9e6ee834f0435a93b9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9fcd347d2cc5c23b06de6d3b7b8275be558a0c90549495c699e379a80bf8379e"},
    {file = "pydantic_core-2.33.2-cp39-cp39-win32.whl", hash = "sha256:83aa99b1285bc8f038941ddf598501a86f1536789740991d7d8756e34f1e74d9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-win_amd64.whl", hash = "sha256:f481959862f57f29601ccced557cc2e817bce7533ab8e01a797a48b49c9692b3"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-macosx_10_12_x86_64.whl", hash = "sha256:5c4aa4e82353f65e548c476b37e64189783aa5384903bfea4f41580f255fddfa"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:d946c8bf0d5c24bf4fe333af284c59a19358aa3ec18cb3dc4370080da1e8ad29"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:87b31b6846e361ef83fedb187bb5b4372d0da3f7e28d85415efa92d6125d6e6d"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:aa9d91b338f2df0508606f7009fde642391425189bba6d8c653afd80fd6bb64e"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:2058a32994f1fde4ca0480ab9d1e75a0e8c87c22b53a3ae66554f9af78f2fe8c"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:0e03262ab796d986f978f79c943fc5f620381be7287148b8010b4097f79a39ec"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:1a8695a8d00c73e50bff9dfda4d540b7dee29ff9b8053e38380426a85ef10052"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:fa754d1850735a0b0e03bcffd9d4b4343eb417e47196e4485d9cca326073a42c"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:a11c8d26a50bfab49002947d3d237abe4d9e4b5bdc8846a63537b6488e197808"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-macosx_10_12_x86_64.whl", hash = "sha256:dd14041875d09cc0f9308e37a6f8b65f5585cf2598a53aa0123df8b129d481f8"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-macosx_11_0_arm64.whl", hash = "sha256:d87c561733f66531dced0da6e864f44ebf89a8fba55f31407b00c2f7f9449593"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f82865531efd18d6e07a04a17331af02cb7a651583c418df8266f17a63c6612"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2bfb5112df54209d820d7bf9317c7a6c9025ea52e49f46b6a2060104bba37de7"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64632ff9d614e5eecfb495796ad51b0ed98c453e447a76bcbeeb69615079fc7e"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:f889f7a40498cc077332c7ab6b4608d296d852182211787d4f3ee377aaae66e8"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:de4b83bb311557e439b9e186f733f6c645b9417c84e2eb8203f3f820a4b988bf"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:82f68293f055f51b51ea42fafc74b6aad03e70e191799430b90c13d643059ebb"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-win_amd64.whl", hash = "sha256:329467cecfb529c925cf2bbd4d60d2c509bc2fb52a20c1045bf09bb70971a9c1"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-macosx_10_12_x86_64.whl", hash = "sha256:87acbfcf8e90ca885206e98359d7dca4bcbb35abdc0ff66672a293e1d7a19101"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:7f92c15cd1e97d4b12acd1cc9004fa092578acfa57b67ad5e43a197175d01a64"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d3f26877a748dc4251cfcfda9dfb5f13fcb034f5308388066bcfe9031b63ae7d"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dac89aea9af8cd672fa7b510e7b8c33b0bba9a43186680550ccf23020f32d535"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:970919794d126ba8645f3837ab6046fb4e72bbc057b3709144066204c19a455d"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:3eb3fe62804e8f859c49ed20a8451342de53ed764150cb14ca71357c765dc2a6"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:3abcd9392a36025e3bd55f9bd38d908bd17962cc49bc6da8e7e96285336e2bca"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:3a1c81334778f9e3af2f8aeb7a960736e5cab1dfebfb26aabca09afd2906c039"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:2807668ba86cb38c6817ad9bc66215ab8584d1d304030ce4f0887336f28a5e27"},
    {file = "pydantic_core-2.33.2.tar.gz", hash = "sha256:7cb8bc3605c29176e1b105350d2e6474142d7c1bd1d9327c4a9bdb46bf827acc"},
]

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pygments"
version = "2.19.2"
description = "Pygments is a syntax highlighting package written in Python."
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "pygments-2.19.2-py3-none-any.whl", hash = "sha256:86540386c03d588bb81d44bc3928634ff26449851e99741617ecb9037ee5ec0b"},
    {file = "pygments-2.19.2.tar.gz", hash = "sha256:636cb2477cec7f8952536970bc533bc43743542f70392ae026374600add5b887"},
]

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pypika-tortoise"
version = "0.6.1"
description = "Forked from pypika and streamline just for tortoise-orm"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
markers = "python_version < \"4.0\""
files = [
    {file = "pypika_tortoise-0.6.1-py3-none-any.whl", hash = "sha256:da15886f37b347e71f0869f9e4ee2f9259e6bb57455b45299c6c23d7927cbb6e"},
    {file = "pypika_tortoise-0.6.1.tar.gz", hash = "sha256:36ec2c88c255b9ed7ef49a6068cdeac10dafd4ddfeb828205d3afc092507fc3a"},
]

[[package]]
name = "pytest"
version = "8.4.1"
description = "pytest: simple powerful testing with Python"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pytest-8.4.1-py3-none-any.whl", hash = "sha256:539c70ba6fcead8e78eebbf1115e8b589e7565830d7d006a8723f19ac8a0afb7"},
    {file = "pytest-8.4.1.tar.gz", hash = "sha256:7c67fd69174877359ed9371ec3af8a3d2b04741818c51e5e99cc1742251fa93c"},
]

[package.dependencies]
colorama = {version = ">=0.4", markers = "sys_platform == \"win32\""}
iniconfig = ">=1"
packaging = ">=20"
pluggy = ">=1.5,<2"
pygments = ">=2.7.2"

[package.extras]
dev = ["argcomplete", "attrs (>=19.2)", "hypothesis (>=3.56)", "mock", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-assume"
version = "2.4.3"
description = "A pytest plugin that allows multiple failures per test"
optional = false
python-versions = "*"
groups = ["main"]
files = [
    {file = "pytest-assume-2.4.3.tar.gz", hash = "sha256:983e90537660fd7aa18bb554693523020272e7edeee3e40435593297bcc6347e"},
    {file = "pytest_assume-2.4.3-py3-none-any.whl", hash = "sha256:09074220213b87cf1f400609701a44b75078b4e69588c7227e061ff9b3ecf54b"},
]

[package.dependencies]
pytest = ">=2.7"
six = "*"

[[package]]
name = "pytest-asyncio"
version = "1.1.0"
description = "Pytest support for asyncio"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_asyncio-1.1.0-py3-none-any.whl", hash = "sha256:5fe2d69607b0bd75c656d1211f969cadba035030156745ee09e7d71740e58ecf"},
    {file = "pytest_asyncio-1.1.0.tar.gz", hash = "sha256:796aa822981e01b68c12e4827b8697108f7205020f24b5793b3c41555dab68ea"},
]

[package.dependencies]
pytest = ">=8.2,<9"

[package.extras]
docs = ["sphinx (>=5.3)", "sphinx-rtd-theme (>=1)"]
testing = ["coverage (>=6.2)", "hypothesis (>=5.7.1)"]

[[package]]
name = "pytest-cov"
version = "6.2.1"
description = "Pytest plugin for measuring coverage."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_cov-6.2.1-py3-none-any.whl", hash = "sha256:f5bc4c23f42f1cdd23c70b1dab1bbaef4fc505ba950d53e0081d0730dd7e86d5"},
    {file = "pytest_cov-6.2.1.tar.gz", hash = "sha256:25cc6cc0a5358204b8108ecedc51a9b57b34cc6b8c967cc2c01a4e00d8a67da2"},
]

[package.dependencies]
coverage = {version = ">=7.5", extras = ["toml"]}
pluggy = ">=1.2"
pytest = ">=6.2.5"

[package.extras]
testing = ["fields", "hunter", "process-tests", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytz"
version = "2025.2"
description = "World timezone definitions, modern and historical"
optional = false
python-versions = "*"
groups = ["main", "dev"]
files = [
    {file = "pytz-2025.2-py2.py3-none-any.whl", hash = "sha256:5ddf76296dd8c44c26eb8f4b6f35488f3ccbf6fbbd7adee0b7262d43f0ec2f00"},
    {file = "pytz-2025.2.tar.gz", hash = "sha256:360b9e3dbb49a209c21ad61809c7fb453643e048b38924c765813546746e81c3"},
]

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086"},
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68"},
    {file = "PyYAML-6.0.2-cp310-cp310-win32.whl", hash = "sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99"},
    {file = "PyYAML-6.0.2-cp310-cp310-win_amd64.whl", hash = "sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e"},
    {file = "PyYAML-6.0.2-cp311-cp311-win32.whl", hash = "sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5"},
    {file = "PyYAML-6.0.2-cp311-cp311-win_amd64.whl", hash = "sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b"},
    {file = "PyYAML-6.0.2-cp312-cp312-win32.whl", hash = "sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4"},
    {file = "PyYAML-6.0.2-cp312-cp312-win_amd64.whl", hash = "sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652"},
    {file = "PyYAML-6.0.2-cp313-cp313-win32.whl", hash = "sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183"},
    {file = "PyYAML-6.0.2-cp313-cp313-win_amd64.whl", hash = "sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563"},
    {file = "PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083"},
    {file = "PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706"},
    {file = "PyYAML-6.0.2-cp38-cp38-win32.whl", hash = "sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a"},
    {file = "PyYAML-6.0.2-cp38-cp38-win_amd64.whl", hash = "sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725"},
    {file = "PyYAML-6.0.2-cp39-cp39-win32.whl", hash = "sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631"},
    {file = "PyYAML-6.0.2-cp39-cp39-win_amd64.whl", hash = "sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8"},
    {file = "pyyaml-6.0.2.tar.gz", hash = "sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e"},
]

[[package]]
name = "rich"
version = "14.1.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "rich-14.1.0-py3-none-any.whl", hash = "sha256:536f5f1785986d6dbdea3c75205c473f970777b4a0d6c6dd1b696aa05a3fa04f"},
    {file = "rich-14.1.0.tar.gz", hash = "sha256:e497a48b844b0320d45007cdebfeaeed8db2a4f4bcf49f15e455cfc4af11eaa8"},
]

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "ruff"
version = "0.12.10"
description = "An extremely fast Python linter and code formatter, written in Rust."
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "ruff-0.12.10-py3-none-linux_armv6l.whl", hash = "sha256:8b593cb0fb55cc8692dac7b06deb29afda78c721c7ccfed22db941201b7b8f7b"},
    {file = "ruff-0.12.10-py3-none-macosx_10_12_x86_64.whl", hash = "sha256:ebb7333a45d56efc7c110a46a69a1b32365d5c5161e7244aaf3aa20ce62399c1"},
    {file = "ruff-0.12.10-py3-none-macosx_11_0_arm64.whl", hash = "sha256:d59e58586829f8e4a9920788f6efba97a13d1fa320b047814e8afede381c6839"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:822d9677b560f1fdeab69b89d1f444bf5459da4aa04e06e766cf0121771ab844"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:37b4a64f4062a50c75019c61c7017ff598cb444984b638511f48539d3a1c98db"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:2c6f4064c69d2542029b2a61d39920c85240c39837599d7f2e32e80d36401d6e"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl", hash = "sha256:059e863ea3a9ade41407ad71c1de2badfbe01539117f38f763ba42a1206f7559"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1bef6161e297c68908b7218fa6e0e93e99a286e5ed9653d4be71e687dff101cf"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:4f1345fbf8fb0531cd722285b5f15af49b2932742fc96b633e883da8d841896b"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1f68433c4fbc63efbfa3ba5db31727db229fa4e61000f452c540474b03de52a9"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_31_riscv64.whl", hash = "sha256:141ce3d88803c625257b8a6debf4a0473eb6eed9643a6189b68838b43e78165a"},
    {file = "ruff-0.12.10-py3-none-musllinux_1_2_aarch64.whl", hash = "sha256:f3fc21178cd44c98142ae7590f42ddcb587b8e09a3b849cbc84edb62ee95de60"},
    {file = "ruff-0.12.10-py3-none-musllinux_1_2_armv7l.whl", hash = "sha256:7d1a4e0bdfafcd2e3e235ecf50bf0176f74dd37902f241588ae1f6c827a36c56"},
    {file = "ruff-0.12.10-py3-none-musllinux_1_2_i686.whl", hash = "sha256:e67d96827854f50b9e3e8327b031647e7bcc090dbe7bb11101a81a3a2cbf1cc9"},
    {file = "ruff-0.12.10-py3-none-musllinux_1_2_x86_64.whl", hash = "sha256:ae479e1a18b439c59138f066ae79cc0f3ee250712a873d00dbafadaad9481e5b"},
    {file = "ruff-0.12.10-py3-none-win32.whl", hash = "sha256:9de785e95dc2f09846c5e6e1d3a3d32ecd0b283a979898ad427a9be7be22b266"},
    {file = "ruff-0.12.10-py3-none-win_amd64.whl", hash = "sha256:7837eca8787f076f67aba2ca559cefd9c5cbc3a9852fd66186f4201b87c1563e"},
    {file = "ruff-0.12.10-py3-none-win_arm64.whl", hash = "sha256:cc138cc06ed9d4bfa9d667a65af7172b47840e1a98b02ce7011c391e54635ffc"},
    {file = "ruff-0.12.10.tar.gz", hash = "sha256:189ab65149d11ea69a2d775343adf5f49bb2426fc4780f65ee33b423ad2e47f9"},
]

[[package]]
name = "six"
version = "1.17.0"
description = "Python 2 and 3 compatibility utilities"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"
groups = ["main"]
files = [
    {file = "six-1.17.0-py2.py3-none-any.whl", hash = "sha256:4721f391ed90541fddacab5acf947aa0d3dc7d27b2e1e8eda2be8970586c3274"},
    {file = "six-1.17.0.tar.gz", hash = "sha256:ff70335d468e7eb6ec65b95b99d3a2836546063f63acc5171de367e834932a81"},
]

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "sniffio-1.3.1-py3-none-any.whl", hash = "sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2"},
    {file = "sniffio-1.3.1.tar.gz", hash = "sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc"},
]

[[package]]
name = "starlette"
version = "0.47.3"
description = "The little ASGI library that shines."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "starlette-0.47.3-py3-none-any.whl", hash = "sha256:89c0778ca62a76b826101e7c709e70680a1699ca7da6b44d38eb0a7e61fe4b51"},
    {file = "starlette-0.47.3.tar.gz", hash = "sha256:6bc94f839cc176c4858894f1f8908f0ab79dfec1a6b8402f6da9be26ebea52e9"},
]

[package.dependencies]
anyio = ">=3.6.2,<5"
typing-extensions = {version = ">=4.10.0", markers = "python_version < \"3.13\""}

[package.extras]
full = ["httpx (>=0.27.0,<0.29.0)", "itsdangerous", "jinja2", "python-multipart (>=0.0.18)", "pyyaml"]

[[package]]
name = "stevedore"
version = "5.5.0"
description = "Manage dynamic plugins for Python applications"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "stevedore-5.5.0-py3-none-any.whl", hash = "sha256:18363d4d268181e8e8452e71a38cd77630f345b2ef6b4a8d5614dac5ee0d18cf"},
    {file = "stevedore-5.5.0.tar.gz", hash = "sha256:d31496a4f4df9825e1a1e4f1f74d19abb0154aff311c3b376fcc89dae8fccd73"},
]

[[package]]
name = "tortoise-orm"
version = "0.25.1"
description = "Easy async ORM for python, built with relations in mind"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "tortoise_orm-0.25.1-py3-none-any.whl", hash = "sha256:df0ef7e06eb0650a7e5074399a51ee6e532043308c612db2cac3882486a3fd9f"},
    {file = "tortoise_orm-0.25.1.tar.gz", hash = "sha256:4d5bfd13d5750935ffe636a6b25597c5c8f51c47e5b72d7509d712eda1a239fe"},
]

[package.dependencies]
aiosqlite = ">=0.16.0,<1.0.0"
iso8601 = {version = ">=2.1.0,<3.0.0", markers = "python_version < \"4.0\""}
pypika-tortoise = {version = ">=0.6.1,<1.0.0", markers = "python_version < \"4.0\""}
pytz = "*"

[package.extras]
accel = ["ciso8601 ; sys_platform != \"win32\" and implementation_name == \"cpython\"", "orjson", "uvloop ; sys_platform != \"win32\" and implementation_name == \"cpython\""]
aiomysql = ["aiomysql"]
asyncmy = ["asyncmy (>=0.2.8,<1.0.0) ; python_version < \"4.0\""]
asyncodbc = ["asyncodbc (>=0.1.1,<1.0.0) ; python_version < \"4.0\""]
asyncpg = ["asyncpg"]
psycopg = ["psycopg[binary,pool] (>=3.0.12,<4.0.0)"]

[[package]]
name = "typing-extensions"
version = "4.15.0"
description = "Backported and Experimental Type Hints for Python 3.9+"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "typing_extensions-4.15.0-py3-none-any.whl", hash = "sha256:f0fa19c6845758ab08074a0cfa8b7aecb71c999ca73d62883bc25cc018c4e548"},
    {file = "typing_extensions-4.15.0.tar.gz", hash = "sha256:0cea48d173cc12fa28ecabc3b837ea3cf6f38c6d1136f85cbaaf598984861466"},
]

[[package]]
name = "typing-inspection"
version = "0.4.1"
description = "Runtime typing introspection tools"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "typing_inspection-0.4.1-py3-none-any.whl", hash = "sha256:389055682238f53b04f7badcb49b989835495a96700ced5dab2d8feae4b26f51"},
    {file = "typing_inspection-0.4.1.tar.gz", hash = "sha256:6ae134cc0203c33377d43188d4064e9b357dba58cff3185f22924610e70a9d28"},
]

[package.dependencies]
typing-extensions = ">=4.12.0"

[[package]]
name = "uvicorn"
version = "0.35.0"
description = "The lightning-fast ASGI server."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "uvicorn-0.35.0-py3-none-any.whl", hash = "sha256:197535216b25ff9b785e29a0b79199f55222193d47f820816e7da751e9bc8d4a"},
    {file = "uvicorn-0.35.0.tar.gz", hash = "sha256:bc662f087f7cf2ce11a1d7fd70b90c9f98ef2e2831556dd078d131b96cc94a01"},
]

[package.dependencies]
click = ">=7.0"
h11 = ">=0.8"

[package.extras]
standard = ["colorama (>=0.4) ; sys_platform == \"win32\"", "httptools (>=0.6.3)", "python-dotenv (>=0.13)", "pyyaml (>=5.1)", "uvloop (>=0.15.1) ; sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"PyPy\"", "watchfiles (>=0.13)", "websockets (>=10.4)"]

[metadata]
lock-version = "2.1"
python-versions = ">=3.11"
content-hash = "86027d893a0460b325a34c9b3b5241c36eb3dc07154503a8033086a4d167cd6d"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/poetry.lock ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/pyproject.toml ==========
[project]
name = "routes_app"
version = "0.1.0"
description = ""
authors = [
    {name = "Daniel Sierra", email = "dani-sie@uniandes.edu.co"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "tortoise-orm (>=0.25.1,<0.26.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "black (>=25.1.0,<26.0.0)",
    "isort (>=6.0.1,<7.0.0)",
    "bandit (>=1.8.6,<2.0.0)",
    "pytest-assume (>=2.4.3,<3.0.0)",
    "ruff (>=0.12.9,<0.13.0)",
    "httpx (>=0.28.1,<0.29.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
aerich = "^0.9.1"
pytest = "^8.4.1"

pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"

[[tool.poetry.packages]]
include = "src"
from = "."

[tool.aerich]

tortoise_orm = "tortoise_config.tortoise_config"

location = "./migrations"

src_folder = "./."

[tool.pytest.ini_options]
# https://docs.pytest.org/en/7.2.x/reference/customize.html for reference
python_files = "test_*.py"
pythonpath = "src"
testpaths = [
  "tests"
]
addopts = "--asyncio-mode=auto"

========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/pyproject.toml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/models.py ==========
import uuid

from tortoise import fields, models

class Router(models.Model):

    id = fields.UUIDField(pk=True, default=uuid.uuid4)
    flightId = fields.CharField(max_length=64, unique=True)
    sourceAirportCode = fields.CharField(max_length=3)
    sourceCountry = fields.CharField(max_length=100)
    destinyAirportCode = fields.CharField(max_length=3)
    destinyCountry = fields.CharField(max_length=100)
    bagCost = fields.IntField(default=0)
    plannedStartDate = fields.DatetimeField()
    plannedEndDate = fields.DatetimeField()
    createdAt = fields.DatetimeField(auto_now_add=True)
    updatedAt = fields.DatetimeField(auto_now_add=True)

    class Meta:
        table = "routes"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/models.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/route_repository_adapter.py ==========
from typing import Dict, List

from adapters.db.models import Router
from domain.models.route import CreateRouter
from domain.models.route import Router as RouterModel
from domain.ports.route_repository_port import RouteRepositoryPort
from errors import RouteNotFoundError

class RouteRepositoryAdapter(RouteRepositoryPort):
    """PostgreSQL implementation of RouteRepository."""

    async def create(self, router_create: CreateRouter) -> Dict:

        fligh_exist = await Router.filter(flightId=router_create.flightId).exists()
        if fligh_exist:
            return {"msg": "El vuelo ya existe"}

        route_db = Router(
            flightId=router_create.flightId,
            sourceAirportCode=router_create.sourceAirportCode,
            sourceCountry=router_create.sourceCountry,
            destinyAirportCode=router_create.destinyAirportCode,
            destinyCountry=router_create.destinyCountry,
            bagCost=router_create.bagCost,
            plannedStartDate=router_create.plannedStartDate,
            plannedEndDate=router_create.plannedEndDate,
        )
        await route_db.save()
        return {
            "id": str(route_db.id),
            "createdAt": route_db.createdAt.isoformat(),
        }

    async def delete_all_routers(self) -> None:
        """Delete all routers."""
        await Router.all().delete()
        return None

    async def get_by_id(self, route_id: int) -> Router:
        return await Router.get_or_none(id=route_id)

    async def get_router_filter(self, flight_id: str) -> List[RouterModel]:
        dict_filter = {}
        if flight_id is not None:
            dict_filter["flightId"] = flight_id
        routers = await Router.filter(**dict_filter).all()
        return routers

    async def get_all(self) -> List[Router]:
        return await Router.all()

    async def update(self, route: RouterModel) -> Router:
        pass

    async def delete(self, router_id: str) -> Router:
        router = await Router.get_or_none(id=router_id)
        if not router:
            raise RouteNotFoundError(f"Router with id {router_id} not found")
        await router.delete()
        return router
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/adapters/db/route_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/assembly.py ==========
from adapters.db.route_repository_adapter import RouteRepositoryAdapter
from domain.use_cases.create_route_use_case import CreateRouteUseCase
from domain.use_cases.delete_route_use_case import DeleteRouteUseCase
from domain.use_cases.filter_route_use_case import FilterRouteUseCase
from domain.use_cases.get_all_route_use_case import GetAllRoutesUseCase
from domain.use_cases.get_route_use_case import GetRouteUseCase
from domain.use_cases.reset_db_use_case import ResetRoutesUseCase
from domain.use_cases.update_route_use_case import UpdateRouteUseCase

repository = RouteRepositoryAdapter()

def build_create_route_use_case():
    return CreateRouteUseCase(repository)

def build_get_route_use_case():
    return GetRouteUseCase(repository)

def build_get_all_routes_use_case():
    return GetAllRoutesUseCase(repository)

def build_update_route_use_case():
    return UpdateRouteUseCase(repository)

def build_delete_route_use_case():
    return DeleteRouteUseCase(repository)

def build_reset_routes_use_case():
    return ResetRoutesUseCase(repository)

def build_filter_routes_use_case():
    return FilterRouteUseCase(repository)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/assembly.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/config.py ==========
import os
from functools import lru_cache

class classproperty:
    def __init__(self, fget):
        self.fget = fget

    def __get__(self, instance, owner):
        return self.fget(owner)

class Settings:
    """Application settings."""

    @classproperty
    @lru_cache()
    def app_name(self) -> str:
        return os.getenv("APP_NAME", "Router App")

    @classproperty
    @lru_cache()
    def log_level(self) -> str:
        return os.getenv("LOG_LEVEL", "DEBUG")

    @classproperty
    @lru_cache()
    def db_url(self) -> str:
        user = os.getenv("POSTGRES_USER")
        password = os.getenv("POSTGRES_PASSWORD")
        host = os.getenv("POSTGRES_HOST")
        port = os.getenv("POSTGRES_PORT", "5432")
        db = os.getenv("POSTGRES_DB")
        return f"postgres://{user}:{password}@{host}:{port}/{db}"

    @classproperty
    @lru_cache()
    def tortoise_config(self) -> dict:
        return {
            "connections": {"default": Settings.db_url},
            "apps": {
                "models": {
                    "models": ["adapters.db.models"],
                    "default_connection": "default",
                }
            },
        }
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/config.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/models/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/models/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/models/route.py ==========
from datetime import datetime
from uuid import UUID

from pydantic import BaseModel

class Router(BaseModel):
    id: UUID
    flightId: str
    sourceAirportCode: str
    sourceCountry: str
    destinyAirportCode: str
    destinyCountry: str
    bagCost: int
    plannedStartDate: datetime
    plannedEndDate: datetime
    createdAt: datetime

    class Config:
        from_attributes = True

class CreateRouter(BaseModel):
    flightId: str
    sourceAirportCode: str
    sourceCountry: str
    destinyAirportCode: str
    destinyCountry: str
    bagCost: int
    plannedStartDate: datetime
    plannedEndDate: datetime
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/models/route.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/ports/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/ports/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/ports/route_repository_port.py ==========
from abc import ABC, abstractmethod
from typing import List, Optional

from domain.models.route import Router

class RouteRepositoryPort(ABC):
    """Route repository interface."""

    @abstractmethod
    def create(self, route: Router) -> Router:
        """Create a new route."""
        pass

    @abstractmethod
    def get_by_id(self, route_id: int) -> Optional[Router]:
        """Get route by ID."""
        pass

    @abstractmethod
    def get_all(self) -> List[Router]:
        """Get all routes."""
        pass

    @abstractmethod
    def update(self, route: Router) -> Router:
        """Update an existing route."""
        pass

    @abstractmethod
    def delete(self, route_id: int) -> Router:
        """Delete a route."""
        pass

    @abstractmethod
    def delete_all_routers(self) -> None:
        """Delete all routers."""
        pass

    @abstractmethod
    def get_router_filter(self, flight_id: str) -> List[Router]:
        """Get routes by filter."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/ports/route_repository_port.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/base_use_case.py ==========
from abc import ABC, abstractmethod

class BaseUseCase(ABC):
    """Base use case class."""

    @abstractmethod
    def execute(self, *args, **kwargs):
        """Execute the use case."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/base_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/create_route_use_case.py ==========
from domain.models.route import Router
from domain.ports.route_repository_port import RouteRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class CreateRouteUseCase(BaseUseCase):
    """Use case for saving a route."""

    def __init__(self, route_repository: RouteRepositoryPort):
        self.route_repository = route_repository

    def execute(self, route: Router) -> Router:
        """Create a new route."""
        return self.route_repository.create(route)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/create_route_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/delete_route_use_case.py ==========
from domain.models.route import Router
from domain.ports.route_repository_port import RouteRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class DeleteRouteUseCase(BaseUseCase):
    """Use case for deleting a route."""

    def __init__(self, route_repository: RouteRepositoryPort):
        self.route_repository = route_repository

    def execute(self, route_id: int) -> Router:
        return self.route_repository.delete(route_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/delete_route_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/filter_route_use_case.py ==========
from typing import List, Optional

from domain.models.route import Router
from domain.ports.route_repository_port import RouteRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class FilterRouteUseCase(BaseUseCase):
    """Use case for deleting a route."""

    def __init__(self, route_repository: RouteRepositoryPort):
        self.route_repository = route_repository

    def execute(self, flight_id: Optional[str]) -> List[Router]:
        return self.route_repository.get_router_filter(flight_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/filter_route_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/get_all_route_use_case.py ==========
from typing import List

from domain.models.route import Router
from domain.ports.route_repository_port import RouteRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetAllRoutesUseCase(BaseUseCase):
    """Use case for getting all routes."""

    def __init__(self, route_repository: RouteRepositoryPort):
        self.route_repository = route_repository

    def execute(self) -> List[Router]:
        return self.route_repository.get_all()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/get_all_route_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/get_route_use_case.py ==========
from domain.models.route import Router
from domain.ports.route_repository_port import RouteRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetRouteUseCase(BaseUseCase):
    """Use case for getting a route."""

    def __init__(self, route_repository: RouteRepositoryPort):
        self.route_repository = route_repository

    def execute(self, route_id: int) -> Router:
        return self.route_repository.get_by_id(route_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/get_route_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/reset_db_use_case.py ==========
from typing import List

from domain.models.route import Router
from domain.ports.route_repository_port import RouteRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class ResetRoutesUseCase(BaseUseCase):
    """Use case for getting all routes."""

    def __init__(self, route_repository: RouteRepositoryPort):
        self.route_repository = route_repository

    def execute(self) -> List[Router]:
        return self.route_repository.delete_all_routers()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/reset_db_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/update_route_use_case.py ==========
from domain.models.route import Router
from domain.ports.route_repository_port import RouteRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class UpdateRouteUseCase(BaseUseCase):
    """Use case for updating a route."""

    def __init__(self, route_repository: RouteRepositoryPort):
        self.route_repository = route_repository

    def execute(self, route: Router) -> Router:
        return self.route_repository.update(route)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/domain/use_cases/update_route_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/main.py ==========
from fastapi import FastAPI, Request
from fastapi.exceptions import RequestValidationError
from fastapi.responses import JSONResponse
from tortoise.contrib.fastapi import register_tortoise

from config import Settings
from entrypoints.api.routers.route_router import router as router_router

app = FastAPI(title=Settings.app_name)

@app.exception_handler(RequestValidationError)
async def validation_exception_handler(request: Request, exc: RequestValidationError):
    return JSONResponse(
        status_code=400,
        content=None,
    )

app.include_router(router_router)

register_tortoise(
    app,
    config=Settings.tortoise_config,
    generate_schemas=True,
    add_exception_handlers=True,
)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/main.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/routers/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/routers/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/routers/route_router.py ==========
import datetime
import uuid
from typing import List

from fastapi import APIRouter, Depends, HTTPException
from fastapi.responses import JSONResponse

from assembly import (
    build_create_route_use_case,
    build_delete_route_use_case,
    build_filter_routes_use_case,
    build_get_all_routes_use_case,
    build_get_route_use_case,
    build_reset_routes_use_case,
)
from domain.models.route import CreateRouter, Router
from domain.use_cases.base_use_case import BaseUseCase
from errors import RouteNotFoundError

router = APIRouter(prefix="/routes", tags=["routes"])

@router.get("/ping")
def ping():
    """Endpoint para verificar que el servicio está activo"""
    return "pong"

@router.post("/", response_class=JSONResponse)
async def create_route(
    route: CreateRouter, use_case: BaseUseCase = Depends(build_create_route_use_case)
):
    try:
        planend_start = route.plannedStartDate
        planend_end = route.plannedEndDate
        now = datetime.datetime.now(datetime.timezone.utc)
        if (
            route.plannedStartDate <= now
            or route.plannedEndDate <= now
            or planend_start >= planend_end
        ):
            return JSONResponse(
                status_code=412,
                content={"msg": "Las fechas del trayecto no son válidas"},
            )
    except ValueError:
        return JSONResponse(
            status_code=412, content={"msg": "Las fechas del trayecto no son válidas"}
        )
    result = await use_case.execute(route)
    if "msg" in result and result["msg"] == "El vuelo ya existe":
        return JSONResponse(status_code=412, content=None)

    return JSONResponse(result, status_code=201)

@router.get("/count", response_class=JSONResponse)
async def get_all_routers(
    use_case: BaseUseCase = Depends(build_get_all_routes_use_case),
):
    """get all routers."""
    try:
        all_routers = await use_case.execute()
        return JSONResponse({"count": len(all_routers)}, status_code=200)
    except RouteNotFoundError as err:
        return JSONResponse({"error": str(err)}, status_code=404)

@router.post("/reset", response_class=JSONResponse)
async def delete_all_routers(
    use_case: BaseUseCase = Depends(build_reset_routes_use_case),
):
    """Delete all posts."""

    await use_case.execute()
    return JSONResponse({"msg": "Todos los datos fueron eliminados"}, status_code=200)

@router.get("/", response_model=List[Router])
async def get_filter_router(
    flight: str = None,
    use_case: BaseUseCase = Depends(build_filter_routes_use_case),
):
    """Get all routers with filters."""
    routers = await use_case.execute(flight)
    return routers

@router.get("/{id}", response_class=JSONResponse)
async def get_router(
    id: str, use_case: BaseUseCase = Depends(build_get_route_use_case)
):
    """Get a post by ID."""

    try:
        uuid.UUID(id)
    except ValueError:
        raise HTTPException(
            status_code=400, detail={"msg": "route_id no es un UUID válido"}
        )

    router = await use_case.execute(id)
    if not router:
        raise HTTPException(status_code=404, detail="router not found")
    return router

@router.delete("/{id}", response_class=JSONResponse)
async def delete_router(
    id: str, use_case: BaseUseCase = Depends(build_delete_route_use_case)
):
    """Delete router."""
    try:
        uuid.UUID(id)
    except ValueError:
        raise HTTPException(
            status_code=400, detail={"msg": "route_id no es un UUID válido"}
        )
    try:
        await use_case.execute(id)
        return JSONResponse({"msg": "el trayecto fue eliminado"}, status_code=200)
    except RouteNotFoundError as err:
        return JSONResponse({"error": str(err)}, status_code=404)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/entrypoints/api/routers/route_router.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/errors.py ==========
class RouteNotFoundError(Exception):
    """Exception raised when a route is not found."""

    pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/src/errors.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/adapter/test_router_repository_adapter.py ==========
import uuid

import pytest
from tortoise import Tortoise

from adapters.db.route_repository_adapter import RouteRepositoryAdapter
from config import Settings
from domain.models.route import CreateRouter
from errors import RouteNotFoundError

@pytest.fixture(scope="function")
async def init_tortoise():
    await Tortoise.init(config=Settings.tortoise_config)
    await Tortoise.generate_schemas()
    yield
    await Tortoise.close_connections()

@pytest.fixture(autouse=True)
async def clean_routers(init_tortoise):
    adapter = RouteRepositoryAdapter()
    await adapter.delete_all_routers()

@pytest.mark.asyncio
async def test_create_router():
    adapter = RouteRepositoryAdapter()
    router_data = CreateRouter(
        flightId="357",
        sourceAirportCode="BOG",
        sourceCountry="Colombia",
        destinyAirportCode="MIA",
        destinyCountry="USA",
        bagCost=50.0,
        plannedStartDate="2023-10-10T10:00:00Z",
        plannedEndDate="2023-10-10T14:00:00Z",
    )

    result = await adapter.create(router_data)
    pytest.assume("id" in result)

@pytest.mark.asyncio
async def test_get_by_id_not_found():
    adapter = RouteRepositoryAdapter()
    nuevo_uuid = str(uuid.uuid4())
    router = await adapter.get_by_id(nuevo_uuid)
    pytest.assume(router is None)

@pytest.mark.asyncio
async def test_get_all_routers():
    adapter = RouteRepositoryAdapter()
    router_data = CreateRouter(
        flightId="357",
        sourceAirportCode="BOG",
        sourceCountry="Colombia",
        destinyAirportCode="MIA",
        destinyCountry="USA",
        bagCost=50.0,
        plannedStartDate="2023-10-10T10:00:00Z",
        plannedEndDate="2023-10-10T14:00:00Z",
    )
    await adapter.create(router_data)
    posts = await adapter.get_all()
    pytest.assume(isinstance(posts, list))
    pytest.assume(len(posts) == 1)

@pytest.mark.asyncio
async def test_delete_router_not_found():
    adapter = RouteRepositoryAdapter()
    with pytest.raises(RouteNotFoundError):
        nuevo_uuid = str(uuid.uuid4())
        await adapter.delete(nuevo_uuid)

@pytest.mark.asyncio
async def test_delete_all_router():
    adapter = RouteRepositoryAdapter()
    router_data = CreateRouter(
        flightId="357",
        sourceAirportCode="BOG",
        sourceCountry="Colombia",
        destinyAirportCode="MIA",
        destinyCountry="USA",
        bagCost=50.0,
        plannedStartDate="2023-10-10T10:00:00Z",
        plannedEndDate="2023-10-10T14:00:00Z",
    )
    await adapter.create(router_data)
    await adapter.delete_all_routers()
    posts = await adapter.get_all()
    pytest.assume(posts == [])

@pytest.mark.asyncio
async def test_get_router_filter_true():
    adapter = RouteRepositoryAdapter()
    router_data = CreateRouter(
        flightId="357",
        sourceAirportCode="BOG",
        sourceCountry="Colombia",
        destinyAirportCode="MIA",
        destinyCountry="USA",
        bagCost=50.0,
        plannedStartDate="2023-10-10T10:00:00Z",
        plannedEndDate="2023-10-10T14:00:00Z",
    )
    await adapter.create(router_data)
    routers = await adapter.get_router_filter("357")
    pytest.assume(all(p.flightId == "357" for p in routers))
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/adapter/test_router_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/api/mocks.py ==========
import uuid

class MockCreateRouterUseCase:
    async def execute(self, router):
        return {
            "id": str(uuid.uuid4()),
            "createdAt": "2025-10-10T14:00:00Z",
        }

class MockDeleteRouterUseCase:
    async def execute(self, id):
        if id == "no-existe":
            raise Exception("RouteNotFoundError")
        return None

class MockGetRouterUseCase:
    async def execute(self, id):
        if id == "no-existe":
            return None
        return {
            "id": id,
            "flightId": "4545",
            "sourceAirportCode": "BOG",
            "sourceCountry": "Colombia",
            "destinyAirportCode": "MIA",
            "destinyCountry": "USA",
            "bagCost": 100,
            "plannedStartDate": "2023-10-10T10:00:00Z",
            "plannedEndDate": "2023-10-10T14:00:00Z",
            "createdAt": "2025-10-10T14:00:00Z",
        }

class MockDeleteAllRoutersUseCase:
    async def execute(self):
        return None
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/api/mocks.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/api/test_api.py ==========
import pytest
from fastapi.testclient import TestClient
from mocks import (
    MockCreateRouterUseCase,
    MockDeleteAllRoutersUseCase,
    MockDeleteRouterUseCase,
    MockGetRouterUseCase,
)

from assembly import (
    build_create_route_use_case,
    build_delete_route_use_case,
    build_get_route_use_case,
    build_reset_routes_use_case,
)
from entrypoints.api.main import app

client = TestClient(app)

app.dependency_overrides[build_create_route_use_case] = (
    lambda: MockCreateRouterUseCase()
)
app.dependency_overrides[build_delete_route_use_case] = (
    lambda: MockDeleteRouterUseCase()
)
app.dependency_overrides[build_get_route_use_case] = lambda: MockGetRouterUseCase()
app.dependency_overrides[build_reset_routes_use_case] = (
    lambda: MockDeleteAllRoutersUseCase()
)

def test_create_route_date():
    response = client.post(
        "/routes/",
        json={
            "flightId": "4545",
            "sourceAirportCode": "BOG",
            "sourceCountry": "Colombia",
            "destinyAirportCode": "MIA",
            "destinyCountry": "USA",
            "bagCost": 100,
            "plannedStartDate": "2023-10-10T10:00:00Z",
            "plannedEndDate": "2023-10-10T14:00:00Z",
        },
    )
    pytest.assume(response.status_code == 412)
    pytest.assume(response.json()["msg"] == "Las fechas del trayecto no son válidas")

def test_delete_router_ok():
    router_id = "8c7b959c-6093-424f-847f-a2fbffdb8666"
    response = client.delete(f"/routes/{router_id}")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.json()["msg"] == "el trayecto fue eliminado")

def test_delete_route_not_found():
    route_id = "no-existe"
    response = client.delete(f"/routes/{route_id}")
    pytest.assume(response.status_code == 400 or response.status_code == 500)

def test_get_route_not_found():
    route_id = "no-existe"
    response = client.get(f"/routes/{route_id}")
    pytest.assume(response.status_code == 400)

def test_delete_all_route():
    response = client.post("/routes/reset")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.json()["msg"] == "Todos los datos fueron eliminados")
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/api/test_api.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/use_cases/test_use_cases.py ==========
import pytest

from assembly import (
    build_create_route_use_case,
    build_delete_route_use_case,
    build_filter_routes_use_case,
    build_get_all_routes_use_case,
    build_get_route_use_case,
    build_reset_routes_use_case,
)
from domain.use_cases.create_route_use_case import CreateRouteUseCase
from domain.use_cases.delete_route_use_case import DeleteRouteUseCase
from domain.use_cases.filter_route_use_case import FilterRouteUseCase
from domain.use_cases.get_all_route_use_case import GetAllRoutesUseCase
from domain.use_cases.get_route_use_case import GetRouteUseCase
from domain.use_cases.reset_db_use_case import ResetRoutesUseCase

def test_build_create_route_use_case():
    use_case = build_create_route_use_case()
    pytest.assume(isinstance(use_case, CreateRouteUseCase))

def test_build_get_route_use_case():
    use_case = build_get_route_use_case()
    pytest.assume(isinstance(use_case, GetRouteUseCase))

def test_build_delete_route_use_case():
    use_case = build_delete_route_use_case()
    pytest.assume(isinstance(use_case, DeleteRouteUseCase))

def test_build_get_all_routes_use_case():
    use_case = build_get_all_routes_use_case()
    pytest.assume(isinstance(use_case, GetAllRoutesUseCase))

def test_build_delete_all_routes_use_case():
    use_case = build_reset_routes_use_case()
    pytest.assume(isinstance(use_case, ResetRoutesUseCase))

def test_build_get_post_filter_use_case():
    use_case = build_filter_routes_use_case()
    pytest.assume(isinstance(use_case, FilterRouteUseCase))
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/routes_app/tests/unit/use_cases/test_use_cases.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/Dockerfile ==========
# Use Python 3.11 slim image as base
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==2.1.4

# Configure Poetry: Don't create virtual env, install deps to system python
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=0 \
    POETRY_CACHE_DIR=/tmp/poetry_cache \
    POETRY_VIRTUALENVS_CREATE=false

# Create non-root user for security
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid appuser --shell /bin/bash --create-home appuser

# Set work directory
WORKDIR /score_app

# Copy poetry files
COPY pyproject.toml ./
COPY poetry.lock ./

# Install dependencies
RUN poetry lock && \
    poetry install --only=main --no-root && \
    rm -rf $POETRY_CACHE_DIR

# Copy application code
COPY src/ ./src/

# Change ownership of the app directory to appuser
RUN chown -R appuser:appuser /score_app
# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

ENV PYTHONPATH=/score_app/src
# Run the application using poetry
CMD ["poetry", "run", "uvicorn", "entrypoints.api.main:app", "--host", "0.0.0.0", "--port", "8000"]========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/Dockerfile ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/README.md ==========
# posts_app

## Descripción
Aplicación para gestionar publicaciones, desarrollada en Python con FastAPI y PostgreSQL.

## Requisitos

- Python 3.11
- Poetry version 2.1.1
- Docker
- Postman (Opcional para pruebas API)
- Minikube (para despliegue en Kubernetes)
- kubectl (para gestionar Kubernetes)

## Estructura del Proyecto

```
.
├── src/
│   ├── domain/             # Capa de dominio
│   │   ├── models/         # Modelos de dominio
│   │   ├── ports/          # Puertos (interfaces)
│   │   └── use_cases/      # Casos de uso
│   ├── adapters/           # Capa de adaptadores
│   │   └── database/       # Adaptador de base de datos
│   └── entrypoints/        # Puntos de entrada
│       └── api/            # API REST
├── tests/                  # Pruebas
├── Dockerfile              # Configuración de Docker
├── pyproject.toml          # Configuración de Poetry
└── README.md               # Este archivo
```

## Variables de entorno
Crea un archivo `.env` con:
- `POSTGRES_HOST`
- `POSTGRES_USER`
- `POSTGRES_PASSWORD`
- `POSTGRES_DB`

## Instalación
```sh
poetry install
```

## Ejecuciòn Local
```sh
poetry run uvicorn entrypoints.api.main:app
```

## Pruebas
```sh
poetry run pytest --cov=src
```

### Despliegue en Kubernetes (Minukube)
1. **Inicia Minikube**
   ```sh
   minikube start
   ```

2. **(Opcional) Usa el Docker de Minikube**
   ```sh
   eval $(minikube docker-env)
   docker build -t posts-app:tag .
   ```

3. **Despliega los recursos**
    Asegúrate de estar en el directorio donde están los archivos (raiz/k8s) YAML y ejecuta:
   ```sh
   kubectl apply -f .
   ```

4. **Accede a la app desde tu navegador**
   ```sh
   minikube service posts-app-service
   ```

### Autor
- [Sebastian Betancourth Zapata](https://github.com/sebastian-blip)

========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/README.md ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/poetry.lock ==========
# This file is automatically @generated by Poetry 2.1.4 and should not be changed by hand.

[[package]]
name = "aerich"
version = "0.9.1"
description = "A database migrations tool for Tortoise ORM."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "aerich-0.9.1-py3-none-any.whl", hash = "sha256:6ff34a2104454d03f7473dc99e7ad51f405a909c261126a1b8a52d44ca7b4cbc"},
    {file = "aerich-0.9.1.tar.gz", hash = "sha256:629afbef5902635c41f410dd05def984c02e05e62d8a2020210a29a4aae19001"},
]

[package.dependencies]
asyncclick = ">=8.1.7,<9.0.0"
dictdiffer = ">=0.9.0,<1.0.0"
pydantic = ">=2.0.2,<2.1.0 || >2.1.0,<2.7.0 || >2.7.0,<3.0.0"
tortoise-orm = ">=0.24.0,<1.0.0"

[package.extras]
asyncmy = ["asyncmy (>=0.2.9) ; python_version < \"4.0\""]
asyncpg = ["asyncpg"]
mysql = ["aiomysql (>=0.2.0)"]
psycopg = ["psycopg[binary,pool] (>=3.0.12,<4.0.0)"]
toml = ["tomli-w (>=1.1.0,<2.0.0) ; python_version >= \"3.11\"", "tomlkit (>=0.11.4,<1.0.0) ; python_version < \"3.11\""]

[[package]]
name = "aiosqlite"
version = "0.21.0"
description = "asyncio bridge to the standard sqlite3 module"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "aiosqlite-0.21.0-py3-none-any.whl", hash = "sha256:2549cf4057f95f53dcba16f2b64e8e2791d7e1adedb13197dd8ed77bb226d7d0"},
    {file = "aiosqlite-0.21.0.tar.gz", hash = "sha256:131bb8056daa3bc875608c631c678cda73922a2d4ba8aec373b19f18c17e7aa3"},
]

[package.dependencies]
typing_extensions = ">=4.0"

[package.extras]
dev = ["attribution (==1.7.1)", "black (==24.3.0)", "build (>=1.2)", "coverage[toml] (==7.6.10)", "flake8 (==7.0.0)", "flake8-bugbear (==24.12.12)", "flit (==3.10.1)", "mypy (==1.14.1)", "ufmt (==2.5.1)", "usort (==1.0.8.post1)"]
docs = ["sphinx (==8.1.3)", "sphinx-mdinclude (==0.6.1)"]

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "annotated_types-0.7.0-py3-none-any.whl", hash = "sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53"},
    {file = "annotated_types-0.7.0.tar.gz", hash = "sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89"},
]

[[package]]
name = "anyio"
version = "4.10.0"
description = "High-level concurrency and networking framework on top of asyncio or Trio"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "anyio-4.10.0-py3-none-any.whl", hash = "sha256:60e474ac86736bbfd6f210f7a61218939c318f43f9972497381f1c5e930ed3d1"},
    {file = "anyio-4.10.0.tar.gz", hash = "sha256:3f3fae35c96039744587aa5b8371e7e8e603c0702999535961dd336026973ba6"},
]

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
trio = ["trio (>=0.26.1)"]

[[package]]
name = "asyncclick"
version = "8.2.2.2"
description = "Composable command line interface toolkit, async fork"
optional = false
python-versions = ">=3.11"
groups = ["dev"]
files = [
    {file = "asyncclick-8.2.2.2-py3-none-any.whl", hash = "sha256:ee500f57923e2588d624227d80b568546325a758b902a89519913926454187d9"},
    {file = "asyncclick-8.2.2.2.tar.gz", hash = "sha256:014f6b7bfb1ef34a2215bc36aebd5150d5d2e50668b12eceb749961e32c24660"},
]

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "asyncpg"
version = "0.30.0"
description = "An asyncio PostgreSQL driver"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:bfb4dd5ae0699bad2b233672c8fc5ccbd9ad24b89afded02341786887e37927e"},
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:dc1f62c792752a49f88b7e6f774c26077091b44caceb1983509edc18a2222ec0"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3152fef2e265c9c24eec4ee3d22b4f4d2703d30614b0b6753e9ed4115c8a146f"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c7255812ac85099a0e1ffb81b10dc477b9973345793776b128a23e60148dd1af"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:578445f09f45d1ad7abddbff2a3c7f7c291738fdae0abffbeb737d3fc3ab8b75"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:c42f6bb65a277ce4d93f3fba46b91a265631c8df7250592dd4f11f8b0152150f"},
    {file = "asyncpg-0.30.0-cp310-cp310-win32.whl", hash = "sha256:aa403147d3e07a267ada2ae34dfc9324e67ccc4cdca35261c8c22792ba2b10cf"},
    {file = "asyncpg-0.30.0-cp310-cp310-win_amd64.whl", hash = "sha256:fb622c94db4e13137c4c7f98834185049cc50ee01d8f657ef898b6407c7b9c50"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:5e0511ad3dec5f6b4f7a9e063591d407eee66b88c14e2ea636f187da1dcfff6a"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:915aeb9f79316b43c3207363af12d0e6fd10776641a7de8a01212afd95bdf0ed"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1c198a00cce9506fcd0bf219a799f38ac7a237745e1d27f0e1f66d3707c84a5a"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3326e6d7381799e9735ca2ec9fd7be4d5fef5dcbc3cb555d8a463d8460607956"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:51da377487e249e35bd0859661f6ee2b81db11ad1f4fc036194bc9cb2ead5056"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:bc6d84136f9c4d24d358f3b02be4b6ba358abd09f80737d1ac7c444f36108454"},
    {file = "asyncpg-0.30.0-cp311-cp311-win32.whl", hash = "sha256:574156480df14f64c2d76450a3f3aaaf26105869cad3865041156b38459e935d"},
    {file = "asyncpg-0.30.0-cp311-cp311-win_amd64.whl", hash = "sha256:3356637f0bd830407b5597317b3cb3571387ae52ddc3bca6233682be88bbbc1f"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:c902a60b52e506d38d7e80e0dd5399f657220f24635fee368117b8b5fce1142e"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:aca1548e43bbb9f0f627a04666fedaca23db0a31a84136ad1f868cb15deb6e3a"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6c2a2ef565400234a633da0eafdce27e843836256d40705d83ab7ec42074efb3"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1292b84ee06ac8a2ad8e51c7475aa309245874b61333d97411aab835c4a2f737"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:0f5712350388d0cd0615caec629ad53c81e506b1abaaf8d14c93f54b35e3595a"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:db9891e2d76e6f425746c5d2da01921e9a16b5a71a1c905b13f30e12a257c4af"},
    {file = "asyncpg-0.30.0-cp312-cp312-win32.whl", hash = "sha256:68d71a1be3d83d0570049cd1654a9bdfe506e794ecc98ad0873304a9f35e411e"},
    {file = "asyncpg-0.30.0-cp312-cp312-win_amd64.whl", hash = "sha256:9a0292c6af5c500523949155ec17b7fe01a00ace33b68a476d6b5059f9630305"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:05b185ebb8083c8568ea8a40e896d5f7af4b8554b64d7719c0eaa1eb5a5c3a70"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:c47806b1a8cbb0a0db896f4cd34d89942effe353a5035c62734ab13b9f938da3"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9b6fde867a74e8c76c71e2f64f80c64c0f3163e687f1763cfaf21633ec24ec33"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:46973045b567972128a27d40001124fbc821c87a6cade040cfcd4fa8a30bcdc4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:9110df111cabc2ed81aad2f35394a00cadf4f2e0635603db6ebbd0fc896f46a4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:04ff0785ae7eed6cc138e73fc67b8e51d54ee7a3ce9b63666ce55a0bf095f7ba"},
    {file = "asyncpg-0.30.0-cp313-cp313-win32.whl", hash = "sha256:ae374585f51c2b444510cdf3595b97ece4f233fde739aa14b50e0d64e8a7a590"},
    {file = "asyncpg-0.30.0-cp313-cp313-win_amd64.whl", hash = "sha256:f59b430b8e27557c3fb9869222559f7417ced18688375825f8f12302c34e915e"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:29ff1fc8b5bf724273782ff8b4f57b0f8220a1b2324184846b39d1ab4122031d"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:64e899bce0600871b55368b8483e5e3e7f1860c9482e7f12e0a771e747988168"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5b290f4726a887f75dcd1b3006f484252db37602313f806e9ffc4e5996cfe5cb"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f86b0e2cd3f1249d6fe6fd6cfe0cd4538ba994e2d8249c0491925629b9104d0f"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:393af4e3214c8fa4c7b86da6364384c0d1b3298d45803375572f415b6f673f38"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:fd4406d09208d5b4a14db9a9dbb311b6d7aeeab57bded7ed2f8ea41aeef39b34"},
    {file = "asyncpg-0.30.0-cp38-cp38-win32.whl", hash = "sha256:0b448f0150e1c3b96cb0438a0d0aa4871f1472e58de14a3ec320dbb2798fb0d4"},
    {file = "asyncpg-0.30.0-cp38-cp38-win_amd64.whl", hash = "sha256:f23b836dd90bea21104f69547923a02b167d999ce053f3d502081acea2fba15b"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6f4e83f067b35ab5e6371f8a4c93296e0439857b4569850b178a01385e82e9ad"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:5df69d55add4efcd25ea2a3b02025b669a285b767bfbf06e356d68dbce4234ff"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a3479a0d9a852c7c84e822c073622baca862d1217b10a02dd57ee4a7a081f708"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:26683d3b9a62836fad771a18ecf4659a30f348a561279d6227dab96182f46144"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:1b982daf2441a0ed314bd10817f1606f1c28b1136abd9e4f11335358c2c631cb"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:1c06a3a50d014b303e5f6fc1e5f95eb28d2cee89cf58384b700da621e5d5e547"},
    {file = "asyncpg-0.30.0-cp39-cp39-win32.whl", hash = "sha256:1b11a555a198b08f5c4baa8f8231c74a366d190755aa4f99aacec5970afe929a"},
    {file = "asyncpg-0.30.0-cp39-cp39-win_amd64.whl", hash = "sha256:8b684a3c858a83cd876f05958823b68e8d14ec01bb0c0d14a6704c5bf9711773"},
    {file = "asyncpg-0.30.0.tar.gz", hash = "sha256:c551e9928ab6707602f44811817f82ba3c446e018bfe1d3abecc8ba5f3eac851"},
]

[package.extras]
docs = ["Sphinx (>=8.1.3,<8.2.0)", "sphinx-rtd-theme (>=1.2.2)"]
gssauth = ["gssapi ; platform_system != \"Windows\"", "sspilib ; platform_system == \"Windows\""]
test = ["distro (>=1.9.0,<1.10.0)", "flake8 (>=6.1,<7.0)", "flake8-pyi (>=24.1.0,<24.2.0)", "gssapi ; platform_system == \"Linux\"", "k5test ; platform_system == \"Linux\"", "mypy (>=1.8.0,<1.9.0)", "sspilib ; platform_system == \"Windows\"", "uvloop (>=0.15.3) ; platform_system != \"Windows\" and python_version < \"3.14.0\""]

[[package]]
name = "bandit"
version = "1.8.6"
description = "Security oriented static analyser for python code."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "bandit-1.8.6-py3-none-any.whl", hash = "sha256:3348e934d736fcdb68b6aa4030487097e23a501adf3e7827b63658df464dddd0"},
    {file = "bandit-1.8.6.tar.gz", hash = "sha256:dbfe9c25fc6961c2078593de55fd19f2559f9e45b99f1272341f5b95dea4e56b"},
]

[package.dependencies]
colorama = {version = ">=0.3.9", markers = "platform_system == \"Windows\""}
PyYAML = ">=5.3.1"
rich = "*"
stevedore = ">=1.20.0"

[package.extras]
baseline = ["GitPython (>=3.1.30)"]
sarif = ["jschema-to-python (>=1.2.3)", "sarif-om (>=1.0.4)"]
test = ["beautifulsoup4 (>=4.8.0)", "coverage (>=4.5.4)", "fixtures (>=3.0.0)", "flake8 (>=4.0.0)", "pylint (==1.9.4)", "stestr (>=2.5.0)", "testscenarios (>=0.5.0)", "testtools (>=2.3.0)"]
toml = ["tomli (>=1.1.0) ; python_version < \"3.11\""]
yaml = ["PyYAML"]

[[package]]
name = "black"
version = "25.1.0"
description = "The uncompromising code formatter."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "black-25.1.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:759e7ec1e050a15f89b770cefbf91ebee8917aac5c20483bc2d80a6c3a04df32"},
    {file = "black-25.1.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e519ecf93120f34243e6b0054db49c00a35f84f195d5bce7e9f5cfc578fc2da"},
    {file = "black-25.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:055e59b198df7ac0b7efca5ad7ff2516bca343276c466be72eb04a3bcc1f82d7"},
    {file = "black-25.1.0-cp310-cp310-win_amd64.whl", hash = "sha256:db8ea9917d6f8fc62abd90d944920d95e73c83a5ee3383493e35d271aca872e9"},
    {file = "black-25.1.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:a39337598244de4bae26475f77dda852ea00a93bd4c728e09eacd827ec929df0"},
    {file = "black-25.1.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:96c1c7cd856bba8e20094e36e0f948718dc688dba4a9d78c3adde52b9e6c2299"},
    {file = "black-25.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:bce2e264d59c91e52d8000d507eb20a9aca4a778731a08cfff7e5ac4a4bb7096"},
    {file = "black-25.1.0-cp311-cp311-win_amd64.whl", hash = "sha256:172b1dbff09f86ce6f4eb8edf9dede08b1fce58ba194c87d7a4f1a5aa2f5b3c2"},
    {file = "black-25.1.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:4b60580e829091e6f9238c848ea6750efed72140b91b048770b64e74fe04908b"},
    {file = "black-25.1.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:1e2978f6df243b155ef5fa7e558a43037c3079093ed5d10fd84c43900f2d8ecc"},
    {file = "black-25.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:3b48735872ec535027d979e8dcb20bf4f70b5ac75a8ea99f127c106a7d7aba9f"},
    {file = "black-25.1.0-cp312-cp312-win_amd64.whl", hash = "sha256:ea0213189960bda9cf99be5b8c8ce66bb054af5e9e861249cd23471bd7b0b3ba"},
    {file = "black-25.1.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:8f0b18a02996a836cc9c9c78e5babec10930862827b1b724ddfe98ccf2f2fe4f"},
    {file = "black-25.1.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:afebb7098bfbc70037a053b91ae8437c3857482d3a690fefc03e9ff7aa9a5fd3"},
    {file = "black-25.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:030b9759066a4ee5e5aca28c3c77f9c64789cdd4de8ac1df642c40b708be6171"},
    {file = "black-25.1.0-cp313-cp313-win_amd64.whl", hash = "sha256:a22f402b410566e2d1c950708c77ebf5ebd5d0d88a6a2e87c86d9fb48afa0d18"},
    {file = "black-25.1.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:a1ee0a0c330f7b5130ce0caed9936a904793576ef4d2b98c40835d6a65afa6a0"},
    {file = "black-25.1.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:f3df5f1bf91d36002b0a75389ca8663510cf0531cca8aa5c1ef695b46d98655f"},
    {file = "black-25.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:d9e6827d563a2c820772b32ce8a42828dc6790f095f441beef18f96aa6f8294e"},
    {file = "black-25.1.0-cp39-cp39-win_amd64.whl", hash = "sha256:bacabb307dca5ebaf9c118d2d2f6903da0d62c9faa82bd21a33eecc319559355"},
    {file = "black-25.1.0-py3-none-any.whl", hash = "sha256:95e8176dae143ba9097f351d174fdaf0ccd29efb414b362ae3fd72bf0f710717"},
    {file = "black-25.1.0.tar.gz", hash = "sha256:33496d5cd1222ad73391352b4ae8da15253c5de89b93a80b3e2c8d9a19ec2666"},
]

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
packaging = ">=22.0"
pathspec = ">=0.9.0"
platformdirs = ">=2"

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.10)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "certifi"
version = "2025.8.3"
description = "Python package for providing Mozilla's CA Bundle."
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "certifi-2025.8.3-py3-none-any.whl", hash = "sha256:f6c12493cfb1b06ba2ff328595af9350c65d6644968e5d3a2ffd78699af217a5"},
    {file = "certifi-2025.8.3.tar.gz", hash = "sha256:e564105f78ded564e3ae7c923924435e1daa7463faeab5bb932bc53ffae63407"},
]

[[package]]
name = "click"
version = "8.2.1"
description = "Composable command line interface toolkit"
optional = false
python-versions = ">=3.10"
groups = ["main"]
files = [
    {file = "click-8.2.1-py3-none-any.whl", hash = "sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b"},
    {file = "click-8.2.1.tar.gz", hash = "sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202"},
]

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"
groups = ["main", "dev"]
files = [
    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},
    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},
]
markers = {main = "platform_system == \"Windows\" or sys_platform == \"win32\"", dev = "sys_platform == \"win32\" or platform_system == \"Windows\""}

[[package]]
name = "coverage"
version = "7.10.4"
description = "Code coverage measurement for Python"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "coverage-7.10.4-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:d92d6edb0ccafd20c6fbf9891ca720b39c2a6a4b4a6f9cf323ca2c986f33e475"},
    {file = "coverage-7.10.4-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:7202da14dc0236884fcc45665ffb2d79d4991a53fbdf152ab22f69f70923cc22"},
    {file = "coverage-7.10.4-cp310-cp310-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:ada418633ae24ec8d0fcad5efe6fc7aa3c62497c6ed86589e57844ad04365674"},
    {file = "coverage-7.10.4-cp310-cp310-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:b828e33eca6c3322adda3b5884456f98c435182a44917ded05005adfa1415500"},
    {file = "coverage-7.10.4-cp310-cp310-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:802793ba397afcfdbe9f91f89d65ae88b958d95edc8caf948e1f47d8b6b2b606"},
    {file = "coverage-7.10.4-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:d0b23512338c54101d3bf7a1ab107d9d75abda1d5f69bc0887fd079253e4c27e"},
    {file = "coverage-7.10.4-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:f36b7dcf72d06a8c5e2dd3aca02be2b1b5db5f86404627dff834396efce958f2"},
    {file = "coverage-7.10.4-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:fce316c367a1dc2c411821365592eeb335ff1781956d87a0410eae248188ba51"},
    {file = "coverage-7.10.4-cp310-cp310-win32.whl", hash = "sha256:8c5dab29fc8070b3766b5fc85f8d89b19634584429a2da6d42da5edfadaf32ae"},
    {file = "coverage-7.10.4-cp310-cp310-win_amd64.whl", hash = "sha256:4b0d114616f0fccb529a1817457d5fb52a10e106f86c5fb3b0bd0d45d0d69b93"},
    {file = "coverage-7.10.4-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:05d5f98ec893d4a2abc8bc5f046f2f4367404e7e5d5d18b83de8fde1093ebc4f"},
    {file = "coverage-7.10.4-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:9267efd28f8994b750d171e58e481e3bbd69e44baed540e4c789f8e368b24b88"},
    {file = "coverage-7.10.4-cp311-cp311-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:4456a039fdc1a89ea60823d0330f1ac6f97b0dbe9e2b6fb4873e889584b085fb"},
    {file = "coverage-7.10.4-cp311-cp311-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:c2bfbd2a9f7e68a21c5bd191be94bfdb2691ac40d325bac9ef3ae45ff5c753d9"},
    {file = "coverage-7.10.4-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:0ab7765f10ae1df7e7fe37de9e64b5a269b812ee22e2da3f84f97b1c7732a0d8"},
    {file = "coverage-7.10.4-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:0a09b13695166236e171ec1627ff8434b9a9bae47528d0ba9d944c912d33b3d2"},
    {file = "coverage-7.10.4-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:5c9e75dfdc0167d5675e9804f04a56b2cf47fb83a524654297000b578b8adcb7"},
    {file = "coverage-7.10.4-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:c751261bfe6481caba15ec005a194cb60aad06f29235a74c24f18546d8377df0"},
    {file = "coverage-7.10.4-cp311-cp311-win32.whl", hash = "sha256:051c7c9e765f003c2ff6e8c81ccea28a70fb5b0142671e4e3ede7cebd45c80af"},
    {file = "coverage-7.10.4-cp311-cp311-win_amd64.whl", hash = "sha256:1a647b152f10be08fb771ae4a1421dbff66141e3d8ab27d543b5eb9ea5af8e52"},
    {file = "coverage-7.10.4-cp311-cp311-win_arm64.whl", hash = "sha256:b09b9e4e1de0d406ca9f19a371c2beefe3193b542f64a6dd40cfcf435b7d6aa0"},
    {file = "coverage-7.10.4-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:a1f0264abcabd4853d4cb9b3d164adbf1565da7dab1da1669e93f3ea60162d79"},
    {file = "coverage-7.10.4-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:536cbe6b118a4df231b11af3e0f974a72a095182ff8ec5f4868c931e8043ef3e"},
    {file = "coverage-7.10.4-cp312-cp312-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:9a4c0d84134797b7bf3f080599d0cd501471f6c98b715405166860d79cfaa97e"},
    {file = "coverage-7.10.4-cp312-cp312-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:7c155fc0f9cee8c9803ea0ad153ab6a3b956baa5d4cd993405dc0b45b2a0b9e0"},
    {file = "coverage-7.10.4-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:0a5f2ab6e451d4b07855d8bcf063adf11e199bff421a4ba57f5bb95b7444ca62"},
    {file = "coverage-7.10.4-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:685b67d99b945b0c221be0780c336b303a7753b3e0ec0d618c795aada25d5e7a"},
    {file = "coverage-7.10.4-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:0c079027e50c2ae44da51c2e294596cbc9dbb58f7ca45b30651c7e411060fc23"},
    {file = "coverage-7.10.4-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:3749aa72b93ce516f77cf5034d8e3c0dfd45c6e8a163a602ede2dc5f9a0bb927"},
    {file = "coverage-7.10.4-cp312-cp312-win32.whl", hash = "sha256:fecb97b3a52fa9bcd5a7375e72fae209088faf671d39fae67261f37772d5559a"},
    {file = "coverage-7.10.4-cp312-cp312-win_amd64.whl", hash = "sha256:26de58f355626628a21fe6a70e1e1fad95702dafebfb0685280962ae1449f17b"},
    {file = "coverage-7.10.4-cp312-cp312-win_arm64.whl", hash = "sha256:67e8885408f8325198862bc487038a4980c9277d753cb8812510927f2176437a"},
    {file = "coverage-7.10.4-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:2b8e1d2015d5dfdbf964ecef12944c0c8c55b885bb5c0467ae8ef55e0e151233"},
    {file = "coverage-7.10.4-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:25735c299439018d66eb2dccf54f625aceb78645687a05f9f848f6e6c751e169"},
    {file = "coverage-7.10.4-cp313-cp313-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:715c06cb5eceac4d9b7cdf783ce04aa495f6aff657543fea75c30215b28ddb74"},
    {file = "coverage-7.10.4-cp313-cp313-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:e017ac69fac9aacd7df6dc464c05833e834dc5b00c914d7af9a5249fcccf07ef"},
    {file = "coverage-7.10.4-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:bad180cc40b3fccb0f0e8c702d781492654ac2580d468e3ffc8065e38c6c2408"},
    {file = "coverage-7.10.4-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:becbdcd14f685fada010a5f792bf0895675ecf7481304fe159f0cd3f289550bd"},
    {file = "coverage-7.10.4-cp313-cp313-musllinux_1_2_i686.whl", hash = "sha256:0b485ca21e16a76f68060911f97ebbe3e0d891da1dbbce6af7ca1ab3f98b9097"},
    {file = "coverage-7.10.4-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:6c1d098ccfe8e1e0a1ed9a0249138899948afd2978cbf48eb1cc3fcd38469690"},
    {file = "coverage-7.10.4-cp313-cp313-win32.whl", hash = "sha256:8630f8af2ca84b5c367c3df907b1706621abe06d6929f5045fd628968d421e6e"},
    {file = "coverage-7.10.4-cp313-cp313-win_amd64.whl", hash = "sha256:f68835d31c421736be367d32f179e14ca932978293fe1b4c7a6a49b555dff5b2"},
    {file = "coverage-7.10.4-cp313-cp313-win_arm64.whl", hash = "sha256:6eaa61ff6724ca7ebc5326d1fae062d85e19b38dd922d50903702e6078370ae7"},
    {file = "coverage-7.10.4-cp313-cp313t-macosx_10_13_x86_64.whl", hash = "sha256:702978108876bfb3d997604930b05fe769462cc3000150b0e607b7b444f2fd84"},
    {file = "coverage-7.10.4-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:e8f978e8c5521d9c8f2086ac60d931d583fab0a16f382f6eb89453fe998e2484"},
    {file = "coverage-7.10.4-cp313-cp313t-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:df0ac2ccfd19351411c45e43ab60932b74472e4648b0a9edf6a3b58846e246a9"},
    {file = "coverage-7.10.4-cp313-cp313t-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:73a0d1aaaa3796179f336448e1576a3de6fc95ff4f07c2d7251d4caf5d18cf8d"},
    {file = "coverage-7.10.4-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:873da6d0ed6b3ffc0bc01f2c7e3ad7e2023751c0d8d86c26fe7322c314b031dc"},
    {file = "coverage-7.10.4-cp313-cp313t-musllinux_1_2_aarch64.whl", hash = "sha256:c6446c75b0e7dda5daa876a1c87b480b2b52affb972fedd6c22edf1aaf2e00ec"},
    {file = "coverage-7.10.4-cp313-cp313t-musllinux_1_2_i686.whl", hash = "sha256:6e73933e296634e520390c44758d553d3b573b321608118363e52113790633b9"},
    {file = "coverage-7.10.4-cp313-cp313t-musllinux_1_2_x86_64.whl", hash = "sha256:52073d4b08d2cb571234c8a71eb32af3c6923149cf644a51d5957ac128cf6aa4"},
    {file = "coverage-7.10.4-cp313-cp313t-win32.whl", hash = "sha256:e24afb178f21f9ceb1aefbc73eb524769aa9b504a42b26857243f881af56880c"},
    {file = "coverage-7.10.4-cp313-cp313t-win_amd64.whl", hash = "sha256:be04507ff1ad206f4be3d156a674e3fb84bbb751ea1b23b142979ac9eebaa15f"},
    {file = "coverage-7.10.4-cp313-cp313t-win_arm64.whl", hash = "sha256:f3e3ff3f69d02b5dad67a6eac68cc9c71ae343b6328aae96e914f9f2f23a22e2"},
    {file = "coverage-7.10.4-cp314-cp314-macosx_10_13_x86_64.whl", hash = "sha256:a59fe0af7dd7211ba595cf7e2867458381f7e5d7b4cffe46274e0b2f5b9f4eb4"},
    {file = "coverage-7.10.4-cp314-cp314-macosx_11_0_arm64.whl", hash = "sha256:3a6c35c5b70f569ee38dc3350cd14fdd0347a8b389a18bb37538cc43e6f730e6"},
    {file = "coverage-7.10.4-cp314-cp314-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:acb7baf49f513554c4af6ef8e2bd6e8ac74e6ea0c7386df8b3eb586d82ccccc4"},
    {file = "coverage-7.10.4-cp314-cp314-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:a89afecec1ed12ac13ed203238b560cbfad3522bae37d91c102e690b8b1dc46c"},
    {file = "coverage-7.10.4-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:480442727f464407d8ade6e677b7f21f3b96a9838ab541b9a28ce9e44123c14e"},
    {file = "coverage-7.10.4-cp314-cp314-musllinux_1_2_aarch64.whl", hash = "sha256:a89bf193707f4a17f1ed461504031074d87f035153239f16ce86dfb8f8c7ac76"},
    {file = "coverage-7.10.4-cp314-cp314-musllinux_1_2_i686.whl", hash = "sha256:3ddd912c2fc440f0fb3229e764feec85669d5d80a988ff1b336a27d73f63c818"},
    {file = "coverage-7.10.4-cp314-cp314-musllinux_1_2_x86_64.whl", hash = "sha256:8a538944ee3a42265e61c7298aeba9ea43f31c01271cf028f437a7b4075592cf"},
    {file = "coverage-7.10.4-cp314-cp314-win32.whl", hash = "sha256:fd2e6002be1c62476eb862b8514b1ba7e7684c50165f2a8d389e77da6c9a2ebd"},
    {file = "coverage-7.10.4-cp314-cp314-win_amd64.whl", hash = "sha256:ec113277f2b5cf188d95fb66a65c7431f2b9192ee7e6ec9b72b30bbfb53c244a"},
    {file = "coverage-7.10.4-cp314-cp314-win_arm64.whl", hash = "sha256:9744954bfd387796c6a091b50d55ca7cac3d08767795b5eec69ad0f7dbf12d38"},
    {file = "coverage-7.10.4-cp314-cp314t-macosx_10_13_x86_64.whl", hash = "sha256:5af4829904dda6aabb54a23879f0f4412094ba9ef153aaa464e3c1b1c9bc98e6"},
    {file = "coverage-7.10.4-cp314-cp314t-macosx_11_0_arm64.whl", hash = "sha256:7bba5ed85e034831fac761ae506c0644d24fd5594727e174b5a73aff343a7508"},
    {file = "coverage-7.10.4-cp314-cp314t-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:d57d555b0719834b55ad35045de6cc80fc2b28e05adb6b03c98479f9553b387f"},
    {file = "coverage-7.10.4-cp314-cp314t-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:ba62c51a72048bb1ea72db265e6bd8beaabf9809cd2125bbb5306c6ce105f214"},
    {file = "coverage-7.10.4-cp314-cp314t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:0acf0c62a6095f07e9db4ec365cc58c0ef5babb757e54745a1aa2ea2a2564af1"},
    {file = "coverage-7.10.4-cp314-cp314t-musllinux_1_2_aarch64.whl", hash = "sha256:e1033bf0f763f5cf49ffe6594314b11027dcc1073ac590b415ea93463466deec"},
    {file = "coverage-7.10.4-cp314-cp314t-musllinux_1_2_i686.whl", hash = "sha256:92c29eff894832b6a40da1789b1f252305af921750b03ee4535919db9179453d"},
    {file = "coverage-7.10.4-cp314-cp314t-musllinux_1_2_x86_64.whl", hash = "sha256:822c4c830989c2093527e92acd97be4638a44eb042b1bdc0e7a278d84a070bd3"},
    {file = "coverage-7.10.4-cp314-cp314t-win32.whl", hash = "sha256:e694d855dac2e7cf194ba33653e4ba7aad7267a802a7b3fc4347d0517d5d65cd"},
    {file = "coverage-7.10.4-cp314-cp314t-win_amd64.whl", hash = "sha256:efcc54b38ef7d5bfa98050f220b415bc5bb3d432bd6350a861cf6da0ede2cdcd"},
    {file = "coverage-7.10.4-cp314-cp314t-win_arm64.whl", hash = "sha256:6f3a3496c0fa26bfac4ebc458747b778cff201c8ae94fa05e1391bab0dbc473c"},
    {file = "coverage-7.10.4-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:48fd4d52600c2a9d5622e52dfae674a7845c5e1dceaf68b88c99feb511fbcfd6"},
    {file = "coverage-7.10.4-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:56217b470d09d69e6b7dcae38200f95e389a77db801cb129101697a4553b18b6"},
    {file = "coverage-7.10.4-cp39-cp39-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:44ac3f21a6e28c5ff7f7a47bca5f87885f6a1e623e637899125ba47acd87334d"},
    {file = "coverage-7.10.4-cp39-cp39-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:3387739d72c84d17b4d2f7348749cac2e6700e7152026912b60998ee9a40066b"},
    {file = "coverage-7.10.4-cp39-cp39-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:3f111ff20d9a6348e0125be892608e33408dd268f73b020940dfa8511ad05503"},
    {file = "coverage-7.10.4-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:01a852f0a9859734b018a3f483cc962d0b381d48d350b1a0c47d618c73a0c398"},
    {file = "coverage-7.10.4-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:225111dd06759ba4e37cee4c0b4f3df2b15c879e9e3c37bf986389300b9917c3"},
    {file = "coverage-7.10.4-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:2178d4183bd1ba608f0bb12e71e55838ba1b7dbb730264f8b08de9f8ef0c27d0"},
    {file = "coverage-7.10.4-cp39-cp39-win32.whl", hash = "sha256:93d175fe81913aee7a6ea430abbdf2a79f1d9fd451610e12e334e4fe3264f563"},
    {file = "coverage-7.10.4-cp39-cp39-win_amd64.whl", hash = "sha256:2221a823404bb941c7721cf0ef55ac6ee5c25d905beb60c0bba5e5e85415d353"},
    {file = "coverage-7.10.4-py3-none-any.whl", hash = "sha256:065d75447228d05121e5c938ca8f0e91eed60a1eb2d1258d42d5084fecfc3302"},
    {file = "coverage-7.10.4.tar.gz", hash = "sha256:25f5130af6c8e7297fd14634955ba9e1697f47143f289e2a23284177c0061d27"},
]

[package.extras]
toml = ["tomli ; python_full_version <= \"3.11.0a6\""]

[[package]]
name = "dictdiffer"
version = "0.9.0"
description = "Dictdiffer is a library that helps you to diff and patch dictionaries."
optional = false
python-versions = "*"
groups = ["dev"]
files = [
    {file = "dictdiffer-0.9.0-py2.py3-none-any.whl", hash = "sha256:442bfc693cfcadaf46674575d2eba1c53b42f5e404218ca2c2ff549f2df56595"},
    {file = "dictdiffer-0.9.0.tar.gz", hash = "sha256:17bacf5fbfe613ccf1b6d512bd766e6b21fb798822a133aa86098b8ac9997578"},
]

[package.extras]
all = ["Sphinx (>=3)", "check-manifest (>=0.42)", "mock (>=1.3.0)", "numpy (>=1.13.0) ; python_version < \"3.7\"", "numpy (>=1.15.0) ; python_version < \"3.8\"", "numpy (>=1.18.0) ; python_version < \"3.9\"", "numpy (>=1.20.0) ; python_version >= \"3.9\"", "pytest (==5.4.3) ; python_version <= \"3.5\"", "pytest (>=6) ; python_version > \"3.5\"", "pytest-cov (>=2.10.1)", "pytest-isort (>=1.2.0)", "pytest-pycodestyle (>=2) ; python_version <= \"3.5\"", "pytest-pycodestyle (>=2.2.0) ; python_version > \"3.5\"", "pytest-pydocstyle (>=2) ; python_version <= \"3.5\"", "pytest-pydocstyle (>=2.2.0) ; python_version > \"3.5\"", "sphinx (>=3)", "sphinx-rtd-theme (>=0.2)", "tox (>=3.7.0)"]
docs = ["Sphinx (>=3)", "sphinx-rtd-theme (>=0.2)"]
numpy = ["numpy (>=1.13.0) ; python_version < \"3.7\"", "numpy (>=1.15.0) ; python_version < \"3.8\"", "numpy (>=1.18.0) ; python_version < \"3.9\"", "numpy (>=1.20.0) ; python_version >= \"3.9\""]
tests = ["check-manifest (>=0.42)", "mock (>=1.3.0)", "pytest (==5.4.3) ; python_version <= \"3.5\"", "pytest (>=6) ; python_version > \"3.5\"", "pytest-cov (>=2.10.1)", "pytest-isort (>=1.2.0)", "pytest-pycodestyle (>=2) ; python_version <= \"3.5\"", "pytest-pycodestyle (>=2.2.0) ; python_version > \"3.5\"", "pytest-pydocstyle (>=2) ; python_version <= \"3.5\"", "pytest-pydocstyle (>=2.2.0) ; python_version > \"3.5\"", "sphinx (>=3)", "tox (>=3.7.0)"]

[[package]]
name = "fastapi"
version = "0.116.1"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "fastapi-0.116.1-py3-none-any.whl", hash = "sha256:c46ac7c312df840f0c9e220f7964bada936781bc4e2e6eb71f1c4d7553786565"},
    {file = "fastapi-0.116.1.tar.gz", hash = "sha256:ed52cbf946abfd70c5a0dccb24673f0670deeb517a88b3544d03c2a6bf283143"},
]

[package.dependencies]
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0 || >2.0.0,<2.0.1 || >2.0.1,<2.1.0 || >2.1.0,<3.0.0"
starlette = ">=0.40.0,<0.48.0"
typing-extensions = ">=4.8.0"

[package.extras]
all = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.8)", "httpx (>=0.23.0)", "itsdangerous (>=1.1.0)", "jinja2 (>=3.1.5)", "orjson (>=3.2.1)", "pydantic-extra-types (>=2.0.0)", "pydantic-settings (>=2.0.0)", "python-multipart (>=0.0.18)", "pyyaml (>=5.3.1)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)", "uvicorn[standard] (>=0.12.0)"]
standard = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.8)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]
standard-no-fastapi-cloud-cli = ["email-validator (>=2.0.0)", "fastapi-cli[standard-no-fastapi-cloud-cli] (>=0.0.8)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]

[[package]]
name = "h11"
version = "0.16.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "h11-0.16.0-py3-none-any.whl", hash = "sha256:63cf8bbe7522de3bf65932fda1d9c2772064ffb3dae62d55932da54b31cb6c86"},
    {file = "h11-0.16.0.tar.gz", hash = "sha256:4e35b956cf45792e4caa5885e69fba00bdbc6ffafbfa020300e549b208ee5ff1"},
]

[[package]]
name = "httpcore"
version = "1.0.9"
description = "A minimal low-level HTTP client."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "httpcore-1.0.9-py3-none-any.whl", hash = "sha256:2d400746a40668fc9dec9810239072b40b4484b640a8c38fd654a024c7a1bf55"},
    {file = "httpcore-1.0.9.tar.gz", hash = "sha256:6e34463af53fd2ab5d807f399a9b45ea31c3dfa2276f15a2c3f00afff6e176e8"},
]

[package.dependencies]
certifi = "*"
h11 = ">=0.16"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (==1.*)"]
trio = ["trio (>=0.22.0,<1.0)"]

[[package]]
name = "httpx"
version = "0.28.1"
description = "The next generation HTTP client."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "httpx-0.28.1-py3-none-any.whl", hash = "sha256:d909fcccc110f8c7faf814ca82a9a4d816bc5a6dbfea25d6591d6985b8ba59ad"},
    {file = "httpx-0.28.1.tar.gz", hash = "sha256:75e98c5f16b0f35b567856f597f06ff2270a374470a5c2392242528e3e3e42fc"},
]

[package.dependencies]
anyio = "*"
certifi = "*"
httpcore = "==1.*"
idna = "*"

[package.extras]
brotli = ["brotli ; platform_python_implementation == \"CPython\"", "brotlicffi ; platform_python_implementation != \"CPython\""]
cli = ["click (==8.*)", "pygments (==2.*)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (==1.*)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
optional = false
python-versions = ">=3.6"
groups = ["main"]
files = [
    {file = "idna-3.10-py3-none-any.whl", hash = "sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3"},
    {file = "idna-3.10.tar.gz", hash = "sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9"},
]

[package.extras]
all = ["flake8 (>=7.1.1)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "ruff (>=0.6.2)"]

[[package]]
name = "iniconfig"
version = "2.1.0"
description = "brain-dead simple config-ini parsing"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "iniconfig-2.1.0-py3-none-any.whl", hash = "sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760"},
    {file = "iniconfig-2.1.0.tar.gz", hash = "sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7"},
]

[[package]]
name = "iso8601"
version = "2.1.0"
description = "Simple module to parse ISO 8601 dates"
optional = false
python-versions = ">=3.7,<4.0"
groups = ["main", "dev"]
markers = "python_version < \"4.0\""
files = [
    {file = "iso8601-2.1.0-py3-none-any.whl", hash = "sha256:aac4145c4dcb66ad8b648a02830f5e2ff6c24af20f4f482689be402db2429242"},
    {file = "iso8601-2.1.0.tar.gz", hash = "sha256:6b1d3829ee8921c4301998c909f7829fa9ed3cbdac0d3b16af2d743aed1ba8df"},
]

[[package]]
name = "isort"
version = "6.0.1"
description = "A Python utility / library to sort Python imports."
optional = false
python-versions = ">=3.9.0"
groups = ["main"]
files = [
    {file = "isort-6.0.1-py3-none-any.whl", hash = "sha256:2dc5d7f65c9678d94c88dfc29161a320eec67328bc97aad576874cb4be1e9615"},
    {file = "isort-6.0.1.tar.gz", hash = "sha256:1cb5df28dfbc742e490c5e41bad6da41b805b0a8be7bc93cd0fb2a8a890ac450"},
]

[package.extras]
colors = ["colorama"]
plugins = ["setuptools"]

[[package]]
name = "markdown-it-py"
version = "4.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
optional = false
python-versions = ">=3.10"
groups = ["main"]
files = [
    {file = "markdown_it_py-4.0.0-py3-none-any.whl", hash = "sha256:87327c59b172c5011896038353a81343b6754500a08cd7a4973bb48c6d578147"},
    {file = "markdown_it_py-4.0.0.tar.gz", hash = "sha256:cb0a2b4aa34f932c007117b194e945bd74e0ec24133ceb5bac59009cda1cb9f3"},
]

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "markdown-it-pyrs", "mistletoe (>=1.0,<2.0)", "mistune (>=3.0,<4.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins (>=0.5.0)"]
profiling = ["gprof2dot"]
rtd = ["ipykernel", "jupyter_sphinx", "mdit-py-plugins (>=0.5.0)", "myst-parser", "pyyaml", "sphinx", "sphinx-book-theme (>=1.0,<2.0)", "sphinx-copybutton", "sphinx-design"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions", "requests"]

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},
    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},
]

[[package]]
name = "mypy-extensions"
version = "1.1.0"
description = "Type system extensions for programs checked with the mypy type checker."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "mypy_extensions-1.1.0-py3-none-any.whl", hash = "sha256:1be4cccdb0f2482337c4743e60421de3a356cd97508abadd57d47403e94f5505"},
    {file = "mypy_extensions-1.1.0.tar.gz", hash = "sha256:52e68efc3284861e772bbcd66823fde5ae21fd2fdb51c62a211403730b916558"},
]

[[package]]
name = "packaging"
version = "25.0"
description = "Core utilities for Python packages"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "packaging-25.0-py3-none-any.whl", hash = "sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484"},
    {file = "packaging-25.0.tar.gz", hash = "sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f"},
]

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "pathspec-0.12.1-py3-none-any.whl", hash = "sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08"},
    {file = "pathspec-0.12.1.tar.gz", hash = "sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712"},
]

[[package]]
name = "pbr"
version = "7.0.0"
description = "Python Build Reasonableness"
optional = false
python-versions = ">=2.6"
groups = ["main"]
files = [
    {file = "pbr-7.0.0-py2.py3-none-any.whl", hash = "sha256:b447e63a2bc04fd975fc0480b8d5ebf979179e2c0ae203bf1eff9ea20073bc38"},
    {file = "pbr-7.0.0.tar.gz", hash = "sha256:cf4127298723dafbce3afd13775ccf3885be5d3c8435751b867f9a6a10b71a39"},
]

[package.dependencies]
setuptools = "*"

[[package]]
name = "platformdirs"
version = "4.3.8"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "platformdirs-4.3.8-py3-none-any.whl", hash = "sha256:ff7059bb7eb1179e2685604f4aaf157cfd9535242bd23742eadc3c13542139b4"},
    {file = "platformdirs-4.3.8.tar.gz", hash = "sha256:3d512d96e16bcb959a814c9f348431070822a6496326a4be0911c40b5a74c2bc"},
]

[package.extras]
docs = ["furo (>=2024.8.6)", "proselint (>=0.14)", "sphinx (>=8.1.3)", "sphinx-autodoc-typehints (>=3)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest (>=8.3.4)", "pytest-cov (>=6)", "pytest-mock (>=3.14)"]
type = ["mypy (>=1.14.1)"]

[[package]]
name = "pluggy"
version = "1.6.0"
description = "plugin and hook calling mechanisms for python"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pluggy-1.6.0-py3-none-any.whl", hash = "sha256:e920276dd6813095e9377c0bc5566d94c932c33b27a3e3945d8389c374dd4746"},
    {file = "pluggy-1.6.0.tar.gz", hash = "sha256:7dcc130b76258d33b90f61b658791dede3486c3e6bfb003ee5c9bfb396dd22f3"},
]

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["coverage", "pytest", "pytest-benchmark"]

[[package]]
name = "pydantic"
version = "2.11.7"
description = "Data validation using Python type hints"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pydantic-2.11.7-py3-none-any.whl", hash = "sha256:dde5df002701f6de26248661f6835bbe296a47bf73990135c7d07ce741b9623b"},
    {file = "pydantic-2.11.7.tar.gz", hash = "sha256:d989c3c6cb79469287b1569f7447a17848c998458d49ebe294e975b9baf0f0db"},
]

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.33.2"
typing-extensions = ">=4.12.2"
typing-inspection = ">=0.4.0"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata ; python_version >= \"3.9\" and platform_system == \"Windows\""]

[[package]]
name = "pydantic-core"
version = "2.33.2"
description = "Core functionality for Pydantic validation and serialization"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pydantic_core-2.33.2-cp310-cp310-macosx_10_12_x86_64.whl", hash = "sha256:2b3d326aaef0c0399d9afffeb6367d5e26ddc24d351dbc9c636840ac355dc5d8"},
    {file = "pydantic_core-2.33.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e5b2671f05ba48b94cb90ce55d8bdcaaedb8ba00cc5359f6810fc918713983d"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0069c9acc3f3981b9ff4cdfaf088e98d83440a4c7ea1bc07460af3d4dc22e72d"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:d53b22f2032c42eaaf025f7c40c2e3b94568ae077a606f006d206a463bc69572"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:0405262705a123b7ce9f0b92f123334d67b70fd1f20a9372b907ce1080c7ba02"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:4b25d91e288e2c4e0662b8038a28c6a07eaac3e196cfc4ff69de4ea3db992a1b"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6bdfe4b3789761f3bcb4b1ddf33355a71079858958e3a552f16d5af19768fef2"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:efec8db3266b76ef9607c2c4c419bdb06bf335ae433b80816089ea7585816f6a"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:031c57d67ca86902726e0fae2214ce6770bbe2f710dc33063187a68744a5ecac"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_armv7l.whl", hash = "sha256:f8de619080e944347f5f20de29a975c2d815d9ddd8be9b9b7268e2e3ef68605a"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:73662edf539e72a9440129f231ed3757faab89630d291b784ca99237fb94db2b"},
    {file = "pydantic_core-2.33.2-cp310-cp310-win32.whl", hash = "sha256:0a39979dcbb70998b0e505fb1556a1d550a0781463ce84ebf915ba293ccb7e22"},
    {file = "pydantic_core-2.33.2-cp310-cp310-win_amd64.whl", hash = "sha256:b0379a2b24882fef529ec3b4987cb5d003b9cda32256024e6fe1586ac45fc640"},
    {file = "pydantic_core-2.33.2-cp311-cp311-macosx_10_12_x86_64.whl", hash = "sha256:4c5b0a576fb381edd6d27f0a85915c6daf2f8138dc5c267a57c08a62900758c7"},
    {file = "pydantic_core-2.33.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e799c050df38a639db758c617ec771fd8fb7a5f8eaaa4b27b101f266b216a246"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dc46a01bf8d62f227d5ecee74178ffc448ff4e5197c756331f71efcc66dc980f"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:a144d4f717285c6d9234a66778059f33a89096dfb9b39117663fd8413d582dcc"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:73cf6373c21bc80b2e0dc88444f41ae60b2f070ed02095754eb5a01df12256de"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3dc625f4aa79713512d1976fe9f0bc99f706a9dee21dfd1810b4bbbf228d0e8a"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:881b21b5549499972441da4758d662aeea93f1923f953e9cbaff14b8b9565aef"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bdc25f3681f7b78572699569514036afe3c243bc3059d3942624e936ec93450e"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:fe5b32187cbc0c862ee201ad66c30cf218e5ed468ec8dc1cf49dec66e160cc4d"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_armv7l.whl", hash = "sha256:bc7aee6f634a6f4a95676fcb5d6559a2c2a390330098dba5e5a5f28a2e4ada30"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:235f45e5dbcccf6bd99f9f472858849f73d11120d76ea8707115415f8e5ebebf"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win32.whl", hash = "sha256:6368900c2d3ef09b69cb0b913f9f8263b03786e5b2a387706c5afb66800efd51"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win_amd64.whl", hash = "sha256:1e063337ef9e9820c77acc768546325ebe04ee38b08703244c1309cccc4f1bab"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win_arm64.whl", hash = "sha256:6b99022f1d19bc32a4c2a0d544fc9a76e3be90f0b3f4af413f87d38749300e65"},
    {file = "pydantic_core-2.33.2-cp312-cp312-macosx_10_12_x86_64.whl", hash = "sha256:a7ec89dc587667f22b6a0b6579c249fca9026ce7c333fc142ba42411fa243cdc"},
    {file = "pydantic_core-2.33.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:3c6db6e52c6d70aa0d00d45cdb9b40f0433b96380071ea80b09277dba021ddf7"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4e61206137cbc65e6d5256e1166f88331d3b6238e082d9f74613b9b765fb9025"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:eb8c529b2819c37140eb51b914153063d27ed88e3bdc31b71198a198e921e011"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c52b02ad8b4e2cf14ca7b3d918f3eb0ee91e63b3167c32591e57c4317e134f8f"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:96081f1605125ba0855dfda83f6f3df5ec90c61195421ba72223de35ccfb2f88"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8f57a69461af2a5fa6e6bbd7a5f60d3b7e6cebb687f55106933188e79ad155c1"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:572c7e6c8bb4774d2ac88929e3d1f12bc45714ae5ee6d9a788a9fb35e60bb04b"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:db4b41f9bd95fbe5acd76d89920336ba96f03e149097365afe1cb092fceb89a1"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_armv7l.whl", hash = "sha256:fa854f5cf7e33842a892e5c73f45327760bc7bc516339fda888c75ae60edaeb6"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:5f483cfb75ff703095c59e365360cb73e00185e01aaea067cd19acffd2ab20ea"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win32.whl", hash = "sha256:9cb1da0f5a471435a7bc7e439b8a728e8b61e59784b2af70d7c169f8dd8ae290"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win_amd64.whl", hash = "sha256:f941635f2a3d96b2973e867144fde513665c87f13fe0e193c158ac51bfaaa7b2"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win_arm64.whl", hash = "sha256:cca3868ddfaccfbc4bfb1d608e2ccaaebe0ae628e1416aeb9c4d88c001bb45ab"},
    {file = "pydantic_core-2.33.2-cp313-cp313-macosx_10_12_x86_64.whl", hash = "sha256:1082dd3e2d7109ad8b7da48e1d4710c8d06c253cbc4a27c1cff4fbcaa97a9e3f"},
    {file = "pydantic_core-2.33.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:f517ca031dfc037a9c07e748cefd8d96235088b83b4f4ba8939105d20fa1dcd6"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0a9f2c9dd19656823cb8250b0724ee9c60a82f3cdf68a080979d13092a3b0fef"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2b0a451c263b01acebe51895bfb0e1cc842a5c666efe06cdf13846c7418caa9a"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1ea40a64d23faa25e62a70ad163571c0b342b8bf66d5fa612ac0dec4f069d916"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:0fb2d542b4d66f9470e8065c5469ec676978d625a8b7a363f07d9a501a9cb36a"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9fdac5d6ffa1b5a83bca06ffe7583f5576555e6c8b3a91fbd25ea7780f825f7d"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:04a1a413977ab517154eebb2d326da71638271477d6ad87a769102f7c2488c56"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:c8e7af2f4e0194c22b5b37205bfb293d166a7344a5b0d0eaccebc376546d77d5"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_armv7l.whl", hash = "sha256:5c92edd15cd58b3c2d34873597a1e20f13094f59cf88068adb18947df5455b4e"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:65132b7b4a1c0beded5e057324b7e16e10910c106d43675d9bd87d4f38dde162"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win32.whl", hash = "sha256:52fb90784e0a242bb96ec53f42196a17278855b0f31ac7c3cc6f5c1ec4811849"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win_amd64.whl", hash = "sha256:c083a3bdd5a93dfe480f1125926afcdbf2917ae714bdb80b36d34318b2bec5d9"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win_arm64.whl", hash = "sha256:e80b087132752f6b3d714f041ccf74403799d3b23a72722ea2e6ba2e892555b9"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:61c18fba8e5e9db3ab908620af374db0ac1baa69f0f32df4f61ae23f15e586ac"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:95237e53bb015f67b63c91af7518a62a8660376a6a0db19b89acc77a4d6199f5"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-win_amd64.whl", hash = "sha256:c2fc0a768ef76c15ab9238afa6da7f69895bb5d1ee83aeea2e3509af4472d0b9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-macosx_10_12_x86_64.whl", hash = "sha256:a2b911a5b90e0374d03813674bf0a5fbbb7741570dcd4b4e85a2e48d17def29d"},
    {file = "pydantic_core-2.33.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:6fa6dfc3e4d1f734a34710f391ae822e0a8eb8559a85c6979e14e65ee6ba2954"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c54c939ee22dc8e2d545da79fc5381f1c020d6d3141d3bd747eab59164dc89fb"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:53a57d2ed685940a504248187d5685e49eb5eef0f696853647bf37c418c538f7"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09fb9dd6571aacd023fe6aaca316bd01cf60ab27240d7eb39ebd66a3a15293b4"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:0e6116757f7959a712db11f3e9c0a99ade00a5bbedae83cb801985aa154f071b"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8d55ab81c57b8ff8548c3e4947f119551253f4e3787a7bbc0b6b3ca47498a9d3"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c20c462aa4434b33a2661701b861604913f912254e441ab8d78d30485736115a"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:44857c3227d3fb5e753d5fe4a3420d6376fa594b07b621e220cd93703fe21782"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_armv7l.whl", hash = "sha256:eb9b459ca4df0e5c87deb59d37377461a538852765293f9e6ee834f0435a93b9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9fcd347d2cc5c23b06de6d3b7b8275be558a0c90549495c699e379a80bf8379e"},
    {file = "pydantic_core-2.33.2-cp39-cp39-win32.whl", hash = "sha256:83aa99b1285bc8f038941ddf598501a86f1536789740991d7d8756e34f1e74d9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-win_amd64.whl", hash = "sha256:f481959862f57f29601ccced557cc2e817bce7533ab8e01a797a48b49c9692b3"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-macosx_10_12_x86_64.whl", hash = "sha256:5c4aa4e82353f65e548c476b37e64189783aa5384903bfea4f41580f255fddfa"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:d946c8bf0d5c24bf4fe333af284c59a19358aa3ec18cb3dc4370080da1e8ad29"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:87b31b6846e361ef83fedb187bb5b4372d0da3f7e28d85415efa92d6125d6e6d"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:aa9d91b338f2df0508606f7009fde642391425189bba6d8c653afd80fd6bb64e"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:2058a32994f1fde4ca0480ab9d1e75a0e8c87c22b53a3ae66554f9af78f2fe8c"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:0e03262ab796d986f978f79c943fc5f620381be7287148b8010b4097f79a39ec"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:1a8695a8d00c73e50bff9dfda4d540b7dee29ff9b8053e38380426a85ef10052"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:fa754d1850735a0b0e03bcffd9d4b4343eb417e47196e4485d9cca326073a42c"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:a11c8d26a50bfab49002947d3d237abe4d9e4b5bdc8846a63537b6488e197808"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-macosx_10_12_x86_64.whl", hash = "sha256:dd14041875d09cc0f9308e37a6f8b65f5585cf2598a53aa0123df8b129d481f8"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-macosx_11_0_arm64.whl", hash = "sha256:d87c561733f66531dced0da6e864f44ebf89a8fba55f31407b00c2f7f9449593"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f82865531efd18d6e07a04a17331af02cb7a651583c418df8266f17a63c6612"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2bfb5112df54209d820d7bf9317c7a6c9025ea52e49f46b6a2060104bba37de7"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64632ff9d614e5eecfb495796ad51b0ed98c453e447a76bcbeeb69615079fc7e"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:f889f7a40498cc077332c7ab6b4608d296d852182211787d4f3ee377aaae66e8"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:de4b83bb311557e439b9e186f733f6c645b9417c84e2eb8203f3f820a4b988bf"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:82f68293f055f51b51ea42fafc74b6aad03e70e191799430b90c13d643059ebb"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-win_amd64.whl", hash = "sha256:329467cecfb529c925cf2bbd4d60d2c509bc2fb52a20c1045bf09bb70971a9c1"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-macosx_10_12_x86_64.whl", hash = "sha256:87acbfcf8e90ca885206e98359d7dca4bcbb35abdc0ff66672a293e1d7a19101"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:7f92c15cd1e97d4b12acd1cc9004fa092578acfa57b67ad5e43a197175d01a64"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d3f26877a748dc4251cfcfda9dfb5f13fcb034f5308388066bcfe9031b63ae7d"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dac89aea9af8cd672fa7b510e7b8c33b0bba9a43186680550ccf23020f32d535"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:970919794d126ba8645f3837ab6046fb4e72bbc057b3709144066204c19a455d"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:3eb3fe62804e8f859c49ed20a8451342de53ed764150cb14ca71357c765dc2a6"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:3abcd9392a36025e3bd55f9bd38d908bd17962cc49bc6da8e7e96285336e2bca"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:3a1c81334778f9e3af2f8aeb7a960736e5cab1dfebfb26aabca09afd2906c039"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:2807668ba86cb38c6817ad9bc66215ab8584d1d304030ce4f0887336f28a5e27"},
    {file = "pydantic_core-2.33.2.tar.gz", hash = "sha256:7cb8bc3605c29176e1b105350d2e6474142d7c1bd1d9327c4a9bdb46bf827acc"},
]

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pygments"
version = "2.19.2"
description = "Pygments is a syntax highlighting package written in Python."
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "pygments-2.19.2-py3-none-any.whl", hash = "sha256:86540386c03d588bb81d44bc3928634ff26449851e99741617ecb9037ee5ec0b"},
    {file = "pygments-2.19.2.tar.gz", hash = "sha256:636cb2477cec7f8952536970bc533bc43743542f70392ae026374600add5b887"},
]

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pypika-tortoise"
version = "0.6.1"
description = "Forked from pypika and streamline just for tortoise-orm"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
markers = "python_version < \"4.0\""
files = [
    {file = "pypika_tortoise-0.6.1-py3-none-any.whl", hash = "sha256:da15886f37b347e71f0869f9e4ee2f9259e6bb57455b45299c6c23d7927cbb6e"},
    {file = "pypika_tortoise-0.6.1.tar.gz", hash = "sha256:36ec2c88c255b9ed7ef49a6068cdeac10dafd4ddfeb828205d3afc092507fc3a"},
]

[[package]]
name = "pytest"
version = "8.4.1"
description = "pytest: simple powerful testing with Python"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pytest-8.4.1-py3-none-any.whl", hash = "sha256:539c70ba6fcead8e78eebbf1115e8b589e7565830d7d006a8723f19ac8a0afb7"},
    {file = "pytest-8.4.1.tar.gz", hash = "sha256:7c67fd69174877359ed9371ec3af8a3d2b04741818c51e5e99cc1742251fa93c"},
]

[package.dependencies]
colorama = {version = ">=0.4", markers = "sys_platform == \"win32\""}
iniconfig = ">=1"
packaging = ">=20"
pluggy = ">=1.5,<2"
pygments = ">=2.7.2"

[package.extras]
dev = ["argcomplete", "attrs (>=19.2)", "hypothesis (>=3.56)", "mock", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-assume"
version = "2.4.3"
description = "A pytest plugin that allows multiple failures per test"
optional = false
python-versions = "*"
groups = ["main"]
files = [
    {file = "pytest-assume-2.4.3.tar.gz", hash = "sha256:983e90537660fd7aa18bb554693523020272e7edeee3e40435593297bcc6347e"},
    {file = "pytest_assume-2.4.3-py3-none-any.whl", hash = "sha256:09074220213b87cf1f400609701a44b75078b4e69588c7227e061ff9b3ecf54b"},
]

[package.dependencies]
pytest = ">=2.7"
six = "*"

[[package]]
name = "pytest-asyncio"
version = "1.1.0"
description = "Pytest support for asyncio"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_asyncio-1.1.0-py3-none-any.whl", hash = "sha256:5fe2d69607b0bd75c656d1211f969cadba035030156745ee09e7d71740e58ecf"},
    {file = "pytest_asyncio-1.1.0.tar.gz", hash = "sha256:796aa822981e01b68c12e4827b8697108f7205020f24b5793b3c41555dab68ea"},
]

[package.dependencies]
pytest = ">=8.2,<9"

[package.extras]
docs = ["sphinx (>=5.3)", "sphinx-rtd-theme (>=1)"]
testing = ["coverage (>=6.2)", "hypothesis (>=5.7.1)"]

[[package]]
name = "pytest-cov"
version = "6.2.1"
description = "Pytest plugin for measuring coverage."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_cov-6.2.1-py3-none-any.whl", hash = "sha256:f5bc4c23f42f1cdd23c70b1dab1bbaef4fc505ba950d53e0081d0730dd7e86d5"},
    {file = "pytest_cov-6.2.1.tar.gz", hash = "sha256:25cc6cc0a5358204b8108ecedc51a9b57b34cc6b8c967cc2c01a4e00d8a67da2"},
]

[package.dependencies]
coverage = {version = ">=7.5", extras = ["toml"]}
pluggy = ">=1.2"
pytest = ">=6.2.5"

[package.extras]
testing = ["fields", "hunter", "process-tests", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytz"
version = "2025.2"
description = "World timezone definitions, modern and historical"
optional = false
python-versions = "*"
groups = ["main", "dev"]
files = [
    {file = "pytz-2025.2-py2.py3-none-any.whl", hash = "sha256:5ddf76296dd8c44c26eb8f4b6f35488f3ccbf6fbbd7adee0b7262d43f0ec2f00"},
    {file = "pytz-2025.2.tar.gz", hash = "sha256:360b9e3dbb49a209c21ad61809c7fb453643e048b38924c765813546746e81c3"},
]

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086"},
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68"},
    {file = "PyYAML-6.0.2-cp310-cp310-win32.whl", hash = "sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99"},
    {file = "PyYAML-6.0.2-cp310-cp310-win_amd64.whl", hash = "sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e"},
    {file = "PyYAML-6.0.2-cp311-cp311-win32.whl", hash = "sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5"},
    {file = "PyYAML-6.0.2-cp311-cp311-win_amd64.whl", hash = "sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b"},
    {file = "PyYAML-6.0.2-cp312-cp312-win32.whl", hash = "sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4"},
    {file = "PyYAML-6.0.2-cp312-cp312-win_amd64.whl", hash = "sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652"},
    {file = "PyYAML-6.0.2-cp313-cp313-win32.whl", hash = "sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183"},
    {file = "PyYAML-6.0.2-cp313-cp313-win_amd64.whl", hash = "sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563"},
    {file = "PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083"},
    {file = "PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706"},
    {file = "PyYAML-6.0.2-cp38-cp38-win32.whl", hash = "sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a"},
    {file = "PyYAML-6.0.2-cp38-cp38-win_amd64.whl", hash = "sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725"},
    {file = "PyYAML-6.0.2-cp39-cp39-win32.whl", hash = "sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631"},
    {file = "PyYAML-6.0.2-cp39-cp39-win_amd64.whl", hash = "sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8"},
    {file = "pyyaml-6.0.2.tar.gz", hash = "sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e"},
]

[[package]]
name = "rich"
version = "14.1.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "rich-14.1.0-py3-none-any.whl", hash = "sha256:536f5f1785986d6dbdea3c75205c473f970777b4a0d6c6dd1b696aa05a3fa04f"},
    {file = "rich-14.1.0.tar.gz", hash = "sha256:e497a48b844b0320d45007cdebfeaeed8db2a4f4bcf49f15e455cfc4af11eaa8"},
]

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "ruff"
version = "0.12.9"
description = "An extremely fast Python linter and code formatter, written in Rust."
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "ruff-0.12.9-py3-none-linux_armv6l.whl", hash = "sha256:fcebc6c79fcae3f220d05585229463621f5dbf24d79fdc4936d9302e177cfa3e"},
    {file = "ruff-0.12.9-py3-none-macosx_10_12_x86_64.whl", hash = "sha256:aed9d15f8c5755c0e74467731a007fcad41f19bcce41cd75f768bbd687f8535f"},
    {file = "ruff-0.12.9-py3-none-macosx_11_0_arm64.whl", hash = "sha256:5b15ea354c6ff0d7423814ba6d44be2807644d0c05e9ed60caca87e963e93f70"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d596c2d0393c2502eaabfef723bd74ca35348a8dac4267d18a94910087807c53"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:1b15599931a1a7a03c388b9c5df1bfa62be7ede6eb7ef753b272381f39c3d0ff"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:3d02faa2977fb6f3f32ddb7828e212b7dd499c59eb896ae6c03ea5c303575756"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl", hash = "sha256:17d5b6b0b3a25259b69ebcba87908496e6830e03acfb929ef9fd4c58675fa2ea"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:72db7521860e246adbb43f6ef464dd2a532ef2ef1f5dd0d470455b8d9f1773e0"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:a03242c1522b4e0885af63320ad754d53983c9599157ee33e77d748363c561ce"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9fc83e4e9751e6c13b5046d7162f205d0a7bac5840183c5beebf824b08a27340"},
    {file = "ruff-0.12.9-py3-none-manylinux_2_31_riscv64.whl", hash = "sha256:881465ed56ba4dd26a691954650de6ad389a2d1fdb130fe51ff18a25639fe4bb"},
    {file = "ruff-0.12.9-py3-none-musllinux_1_2_aarch64.whl", hash = "sha256:43f07a3ccfc62cdb4d3a3348bf0588358a66da756aa113e071b8ca8c3b9826af"},
    {file = "ruff-0.12.9-py3-none-musllinux_1_2_armv7l.whl", hash = "sha256:07adb221c54b6bba24387911e5734357f042e5669fa5718920ee728aba3cbadc"},
    {file = "ruff-0.12.9-py3-none-musllinux_1_2_i686.whl", hash = "sha256:f5cd34fabfdea3933ab85d72359f118035882a01bff15bd1d2b15261d85d5f66"},
    {file = "ruff-0.12.9-py3-none-musllinux_1_2_x86_64.whl", hash = "sha256:f6be1d2ca0686c54564da8e7ee9e25f93bdd6868263805f8c0b8fc6a449db6d7"},
    {file = "ruff-0.12.9-py3-none-win32.whl", hash = "sha256:cc7a37bd2509974379d0115cc5608a1a4a6c4bff1b452ea69db83c8855d53f93"},
    {file = "ruff-0.12.9-py3-none-win_amd64.whl", hash = "sha256:6fb15b1977309741d7d098c8a3cb7a30bc112760a00fb6efb7abc85f00ba5908"},
    {file = "ruff-0.12.9-py3-none-win_arm64.whl", hash = "sha256:63c8c819739d86b96d500cce885956a1a48ab056bbcbc61b747ad494b2485089"},
    {file = "ruff-0.12.9.tar.gz", hash = "sha256:fbd94b2e3c623f659962934e52c2bea6fc6da11f667a427a368adaf3af2c866a"},
]

[[package]]
name = "setuptools"
version = "80.9.0"
description = "Easily download, build, install, upgrade, and uninstall Python packages"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "setuptools-80.9.0-py3-none-any.whl", hash = "sha256:062d34222ad13e0cc312a4c02d73f059e86a4acbfbdea8f8f76b28c99f306922"},
    {file = "setuptools-80.9.0.tar.gz", hash = "sha256:f36b47402ecde768dbfafc46e8e4207b4360c654f1f3bb84475f0a28628fb19c"},
]

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1) ; sys_platform != \"cygwin\"", "ruff (>=0.8.0) ; sys_platform != \"cygwin\""]
core = ["importlib_metadata (>=6) ; python_version < \"3.10\"", "jaraco.functools (>=4)", "jaraco.text (>=3.7)", "more_itertools", "more_itertools (>=8.8)", "packaging (>=24.2)", "platformdirs (>=4.2.2)", "tomli (>=2.0.1) ; python_version < \"3.11\"", "wheel (>=0.43.0)"]
cover = ["pytest-cov"]
doc = ["furo", "jaraco.packaging (>=9.3)", "jaraco.tidelift (>=1.4)", "pygments-github-lexers (==0.0.5)", "pyproject-hooks (!=1.1)", "rst.linker (>=1.9)", "sphinx (>=3.5)", "sphinx-favicon", "sphinx-inline-tabs", "sphinx-lint", "sphinx-notfound-page (>=1,<2)", "sphinx-reredirects", "sphinxcontrib-towncrier", "towncrier (<24.7)"]
enabler = ["pytest-enabler (>=2.2)"]
test = ["build[virtualenv] (>=1.0.3)", "filelock (>=3.4.0)", "ini2toml[lite] (>=0.14)", "jaraco.develop (>=7.21) ; python_version >= \"3.9\" and sys_platform != \"cygwin\"", "jaraco.envs (>=2.2)", "jaraco.path (>=3.7.2)", "jaraco.test (>=5.5)", "packaging (>=24.2)", "pip (>=19.1)", "pyproject-hooks (!=1.1)", "pytest (>=6,!=8.1.*)", "pytest-home (>=0.5)", "pytest-perf ; sys_platform != \"cygwin\"", "pytest-subprocess", "pytest-timeout", "pytest-xdist (>=3)", "tomli-w (>=1.0.0)", "virtualenv (>=13.0.0)", "wheel (>=0.44.0)"]
type = ["importlib_metadata (>=7.0.2) ; python_version < \"3.10\"", "jaraco.develop (>=7.21) ; sys_platform != \"cygwin\"", "mypy (==1.14.*)", "pytest-mypy"]

[[package]]
name = "six"
version = "1.17.0"
description = "Python 2 and 3 compatibility utilities"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"
groups = ["main"]
files = [
    {file = "six-1.17.0-py2.py3-none-any.whl", hash = "sha256:4721f391ed90541fddacab5acf947aa0d3dc7d27b2e1e8eda2be8970586c3274"},
    {file = "six-1.17.0.tar.gz", hash = "sha256:ff70335d468e7eb6ec65b95b99d3a2836546063f63acc5171de367e834932a81"},
]

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "sniffio-1.3.1-py3-none-any.whl", hash = "sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2"},
    {file = "sniffio-1.3.1.tar.gz", hash = "sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc"},
]

[[package]]
name = "starlette"
version = "0.47.2"
description = "The little ASGI library that shines."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "starlette-0.47.2-py3-none-any.whl", hash = "sha256:c5847e96134e5c5371ee9fac6fdf1a67336d5815e09eb2a01fdb57a351ef915b"},
    {file = "starlette-0.47.2.tar.gz", hash = "sha256:6ae9aa5db235e4846decc1e7b79c4f346adf41e9777aebeb49dfd09bbd7023d8"},
]

[package.dependencies]
anyio = ">=3.6.2,<5"
typing-extensions = {version = ">=4.10.0", markers = "python_version < \"3.13\""}

[package.extras]
full = ["httpx (>=0.27.0,<0.29.0)", "itsdangerous", "jinja2", "python-multipart (>=0.0.18)", "pyyaml"]

[[package]]
name = "stevedore"
version = "5.4.1"
description = "Manage dynamic plugins for Python applications"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "stevedore-5.4.1-py3-none-any.whl", hash = "sha256:d10a31c7b86cba16c1f6e8d15416955fc797052351a56af15e608ad20811fcfe"},
    {file = "stevedore-5.4.1.tar.gz", hash = "sha256:3135b5ae50fe12816ef291baff420acb727fcd356106e3e9cbfa9e5985cd6f4b"},
]

[package.dependencies]
pbr = ">=2.0.0"

[[package]]
name = "tortoise-orm"
version = "0.25.1"
description = "Easy async ORM for python, built with relations in mind"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "tortoise_orm-0.25.1-py3-none-any.whl", hash = "sha256:df0ef7e06eb0650a7e5074399a51ee6e532043308c612db2cac3882486a3fd9f"},
    {file = "tortoise_orm-0.25.1.tar.gz", hash = "sha256:4d5bfd13d5750935ffe636a6b25597c5c8f51c47e5b72d7509d712eda1a239fe"},
]

[package.dependencies]
aiosqlite = ">=0.16.0,<1.0.0"
iso8601 = {version = ">=2.1.0,<3.0.0", markers = "python_version < \"4.0\""}
pypika-tortoise = {version = ">=0.6.1,<1.0.0", markers = "python_version < \"4.0\""}
pytz = "*"

[package.extras]
accel = ["ciso8601 ; sys_platform != \"win32\" and implementation_name == \"cpython\"", "orjson", "uvloop ; sys_platform != \"win32\" and implementation_name == \"cpython\""]
aiomysql = ["aiomysql"]
asyncmy = ["asyncmy (>=0.2.8,<1.0.0) ; python_version < \"4.0\""]
asyncodbc = ["asyncodbc (>=0.1.1,<1.0.0) ; python_version < \"4.0\""]
asyncpg = ["asyncpg"]
psycopg = ["psycopg[binary,pool] (>=3.0.12,<4.0.0)"]

[[package]]
name = "typing-extensions"
version = "4.14.1"
description = "Backported and Experimental Type Hints for Python 3.9+"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "typing_extensions-4.14.1-py3-none-any.whl", hash = "sha256:d1e1e3b58374dc93031d6eda2420a48ea44a36c2b4766a4fdeb3710755731d76"},
    {file = "typing_extensions-4.14.1.tar.gz", hash = "sha256:38b39f4aeeab64884ce9f74c94263ef78f3c22467c8724005483154c26648d36"},
]

[[package]]
name = "typing-inspection"
version = "0.4.1"
description = "Runtime typing introspection tools"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "typing_inspection-0.4.1-py3-none-any.whl", hash = "sha256:389055682238f53b04f7badcb49b989835495a96700ced5dab2d8feae4b26f51"},
    {file = "typing_inspection-0.4.1.tar.gz", hash = "sha256:6ae134cc0203c33377d43188d4064e9b357dba58cff3185f22924610e70a9d28"},
]

[package.dependencies]
typing-extensions = ">=4.12.0"

[[package]]
name = "uvicorn"
version = "0.35.0"
description = "The lightning-fast ASGI server."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "uvicorn-0.35.0-py3-none-any.whl", hash = "sha256:197535216b25ff9b785e29a0b79199f55222193d47f820816e7da751e9bc8d4a"},
    {file = "uvicorn-0.35.0.tar.gz", hash = "sha256:bc662f087f7cf2ce11a1d7fd70b90c9f98ef2e2831556dd078d131b96cc94a01"},
]

[package.dependencies]
click = ">=7.0"
h11 = ">=0.8"

[package.extras]
standard = ["colorama (>=0.4) ; sys_platform == \"win32\"", "httptools (>=0.6.3)", "python-dotenv (>=0.13)", "pyyaml (>=5.1)", "uvloop (>=0.15.1) ; sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"PyPy\"", "watchfiles (>=0.13)", "websockets (>=10.4)"]

[metadata]
lock-version = "2.1"
python-versions = ">=3.11"
content-hash = "86027d893a0460b325a34c9b3b5241c36eb3dc07154503a8033086a4d167cd6d"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/poetry.lock ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/pyproject.toml ==========
[project]
name = "score-app"
version = "0.1.0"
description = ""
authors = [
    {name = "Sebastian Betancourth Zapata", email = "s.betancourth@uniandes.edu.co"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "tortoise-orm (>=0.25.1,<0.26.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "black (>=25.1.0,<26.0.0)",
    "isort (>=6.0.1,<7.0.0)",
    "bandit (>=1.8.6,<2.0.0)",
    "pytest-assume (>=2.4.3,<3.0.0)",
    "ruff (>=0.12.9,<0.13.0)",
    "httpx (>=0.28.1,<0.29.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
aerich = "^0.9.1"
pytest = "^8.4.1"

pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"

[[tool.poetry.packages]]
include = "src"
from = "."

[tool.aerich]

tortoise_orm = "tortoise_config.tortoise_config"

location = "./migrations"

src_folder = "./."

[tool.pytest.ini_options]
# https://docs.pytest.org/en/7.2.x/reference/customize.html for reference
python_files = "test_*.py"
pythonpath = "src"
testpaths = [
  "tests"
]
addopts = "--asyncio-mode=auto"

========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/pyproject.toml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/models.py ==========
import uuid
from enum import Enum

from tortoise import fields, models

class SizeEnum(str, Enum):
    LARGE = "LARGE"
    MEDIUM = "MEDIUM"
    SMALL = "SMALL"

class Score(models.Model):
    id = fields.UUIDField(pk=True, default=uuid.uuid4)
    offerId = fields.CharField(max_length=64)
    userId = fields.CharField(max_length=64)
    postId = fields.CharField(max_length=64)
    size = fields.CharEnumField(SizeEnum, max_length=10)
    bagCost = fields.FloatField()
    utility = fields.FloatField()
    offer = fields.FloatField(null=True)
    createdAt = fields.DatetimeField(auto_now_add=True)

    class Meta:
        table = "scores"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/models.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/score_repository_adapter.py ==========
from typing import Dict, List, Optional

from adapters.bd.models import Score
from domain.models.score import Score as DomainScore
from domain.models.score import ScoreCreate
from domain.ports.score_repository_port import ScoreRepositoryPort
from errors import ScoreNotFoundError

class DBScoreRepositoryAdapter(ScoreRepositoryPort):
    async def create(self, score_create: ScoreCreate) -> Dict:

        score_db = Score(
            offerId=score_create.offerId,
            userId=score_create.userId,
            postId=score_create.postId,
            size=score_create.size,
            bagCost=score_create.bagCost,
            offer=score_create.offer,
            utility=score_create.utility,
        )
        await score_db.save()
        return {
            "id": str(score_db.id),
            "userId": str(score_db.userId),
            "offerId": str(score_db.offerId),
            "postId": str(score_db.postId),
            "utility": score_db.utility,
            "createdAt": score_db.createdAt.isoformat(),
        }

    async def get_by_id(self, score_id: str) -> Optional[Score]:
        return await Score.get_or_none(id=score_id)

    async def delete(self, score_id: str) -> Score:
        score = await Score.get_or_none(id=score_id)
        if not score:
            raise ScoreNotFoundError(f"Score with id {score_id} not found")
        await score.delete()
        return score

    async def delete_all_score(self) -> None:
        """Delete all Scores."""
        await Score.all().delete()
        return None

    async def get_all(self) -> List[Score]:
        return await Score.all()

    async def get_scores_filter(self, offer_id: str, post_id: str) -> List[DomainScore]:
        dict_filter = {}
        if offer_id is not None:
            dict_filter["offerId"] = offer_id
        if post_id is not None:
            dict_filter["postId"] = post_id
        scores = await Score.filter(**dict_filter).all()
        return scores
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/adapters/bd/score_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/assembly.py ==========
from adapters.bd.score_repository_adapter import DBScoreRepositoryAdapter
from domain.use_cases.base_use_case import BaseUseCase
from domain.use_cases.create_score_use_case import CreateScoreUseCase
from domain.use_cases.delete_score_use_case import DeleteScoreUseCase
from domain.use_cases.get_filter_score_use_case import GetScoreFilterUseCase
from domain.use_cases.get_score_use_case import GetScoreUseCase
from domain.use_cases.reset_score_use_case import ResetScoreUseCase

repository: DBScoreRepositoryAdapter = DBScoreRepositoryAdapter()

def build_create_score_use_case() -> BaseUseCase:
    """Get create score use case."""
    return CreateScoreUseCase(repository)

def build_get_score_use_case() -> BaseUseCase:
    """Get get score use case"""
    return GetScoreUseCase(repository)

def build_delete_score_use_case() -> BaseUseCase:
    """Get delete score use case"""
    return DeleteScoreUseCase(repository)

def build_reset_score_use_case() -> BaseUseCase:
    """Get delete all Scores use case"""
    return ResetScoreUseCase(repository)

def build_get_filter_score_use_case() -> BaseUseCase:
    """Get Filter score use case"""
    return GetScoreFilterUseCase(repository)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/assembly.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/config.py ==========
import os
from functools import lru_cache

class classproperty:
    def __init__(self, fget):
        self.fget = fget

    def __get__(self, instance, owner):
        return self.fget(owner)

class Settings:
    """Application settings."""

    @classproperty
    @lru_cache()
    def app_name(self) -> str:
        return os.getenv("APP_NAME", "Score App")

    @classproperty
    @lru_cache()
    def log_level(self) -> str:
        return os.getenv("LOG_LEVEL", "DEBUG")

    @classproperty
    @lru_cache()
    def db_url(self) -> str:
        user = os.getenv("POSTGRES_USER")
        password = os.getenv("POSTGRES_PASSWORD")
        host = os.getenv("POSTGRES_HOST")
        port = os.getenv("POSTGRES_PORT", "5432")
        db = os.getenv("POSTGRES_DB")
        return f"postgres://{user}:{password}@{host}:{port}/{db}"

    @classproperty
    @lru_cache()
    def tortoise_config(self) -> dict:
        return {
            "connections": {"default": Settings.db_url},
            "apps": {
                "models": {
                    "models": ["adapters.bd.models"],
                    "default_connection": "default",
                }
            },
        }
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/config.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/models/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/models/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/models/score.py ==========
from datetime import datetime
from enum import Enum
from uuid import UUID

from pydantic import BaseModel

class SizeEnum(str, Enum):
    LARGE = "LARGE"
    MEDIUM = "MEDIUM"
    SMALL = "SMALL"

class Score(BaseModel):
    id: UUID
    offerId: UUID
    userId: UUID
    postId: UUID
    createdAt: datetime
    offer: float
    bagCost: float
    utility: float
    size: SizeEnum

    class Config:
        from_attributes = True

class ScoreCreate(BaseModel):
    offerId: UUID
    userId: UUID
    postId: UUID
    offer: float
    bagCost: float
    utility: float
    size: SizeEnum

class CalculateScoreRequest(BaseModel):
    offer: float
    bagCost: float
    size: SizeEnum
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/models/score.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/ports/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/ports/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/ports/score_repository_port.py ==========
from abc import ABC, abstractmethod
from typing import Dict, List, Optional

from domain.models.score import Score, ScoreCreate

class ScoreRepositoryPort(ABC):
    """Post repository interface."""

    @abstractmethod
    async def create(self, post: ScoreCreate) -> Dict:
        """Create a new score."""
        pass

    @abstractmethod
    async def get_by_id(self, post_id: str) -> Optional[Score]:
        """Get post by ID."""
        pass

    @abstractmethod
    async def get_all(self) -> List[Score]:
        """Get all score."""
        pass

    @abstractmethod
    async def delete(self, post_id: str) -> Score:
        """Delete a score."""
        pass

    @abstractmethod
    async def delete_all_score(self) -> None:
        """Delete all score."""
        pass

    @abstractmethod
    async def get_scores_filter(self, offer_id=None, post_id=None) -> List[Score]:
        """Get posts by filters."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/ports/score_repository_port.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/base_use_case.py ==========
from abc import ABC, abstractmethod

class BaseUseCase(ABC):
    """Base use case class."""

    @abstractmethod
    def execute(self, *args, **kwargs):
        """Execute the use case."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/base_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/create_score_use_case.py ==========
from typing import Dict

from domain.models.score import ScoreCreate
from domain.ports.score_repository_port import ScoreRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class CreateScoreUseCase(BaseUseCase):
    """Use case for saving a post."""

    def __init__(self, score_repository: ScoreRepositoryPort):
        self.score_repository = score_repository

    def execute(self, score: ScoreCreate) -> Dict:
        """Create a new pet."""
        return self.score_repository.create(score)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/create_score_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/delete_score_use_case.py ==========
from domain.models.score import Score
from domain.ports.score_repository_port import ScoreRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class DeleteScoreUseCase(BaseUseCase):
    """Use case for deleting a score."""

    def __init__(self, score_repository: ScoreRepositoryPort):
        self.score_repository = score_repository

    def execute(self, score_id: int) -> Score:
        return self.score_repository.delete(score_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/delete_score_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/get_filter_score_use_case.py ==========
from domain.models.score import Score
from domain.ports.score_repository_port import ScoreRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetScoreFilterUseCase(BaseUseCase):
    """Use case for get a score."""

    def __init__(self, score_repository: ScoreRepositoryPort):
        self.score_repository = score_repository

    def execute(self, offer_id: int = None, post_id: int = None) -> Score:
        return self.score_repository.get_scores_filter(offer_id, post_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/get_filter_score_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/get_score_use_case.py ==========
from domain.models.score import Score
from domain.ports.score_repository_port import ScoreRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetScoreUseCase(BaseUseCase):
    """Use case for get a score."""

    def __init__(self, score_repository: ScoreRepositoryPort):
        self.score_repository = score_repository

    def execute(self, score_id: int) -> Score:
        return self.score_repository.get_by_id(score_id)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/get_score_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/reset_score_use_case.py ==========
from domain.models.score import Score
from domain.ports.score_repository_port import ScoreRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class ResetScoreUseCase(BaseUseCase):
    """Use case for get a score."""

    def __init__(self, score_repository: ScoreRepositoryPort):
        self.score_repository = score_repository

    def execute(self) -> Score:
        return self.score_repository.delete_all_score()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/domain/use_cases/reset_score_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/main.py ==========
from fastapi import FastAPI, Request
from fastapi.exceptions import RequestValidationError
from fastapi.responses import JSONResponse
from tortoise.contrib.fastapi import register_tortoise

from config import Settings
from entrypoints.api.routers.score_router import router as score_router

app = FastAPI(title=Settings.app_name)

@app.exception_handler(RequestValidationError)
async def validation_exception_handler(request: Request, exc: RequestValidationError):
    return JSONResponse(
        status_code=400,
        content=None,
    )

app.include_router(score_router)

register_tortoise(
    app,
    config=Settings.tortoise_config,
    generate_schemas=True,
    add_exception_handlers=True,
)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/main.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/routers/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/routers/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/routers/score_router.py ==========
import uuid
from typing import List

from fastapi import APIRouter, Depends, HTTPException
from fastapi.responses import JSONResponse, PlainTextResponse

from assembly import (
    build_create_score_use_case,
    build_delete_score_use_case,
    build_get_filter_score_use_case,
    build_get_score_use_case,
    build_reset_score_use_case,
)
from domain.models.score import CalculateScoreRequest, Score, ScoreCreate
from domain.use_cases.base_use_case import BaseUseCase
from errors import ScoreNotFoundError

router = APIRouter(prefix="/score")

MAPPING_SIZE = {"LARGE": 1.0, "MEDIUM": 0.5, "SMALL": 0.25}

@router.get("/ping", response_class=PlainTextResponse)
def health_check():
    """Healthcheck endpoint."""
    return "pong"

@router.post("/calculate", response_class=JSONResponse)
async def calculate_score(score_data: CalculateScoreRequest):
    """Calculate score based on input data."""
    try:
        utility = score_data.offer - (
            MAPPING_SIZE.get(score_data.size) * score_data.bagCost
        )
        result = {"utility": utility}
        return JSONResponse(content=result, status_code=200)
    except Exception as e:
        raise HTTPException(status_code=400, detail=str(e))

@router.post("/", response_class=JSONResponse, status_code=201)
async def create_score(
    score: ScoreCreate, use_case: BaseUseCase = Depends(build_create_score_use_case)
):
    """Create a new score."""
    result = await use_case.execute(score)
    return JSONResponse(content=result, status_code=201)

@router.post("/reset", response_class=JSONResponse)
async def delete_all_scores(
    use_case: BaseUseCase = Depends(build_reset_score_use_case),
):
    """Delete all score."""

    await use_case.execute()
    return JSONResponse({"msg": "Todos los datos fueron eliminados"}, status_code=200)

@router.get("/", response_model=List[Score])
async def get_filter_score(
    post: str = None,
    offer: str = None,
    use_case: BaseUseCase = Depends(build_get_filter_score_use_case),
):
    """Get all scores with filters."""
    if post:
        try:
            uuid.UUID(post)
        except ValueError:
            raise HTTPException(
                status_code=400, detail={"msg": "post no es un UUID válido"}
            )
    if offer:
        try:
            uuid.UUID(offer)
        except ValueError:
            raise HTTPException(
                status_code=400, detail={"msg": "offer no es un UUID válido"}
            )

    score = await use_case.execute(offer, post)
    return score

@router.get("/{id}", response_model=Score)
async def get_score_by_id(
    id: str, use_case: BaseUseCase = Depends(build_get_score_use_case)
):
    """Get a post by ID."""
    try:
        uuid.UUID(id)
    except ValueError:
        raise HTTPException(
            status_code=400, detail={"msg": "score_id no es un UUID válido"}
        )
    score = await use_case.execute(id)
    if not score:
        raise HTTPException(status_code=404, detail="Score not found")
    return score

@router.delete("/{id}", response_class=JSONResponse)
async def delete_score(
    id: str, use_case: BaseUseCase = Depends(build_delete_score_use_case)
):
    """Delete score."""
    try:
        uuid.UUID(id)
    except ValueError:
        raise HTTPException(
            status_code=400, detail={"msg": "score_id no es un UUID válido"}
        )
    try:
        await use_case.execute(id)
        return JSONResponse({"msg": "el Score fue eliminada"}, status_code=200)
    except ScoreNotFoundError as err:
        return JSONResponse({"error": str(err)}, status_code=404)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/entrypoints/api/routers/score_router.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/errors.py ==========
class ScoreNotFoundError(Exception):
    """Exception raised when a pet is not found."""

    pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/src/errors.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/adapter/test_post_repository_adapter.py ==========
import uuid

import pytest
from tortoise import Tortoise

from adapters.bd.score_repository_adapter import DBScoreRepositoryAdapter
from config import Settings
from domain.models.score import ScoreCreate
from errors import ScoreNotFoundError

@pytest.fixture(scope="function")
async def init_tortoise():
    await Tortoise.init(config=Settings.tortoise_config)
    await Tortoise.generate_schemas()
    yield
    await Tortoise.close_connections()

@pytest.fixture(autouse=True)
async def clean_score(init_tortoise):
    adapter = DBScoreRepositoryAdapter()
    await adapter.delete_all_score()

@pytest.mark.asyncio
async def test_create_score():
    adapter = DBScoreRepositoryAdapter()
    user = str(uuid.uuid4())

    score_data = ScoreCreate(
        offerId=str(uuid.uuid4()),
        userId=user,
        postId=str(uuid.uuid4()),
        size="SMALL",
        bagCost=10.5,
        offer=15.0,
        utility=4.5,
    )
    result = await adapter.create(score_data)
    pytest.assume("id" in result)
    pytest.assume(result["userId"] == user)

@pytest.mark.asyncio
async def test_get_by_id_found():
    adapter = DBScoreRepositoryAdapter()
    score_data = ScoreCreate(
        offerId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        postId=str(uuid.uuid4()),
        size="SMALL",
        bagCost=10.5,
        offer=15.0,
        utility=4.5,
    )
    created = await adapter.create(score_data)
    score = await adapter.get_by_id(created["id"])
    pytest.assume(score is not None)

@pytest.mark.asyncio
async def test_get_by_id_not_found():
    adapter = DBScoreRepositoryAdapter()
    nuevo_uuid = str(uuid.uuid4())
    score = await adapter.get_by_id(nuevo_uuid)
    pytest.assume(score is None)

@pytest.mark.asyncio
async def test_get_all_score():
    adapter = DBScoreRepositoryAdapter()
    score_data_uno = ScoreCreate(
        offerId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        postId=str(uuid.uuid4()),
        size="SMALL",
        bagCost=10.5,
        offer=15.0,
        utility=4.5,
    )
    score_data_dos = ScoreCreate(
        offerId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        postId=str(uuid.uuid4()),
        size="LARGE",
        bagCost=10.5,
        offer=15.0,
        utility=4.5,
    )
    await adapter.create(score_data_uno)
    await adapter.create(score_data_dos)
    scores = await adapter.get_all()
    pytest.assume(isinstance(scores, list))
    pytest.assume(len(scores) == 2)

@pytest.mark.asyncio
async def test_delete_score():
    adapter = DBScoreRepositoryAdapter()
    score_data_dos = ScoreCreate(
        offerId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        postId=str(uuid.uuid4()),
        size="LARGE",
        bagCost=10.5,
        offer=15.0,
        utility=4.5,
    )
    created = await adapter.create(score_data_dos)
    deleted = await adapter.delete(created["id"])
    print("id", deleted.id)
    pytest.assume(str(deleted.id) == created["id"])

@pytest.mark.asyncio
async def test_delete_score_not_found():
    adapter = DBScoreRepositoryAdapter()
    with pytest.raises(ScoreNotFoundError):
        nuevo_uuid = str(uuid.uuid4())
        await adapter.delete(nuevo_uuid)

@pytest.mark.asyncio
async def test_delete_all_score():
    adapter = DBScoreRepositoryAdapter()
    score_data_dos = ScoreCreate(
        offerId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        postId=str(uuid.uuid4()),
        size="LARGE",
        bagCost=10.5,
        offer=15.0,
        utility=4.5,
    )
    await adapter.create(score_data_dos)
    await adapter.delete_all_score()
    score = await adapter.get_all()
    pytest.assume(score == [])

@pytest.mark.asyncio
async def test_get_posts_filter_true():
    adapter = DBScoreRepositoryAdapter()
    post_id = str(uuid.uuid4())
    score_data = ScoreCreate(
        offerId=str(uuid.uuid4()),
        userId=str(uuid.uuid4()),
        postId=post_id,
        size="LARGE",
        bagCost=10.5,
        offer=15.0,
        utility=4.5,
    )
    await adapter.create(score_data)
    scores = await adapter.get_scores_filter(post_id=post_id, offer_id=None)
    pytest.assume(all(s.postId == post_id for s in scores))
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/adapter/test_post_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/api/mocks.py ==========
class MockCreateScoreUseCase:
    async def execute(self, score):
        return {
            "id": "4a932d9d-2328-4055-a5be-90ed9c52e8b3",
            "userId": str(score.userId),
            "offerId": str(score.offerId),
            "postId": str(score.postId),
            "utility": str(score.utility),
            "createdAt": "2025-09-03T14:37:25.273210+00:00",
        }

class MockDeleteScoreUseCase:
    async def execute(self, id):
        if id == "no-existe":
            raise Exception("ScoreNotFoundError")
        return None

class MockDeleteAllScoretUseCase:
    async def execute(self):
        return None
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/api/mocks.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/api/test_api.py ==========
import uuid

import pytest
from fastapi.testclient import TestClient
from mocks import (
    MockCreateScoreUseCase,
    MockDeleteAllScoretUseCase,
    MockDeleteScoreUseCase,
)

from assembly import (
    build_create_score_use_case,
    build_delete_score_use_case,
    build_reset_score_use_case,
)
from entrypoints.api.main import app

client = TestClient(app)

app.dependency_overrides[build_create_score_use_case] = lambda: MockCreateScoreUseCase()
app.dependency_overrides[build_delete_score_use_case] = lambda: MockDeleteScoreUseCase()
app.dependency_overrides[build_reset_score_use_case] = (
    lambda: MockDeleteAllScoretUseCase()
)

def test_health_check():
    response = client.get("/score/ping")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.text == "pong")

def test_create_score_ok():
    response = client.post(
        "/score/",
        json={
            "offerId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "userId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "postId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "offer": 100,
            "bagCost": 50,
            "utility": 50,
            "size": "LARGE",
        },
    )
    pytest.assume(response.status_code == 201)
    pytest.assume("id" in response.json())

def test_delete_score_ok():
    create_response = client.post(
        "/score/",
        json={
            "offerId": str(uuid.uuid4()),
            "userId": str(uuid.uuid4()),
            "postId": str(uuid.uuid4()),
            "offer": 100,
            "bagCost": 50,
            "utility": 50,
            "size": "LARGE",
        },
    )
    id = create_response.json()["id"]
    response = client.delete(f"/score/{id}")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.json()["msg"] == "el Score fue eliminada")

def test_delete_score_not_found():
    score_id = "no-existe"
    response = client.delete(f"/score/{score_id}")
    pytest.assume(response.status_code == 400 or response.status_code == 500)

def test_delete_all_post():
    response = client.post("/score/reset")
    pytest.assume(response.status_code == 200)
    pytest.assume(response.json()["msg"] == "Todos los datos fueron eliminados")
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/api/test_api.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/use_cases/test_use_cases.py ==========
import pytest

from assembly import (
    build_create_score_use_case,
    build_delete_score_use_case,
    build_get_filter_score_use_case,
    build_get_score_use_case,
    build_reset_score_use_case,
)
from domain.use_cases.create_score_use_case import CreateScoreUseCase
from domain.use_cases.delete_score_use_case import DeleteScoreUseCase
from domain.use_cases.get_filter_score_use_case import GetScoreFilterUseCase
from domain.use_cases.get_score_use_case import GetScoreUseCase
from domain.use_cases.reset_score_use_case import ResetScoreUseCase

def test_build_create_score_use_case():
    use_case = build_create_score_use_case()
    pytest.assume(isinstance(use_case, CreateScoreUseCase))

def test_build_get_score_use_case():
    use_case = build_get_score_use_case()
    pytest.assume(isinstance(use_case, GetScoreUseCase))

def test_build_delete_score_use_case():
    use_case = build_delete_score_use_case()
    pytest.assume(isinstance(use_case, DeleteScoreUseCase))

def test_build_delete_all_score_use_case():
    use_case = build_reset_score_use_case()
    pytest.assume(isinstance(use_case, ResetScoreUseCase))

def test_build_get_score_filter_use_case():
    use_case = build_get_filter_score_use_case()
    pytest.assume(isinstance(use_case, GetScoreFilterUseCase))
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/score_app/tests/unit/use_cases/test_use_cases.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/Dockerfile ==========
# Use Python 3.11 slim image as base
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==2.1.4

# Configure Poetry: Don't create virtual env, install deps to system python
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=0 \
    POETRY_CACHE_DIR=/tmp/poetry_cache \
    POETRY_VIRTUALENVS_CREATE=false

# Create non-root user for security
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid appuser --shell /bin/bash --create-home appuser

# Set work directory
WORKDIR /users_app

# Copy poetry files
COPY pyproject.toml ./
COPY poetry.lock ./

# Install dependencies
RUN poetry lock && \
    poetry install --only=main --no-root && \
    rm -rf $POETRY_CACHE_DIR

# Copy application code
COPY src/ ./src/

# Change ownership of the app directory to appuser
RUN chown -R appuser:appuser /users_app
# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

ENV PYTHONPATH=/users_app/src
# Run the application using poetry
CMD ["poetry", "run", "uvicorn", "entrypoints.api.main:app", "--host", "0.0.0.0", "--port", "8000"]========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/Dockerfile ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/README.md ==========
# users_app

## Descripción
El API de usuarios permite la gestión de usuarios con funcionalidades como crear usuarios y validar la identidad de un usuario por medio de tokens

## Tecnologías 
* Python con FastAPI
* PostgreSQL.

## Requerimientos para Instalación

- Python 3.11
- Poetry version 2.1.1
- Docker
- Postman (Opcional para pruebas API)
- Minikube (para despliegue en Kubernetes)
- kubectl (para gestionar Kubernetes)

## Estructura del Proyecto

```
.
├── src/
│   ├── domain/             # Capa de dominio
│   │   ├── models/         # Modelos de dominio
│   │   ├── ports/          # Puertos (interfaces)
│   │   └── use_cases/      # Casos de uso
│   ├── adapters/           # Capa de adaptadores
│   │   └── database/       # Adaptador de base de datos
│   └── entrypoints/        # Puntos de entrada
│       └── api/            # API REST
├── tests/                  # Pruebas
├── Dockerfile              # Configuración de Docker
├── pyproject.toml          # Configuración de Poetry
└── README.md               # Este archivo
```

## Variables de entorno
Crea un archivo `.env` con:
- `POSTGRES_HOST`
- `POSTGRES_USER`
- `POSTGRES_PASSWORD`
- `POSTGRES_DB`

## Instalación
```sh
poetry install
```

## Ejecuciòn Local
```sh
poetry run uvicorn entrypoints.api.main:app
```

## Pruebas
```sh
poetry run pytest --cov=src
```

### Despliegue en Kubernetes (Minukube)
1. **Inicia Minikube**
   ```sh
   minikube start
   ```

2. **(Opcional) Usa el Docker de Minikube**
   ```sh
   eval $(minikube docker-env)
   docker build -t users-app:tag .
   ```

3. **Despliega los recursos**
    Asegúrate de estar en el directorio donde están los archivos (raiz/k8s) YAML y ejecuta:
   ```sh
   kubectl apply -f .
   ```

4. **Accede a la app desde tu navegador**
   ```sh
   minikube service users-app-service
   ```

### Autor
- [Alejandra Pinzón Suárez](https://github.com/sebastian-blip)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/README.md ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/poetry.lock ==========
# This file is automatically @generated by Poetry 2.1.4 and should not be changed by hand.

[[package]]
name = "aiosqlite"
version = "0.21.0"
description = "asyncio bridge to the standard sqlite3 module"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "aiosqlite-0.21.0-py3-none-any.whl", hash = "sha256:2549cf4057f95f53dcba16f2b64e8e2791d7e1adedb13197dd8ed77bb226d7d0"},
    {file = "aiosqlite-0.21.0.tar.gz", hash = "sha256:131bb8056daa3bc875608c631c678cda73922a2d4ba8aec373b19f18c17e7aa3"},
]

[package.dependencies]
typing_extensions = ">=4.0"

[package.extras]
dev = ["attribution (==1.7.1)", "black (==24.3.0)", "build (>=1.2)", "coverage[toml] (==7.6.10)", "flake8 (==7.0.0)", "flake8-bugbear (==24.12.12)", "flit (==3.10.1)", "mypy (==1.14.1)", "ufmt (==2.5.1)", "usort (==1.0.8.post1)"]
docs = ["sphinx (==8.1.3)", "sphinx-mdinclude (==0.6.1)"]

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "annotated_types-0.7.0-py3-none-any.whl", hash = "sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53"},
    {file = "annotated_types-0.7.0.tar.gz", hash = "sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89"},
]

[[package]]
name = "anyio"
version = "4.10.0"
description = "High-level concurrency and networking framework on top of asyncio or Trio"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "anyio-4.10.0-py3-none-any.whl", hash = "sha256:60e474ac86736bbfd6f210f7a61218939c318f43f9972497381f1c5e930ed3d1"},
    {file = "anyio-4.10.0.tar.gz", hash = "sha256:3f3fae35c96039744587aa5b8371e7e8e603c0702999535961dd336026973ba6"},
]

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
trio = ["trio (>=0.26.1)"]

[[package]]
name = "asyncpg"
version = "0.30.0"
description = "An asyncio PostgreSQL driver"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:bfb4dd5ae0699bad2b233672c8fc5ccbd9ad24b89afded02341786887e37927e"},
    {file = "asyncpg-0.30.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:dc1f62c792752a49f88b7e6f774c26077091b44caceb1983509edc18a2222ec0"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3152fef2e265c9c24eec4ee3d22b4f4d2703d30614b0b6753e9ed4115c8a146f"},
    {file = "asyncpg-0.30.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c7255812ac85099a0e1ffb81b10dc477b9973345793776b128a23e60148dd1af"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:578445f09f45d1ad7abddbff2a3c7f7c291738fdae0abffbeb737d3fc3ab8b75"},
    {file = "asyncpg-0.30.0-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:c42f6bb65a277ce4d93f3fba46b91a265631c8df7250592dd4f11f8b0152150f"},
    {file = "asyncpg-0.30.0-cp310-cp310-win32.whl", hash = "sha256:aa403147d3e07a267ada2ae34dfc9324e67ccc4cdca35261c8c22792ba2b10cf"},
    {file = "asyncpg-0.30.0-cp310-cp310-win_amd64.whl", hash = "sha256:fb622c94db4e13137c4c7f98834185049cc50ee01d8f657ef898b6407c7b9c50"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:5e0511ad3dec5f6b4f7a9e063591d407eee66b88c14e2ea636f187da1dcfff6a"},
    {file = "asyncpg-0.30.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:915aeb9f79316b43c3207363af12d0e6fd10776641a7de8a01212afd95bdf0ed"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1c198a00cce9506fcd0bf219a799f38ac7a237745e1d27f0e1f66d3707c84a5a"},
    {file = "asyncpg-0.30.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3326e6d7381799e9735ca2ec9fd7be4d5fef5dcbc3cb555d8a463d8460607956"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:51da377487e249e35bd0859661f6ee2b81db11ad1f4fc036194bc9cb2ead5056"},
    {file = "asyncpg-0.30.0-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:bc6d84136f9c4d24d358f3b02be4b6ba358abd09f80737d1ac7c444f36108454"},
    {file = "asyncpg-0.30.0-cp311-cp311-win32.whl", hash = "sha256:574156480df14f64c2d76450a3f3aaaf26105869cad3865041156b38459e935d"},
    {file = "asyncpg-0.30.0-cp311-cp311-win_amd64.whl", hash = "sha256:3356637f0bd830407b5597317b3cb3571387ae52ddc3bca6233682be88bbbc1f"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:c902a60b52e506d38d7e80e0dd5399f657220f24635fee368117b8b5fce1142e"},
    {file = "asyncpg-0.30.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:aca1548e43bbb9f0f627a04666fedaca23db0a31a84136ad1f868cb15deb6e3a"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6c2a2ef565400234a633da0eafdce27e843836256d40705d83ab7ec42074efb3"},
    {file = "asyncpg-0.30.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1292b84ee06ac8a2ad8e51c7475aa309245874b61333d97411aab835c4a2f737"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:0f5712350388d0cd0615caec629ad53c81e506b1abaaf8d14c93f54b35e3595a"},
    {file = "asyncpg-0.30.0-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:db9891e2d76e6f425746c5d2da01921e9a16b5a71a1c905b13f30e12a257c4af"},
    {file = "asyncpg-0.30.0-cp312-cp312-win32.whl", hash = "sha256:68d71a1be3d83d0570049cd1654a9bdfe506e794ecc98ad0873304a9f35e411e"},
    {file = "asyncpg-0.30.0-cp312-cp312-win_amd64.whl", hash = "sha256:9a0292c6af5c500523949155ec17b7fe01a00ace33b68a476d6b5059f9630305"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:05b185ebb8083c8568ea8a40e896d5f7af4b8554b64d7719c0eaa1eb5a5c3a70"},
    {file = "asyncpg-0.30.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:c47806b1a8cbb0a0db896f4cd34d89942effe353a5035c62734ab13b9f938da3"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9b6fde867a74e8c76c71e2f64f80c64c0f3163e687f1763cfaf21633ec24ec33"},
    {file = "asyncpg-0.30.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:46973045b567972128a27d40001124fbc821c87a6cade040cfcd4fa8a30bcdc4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:9110df111cabc2ed81aad2f35394a00cadf4f2e0635603db6ebbd0fc896f46a4"},
    {file = "asyncpg-0.30.0-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:04ff0785ae7eed6cc138e73fc67b8e51d54ee7a3ce9b63666ce55a0bf095f7ba"},
    {file = "asyncpg-0.30.0-cp313-cp313-win32.whl", hash = "sha256:ae374585f51c2b444510cdf3595b97ece4f233fde739aa14b50e0d64e8a7a590"},
    {file = "asyncpg-0.30.0-cp313-cp313-win_amd64.whl", hash = "sha256:f59b430b8e27557c3fb9869222559f7417ced18688375825f8f12302c34e915e"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:29ff1fc8b5bf724273782ff8b4f57b0f8220a1b2324184846b39d1ab4122031d"},
    {file = "asyncpg-0.30.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:64e899bce0600871b55368b8483e5e3e7f1860c9482e7f12e0a771e747988168"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5b290f4726a887f75dcd1b3006f484252db37602313f806e9ffc4e5996cfe5cb"},
    {file = "asyncpg-0.30.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f86b0e2cd3f1249d6fe6fd6cfe0cd4538ba994e2d8249c0491925629b9104d0f"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:393af4e3214c8fa4c7b86da6364384c0d1b3298d45803375572f415b6f673f38"},
    {file = "asyncpg-0.30.0-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:fd4406d09208d5b4a14db9a9dbb311b6d7aeeab57bded7ed2f8ea41aeef39b34"},
    {file = "asyncpg-0.30.0-cp38-cp38-win32.whl", hash = "sha256:0b448f0150e1c3b96cb0438a0d0aa4871f1472e58de14a3ec320dbb2798fb0d4"},
    {file = "asyncpg-0.30.0-cp38-cp38-win_amd64.whl", hash = "sha256:f23b836dd90bea21104f69547923a02b167d999ce053f3d502081acea2fba15b"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6f4e83f067b35ab5e6371f8a4c93296e0439857b4569850b178a01385e82e9ad"},
    {file = "asyncpg-0.30.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:5df69d55add4efcd25ea2a3b02025b669a285b767bfbf06e356d68dbce4234ff"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a3479a0d9a852c7c84e822c073622baca862d1217b10a02dd57ee4a7a081f708"},
    {file = "asyncpg-0.30.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:26683d3b9a62836fad771a18ecf4659a30f348a561279d6227dab96182f46144"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:1b982daf2441a0ed314bd10817f1606f1c28b1136abd9e4f11335358c2c631cb"},
    {file = "asyncpg-0.30.0-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:1c06a3a50d014b303e5f6fc1e5f95eb28d2cee89cf58384b700da621e5d5e547"},
    {file = "asyncpg-0.30.0-cp39-cp39-win32.whl", hash = "sha256:1b11a555a198b08f5c4baa8f8231c74a366d190755aa4f99aacec5970afe929a"},
    {file = "asyncpg-0.30.0-cp39-cp39-win_amd64.whl", hash = "sha256:8b684a3c858a83cd876f05958823b68e8d14ec01bb0c0d14a6704c5bf9711773"},
    {file = "asyncpg-0.30.0.tar.gz", hash = "sha256:c551e9928ab6707602f44811817f82ba3c446e018bfe1d3abecc8ba5f3eac851"},
]

[package.extras]
docs = ["Sphinx (>=8.1.3,<8.2.0)", "sphinx-rtd-theme (>=1.2.2)"]
gssauth = ["gssapi ; platform_system != \"Windows\"", "sspilib ; platform_system == \"Windows\""]
test = ["distro (>=1.9.0,<1.10.0)", "flake8 (>=6.1,<7.0)", "flake8-pyi (>=24.1.0,<24.2.0)", "gssapi ; platform_system == \"Linux\"", "k5test ; platform_system == \"Linux\"", "mypy (>=1.8.0,<1.9.0)", "sspilib ; platform_system == \"Windows\"", "uvloop (>=0.15.3) ; platform_system != \"Windows\" and python_version < \"3.14.0\""]

[[package]]
name = "bandit"
version = "1.8.6"
description = "Security oriented static analyser for python code."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "bandit-1.8.6-py3-none-any.whl", hash = "sha256:3348e934d736fcdb68b6aa4030487097e23a501adf3e7827b63658df464dddd0"},
    {file = "bandit-1.8.6.tar.gz", hash = "sha256:dbfe9c25fc6961c2078593de55fd19f2559f9e45b99f1272341f5b95dea4e56b"},
]

[package.dependencies]
colorama = {version = ">=0.3.9", markers = "platform_system == \"Windows\""}
PyYAML = ">=5.3.1"
rich = "*"
stevedore = ">=1.20.0"

[package.extras]
baseline = ["GitPython (>=3.1.30)"]
sarif = ["jschema-to-python (>=1.2.3)", "sarif-om (>=1.0.4)"]
test = ["beautifulsoup4 (>=4.8.0)", "coverage (>=4.5.4)", "fixtures (>=3.0.0)", "flake8 (>=4.0.0)", "pylint (==1.9.4)", "stestr (>=2.5.0)", "testscenarios (>=0.5.0)", "testtools (>=2.3.0)"]
toml = ["tomli (>=1.1.0) ; python_version < \"3.11\""]
yaml = ["PyYAML"]

[[package]]
name = "black"
version = "25.1.0"
description = "The uncompromising code formatter."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "black-25.1.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:759e7ec1e050a15f89b770cefbf91ebee8917aac5c20483bc2d80a6c3a04df32"},
    {file = "black-25.1.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e519ecf93120f34243e6b0054db49c00a35f84f195d5bce7e9f5cfc578fc2da"},
    {file = "black-25.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:055e59b198df7ac0b7efca5ad7ff2516bca343276c466be72eb04a3bcc1f82d7"},
    {file = "black-25.1.0-cp310-cp310-win_amd64.whl", hash = "sha256:db8ea9917d6f8fc62abd90d944920d95e73c83a5ee3383493e35d271aca872e9"},
    {file = "black-25.1.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:a39337598244de4bae26475f77dda852ea00a93bd4c728e09eacd827ec929df0"},
    {file = "black-25.1.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:96c1c7cd856bba8e20094e36e0f948718dc688dba4a9d78c3adde52b9e6c2299"},
    {file = "black-25.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:bce2e264d59c91e52d8000d507eb20a9aca4a778731a08cfff7e5ac4a4bb7096"},
    {file = "black-25.1.0-cp311-cp311-win_amd64.whl", hash = "sha256:172b1dbff09f86ce6f4eb8edf9dede08b1fce58ba194c87d7a4f1a5aa2f5b3c2"},
    {file = "black-25.1.0-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:4b60580e829091e6f9238c848ea6750efed72140b91b048770b64e74fe04908b"},
    {file = "black-25.1.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:1e2978f6df243b155ef5fa7e558a43037c3079093ed5d10fd84c43900f2d8ecc"},
    {file = "black-25.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:3b48735872ec535027d979e8dcb20bf4f70b5ac75a8ea99f127c106a7d7aba9f"},
    {file = "black-25.1.0-cp312-cp312-win_amd64.whl", hash = "sha256:ea0213189960bda9cf99be5b8c8ce66bb054af5e9e861249cd23471bd7b0b3ba"},
    {file = "black-25.1.0-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:8f0b18a02996a836cc9c9c78e5babec10930862827b1b724ddfe98ccf2f2fe4f"},
    {file = "black-25.1.0-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:afebb7098bfbc70037a053b91ae8437c3857482d3a690fefc03e9ff7aa9a5fd3"},
    {file = "black-25.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:030b9759066a4ee5e5aca28c3c77f9c64789cdd4de8ac1df642c40b708be6171"},
    {file = "black-25.1.0-cp313-cp313-win_amd64.whl", hash = "sha256:a22f402b410566e2d1c950708c77ebf5ebd5d0d88a6a2e87c86d9fb48afa0d18"},
    {file = "black-25.1.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:a1ee0a0c330f7b5130ce0caed9936a904793576ef4d2b98c40835d6a65afa6a0"},
    {file = "black-25.1.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:f3df5f1bf91d36002b0a75389ca8663510cf0531cca8aa5c1ef695b46d98655f"},
    {file = "black-25.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl", hash = "sha256:d9e6827d563a2c820772b32ce8a42828dc6790f095f441beef18f96aa6f8294e"},
    {file = "black-25.1.0-cp39-cp39-win_amd64.whl", hash = "sha256:bacabb307dca5ebaf9c118d2d2f6903da0d62c9faa82bd21a33eecc319559355"},
    {file = "black-25.1.0-py3-none-any.whl", hash = "sha256:95e8176dae143ba9097f351d174fdaf0ccd29efb414b362ae3fd72bf0f710717"},
    {file = "black-25.1.0.tar.gz", hash = "sha256:33496d5cd1222ad73391352b4ae8da15253c5de89b93a80b3e2c8d9a19ec2666"},
]

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
packaging = ">=22.0"
pathspec = ">=0.9.0"
platformdirs = ">=2"

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.10)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "certifi"
version = "2025.8.3"
description = "Python package for providing Mozilla's CA Bundle."
optional = false
python-versions = ">=3.7"
groups = ["main", "dev"]
files = [
    {file = "certifi-2025.8.3-py3-none-any.whl", hash = "sha256:f6c12493cfb1b06ba2ff328595af9350c65d6644968e5d3a2ffd78699af217a5"},
    {file = "certifi-2025.8.3.tar.gz", hash = "sha256:e564105f78ded564e3ae7c923924435e1daa7463faeab5bb932bc53ffae63407"},
]

[[package]]
name = "click"
version = "8.2.1"
description = "Composable command line interface toolkit"
optional = false
python-versions = ">=3.10"
groups = ["main"]
files = [
    {file = "click-8.2.1-py3-none-any.whl", hash = "sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b"},
    {file = "click-8.2.1.tar.gz", hash = "sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202"},
]

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"
groups = ["main", "dev"]
files = [
    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},
    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},
]
markers = {main = "platform_system == \"Windows\" or sys_platform == \"win32\"", dev = "sys_platform == \"win32\""}

[[package]]
name = "coverage"
version = "7.10.5"
description = "Code coverage measurement for Python"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "coverage-7.10.5-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:c6a5c3414bfc7451b879141ce772c546985163cf553f08e0f135f0699a911801"},
    {file = "coverage-7.10.5-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:bc8e4d99ce82f1710cc3c125adc30fd1487d3cf6c2cd4994d78d68a47b16989a"},
    {file = "coverage-7.10.5-cp310-cp310-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:02252dc1216e512a9311f596b3169fad54abcb13827a8d76d5630c798a50a754"},
    {file = "coverage-7.10.5-cp310-cp310-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:73269df37883e02d460bee0cc16be90509faea1e3bd105d77360b512d5bb9c33"},
    {file = "coverage-7.10.5-cp310-cp310-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:1f8a81b0614642f91c9effd53eec284f965577591f51f547a1cbeb32035b4c2f"},
    {file = "coverage-7.10.5-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:6a29f8e0adb7f8c2b95fa2d4566a1d6e6722e0a637634c6563cb1ab844427dd9"},
    {file = "coverage-7.10.5-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:fcf6ab569436b4a647d4e91accba12509ad9f2554bc93d3aee23cc596e7f99c3"},
    {file = "coverage-7.10.5-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:90dc3d6fb222b194a5de60af8d190bedeeddcbc7add317e4a3cd333ee6b7c879"},
    {file = "coverage-7.10.5-cp310-cp310-win32.whl", hash = "sha256:414a568cd545f9dc75f0686a0049393de8098414b58ea071e03395505b73d7a8"},
    {file = "coverage-7.10.5-cp310-cp310-win_amd64.whl", hash = "sha256:e551f9d03347196271935fd3c0c165f0e8c049220280c1120de0084d65e9c7ff"},
    {file = "coverage-7.10.5-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:c177e6ffe2ebc7c410785307758ee21258aa8e8092b44d09a2da767834f075f2"},
    {file = "coverage-7.10.5-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:14d6071c51ad0f703d6440827eaa46386169b5fdced42631d5a5ac419616046f"},
    {file = "coverage-7.10.5-cp311-cp311-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:61f78c7c3bc272a410c5ae3fde7792b4ffb4acc03d35a7df73ca8978826bb7ab"},
    {file = "coverage-7.10.5-cp311-cp311-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:f39071caa126f69d63f99b324fb08c7b1da2ec28cbb1fe7b5b1799926492f65c"},
    {file = "coverage-7.10.5-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:343a023193f04d46edc46b2616cdbee68c94dd10208ecd3adc56fcc54ef2baa1"},
    {file = "coverage-7.10.5-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:585ffe93ae5894d1ebdee69fc0b0d4b7c75d8007983692fb300ac98eed146f78"},
    {file = "coverage-7.10.5-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:b0ef4e66f006ed181df29b59921bd8fc7ed7cd6a9289295cd8b2824b49b570df"},
    {file = "coverage-7.10.5-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:eb7b0bbf7cc1d0453b843eca7b5fa017874735bef9bfdfa4121373d2cc885ed6"},
    {file = "coverage-7.10.5-cp311-cp311-win32.whl", hash = "sha256:1d043a8a06987cc0c98516e57c4d3fc2c1591364831e9deb59c9e1b4937e8caf"},
    {file = "coverage-7.10.5-cp311-cp311-win_amd64.whl", hash = "sha256:fefafcca09c3ac56372ef64a40f5fe17c5592fab906e0fdffd09543f3012ba50"},
    {file = "coverage-7.10.5-cp311-cp311-win_arm64.whl", hash = "sha256:7e78b767da8b5fc5b2faa69bb001edafcd6f3995b42a331c53ef9572c55ceb82"},
    {file = "coverage-7.10.5-cp312-cp312-macosx_10_13_x86_64.whl", hash = "sha256:c2d05c7e73c60a4cecc7d9b60dbfd603b4ebc0adafaef371445b47d0f805c8a9"},
    {file = "coverage-7.10.5-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:32ddaa3b2c509778ed5373b177eb2bf5662405493baeff52278a0b4f9415188b"},
    {file = "coverage-7.10.5-cp312-cp312-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:dd382410039fe062097aa0292ab6335a3f1e7af7bba2ef8d27dcda484918f20c"},
    {file = "coverage-7.10.5-cp312-cp312-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:7fa22800f3908df31cea6fb230f20ac49e343515d968cc3a42b30d5c3ebf9b5a"},
    {file = "coverage-7.10.5-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:f366a57ac81f5e12797136552f5b7502fa053c861a009b91b80ed51f2ce651c6"},
    {file = "coverage-7.10.5-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:5f1dc8f1980a272ad4a6c84cba7981792344dad33bf5869361576b7aef42733a"},
    {file = "coverage-7.10.5-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:2285c04ee8676f7938b02b4936d9b9b672064daab3187c20f73a55f3d70e6b4a"},
    {file = "coverage-7.10.5-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:c2492e4dd9daab63f5f56286f8a04c51323d237631eb98505d87e4c4ff19ec34"},
    {file = "coverage-7.10.5-cp312-cp312-win32.whl", hash = "sha256:38a9109c4ee8135d5df5505384fc2f20287a47ccbe0b3f04c53c9a1989c2bbaf"},
    {file = "coverage-7.10.5-cp312-cp312-win_amd64.whl", hash = "sha256:6b87f1ad60b30bc3c43c66afa7db6b22a3109902e28c5094957626a0143a001f"},
    {file = "coverage-7.10.5-cp312-cp312-win_arm64.whl", hash = "sha256:672a6c1da5aea6c629819a0e1461e89d244f78d7b60c424ecf4f1f2556c041d8"},
    {file = "coverage-7.10.5-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:ef3b83594d933020f54cf65ea1f4405d1f4e41a009c46df629dd964fcb6e907c"},
    {file = "coverage-7.10.5-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:2b96bfdf7c0ea9faebce088a3ecb2382819da4fbc05c7b80040dbc428df6af44"},
    {file = "coverage-7.10.5-cp313-cp313-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:63df1fdaffa42d914d5c4d293e838937638bf75c794cf20bee12978fc8c4e3bc"},
    {file = "coverage-7.10.5-cp313-cp313-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:8002dc6a049aac0e81ecec97abfb08c01ef0c1fbf962d0c98da3950ace89b869"},
    {file = "coverage-7.10.5-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:63d4bb2966d6f5f705a6b0c6784c8969c468dbc4bcf9d9ded8bff1c7e092451f"},
    {file = "coverage-7.10.5-cp313-cp313-musllinux_1_2_aarch64.whl", hash = "sha256:1f672efc0731a6846b157389b6e6d5d5e9e59d1d1a23a5c66a99fd58339914d5"},
    {file = "coverage-7.10.5-cp313-cp313-musllinux_1_2_i686.whl", hash = "sha256:3f39cef43d08049e8afc1fde4a5da8510fc6be843f8dea350ee46e2a26b2f54c"},
    {file = "coverage-7.10.5-cp313-cp313-musllinux_1_2_x86_64.whl", hash = "sha256:2968647e3ed5a6c019a419264386b013979ff1fb67dd11f5c9886c43d6a31fc2"},
    {file = "coverage-7.10.5-cp313-cp313-win32.whl", hash = "sha256:0d511dda38595b2b6934c2b730a1fd57a3635c6aa2a04cb74714cdfdd53846f4"},
    {file = "coverage-7.10.5-cp313-cp313-win_amd64.whl", hash = "sha256:9a86281794a393513cf117177fd39c796b3f8e3759bb2764259a2abba5cce54b"},
    {file = "coverage-7.10.5-cp313-cp313-win_arm64.whl", hash = "sha256:cebd8e906eb98bb09c10d1feed16096700b1198d482267f8bf0474e63a7b8d84"},
    {file = "coverage-7.10.5-cp313-cp313t-macosx_10_13_x86_64.whl", hash = "sha256:0520dff502da5e09d0d20781df74d8189ab334a1e40d5bafe2efaa4158e2d9e7"},
    {file = "coverage-7.10.5-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:d9cd64aca68f503ed3f1f18c7c9174cbb797baba02ca8ab5112f9d1c0328cd4b"},
    {file = "coverage-7.10.5-cp313-cp313t-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:0913dd1613a33b13c4f84aa6e3f4198c1a21ee28ccb4f674985c1f22109f0aae"},
    {file = "coverage-7.10.5-cp313-cp313t-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:1b7181c0feeb06ed8a02da02792f42f829a7b29990fef52eff257fef0885d760"},
    {file = "coverage-7.10.5-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:36d42b7396b605f774d4372dd9c49bed71cbabce4ae1ccd074d155709dd8f235"},
    {file = "coverage-7.10.5-cp313-cp313t-musllinux_1_2_aarch64.whl", hash = "sha256:b4fdc777e05c4940b297bf47bf7eedd56a39a61dc23ba798e4b830d585486ca5"},
    {file = "coverage-7.10.5-cp313-cp313t-musllinux_1_2_i686.whl", hash = "sha256:42144e8e346de44a6f1dbd0a56575dd8ab8dfa7e9007da02ea5b1c30ab33a7db"},
    {file = "coverage-7.10.5-cp313-cp313t-musllinux_1_2_x86_64.whl", hash = "sha256:66c644cbd7aed8fe266d5917e2c9f65458a51cfe5eeff9c05f15b335f697066e"},
    {file = "coverage-7.10.5-cp313-cp313t-win32.whl", hash = "sha256:2d1b73023854068c44b0c554578a4e1ef1b050ed07cf8b431549e624a29a66ee"},
    {file = "coverage-7.10.5-cp313-cp313t-win_amd64.whl", hash = "sha256:54a1532c8a642d8cc0bd5a9a51f5a9dcc440294fd06e9dda55e743c5ec1a8f14"},
    {file = "coverage-7.10.5-cp313-cp313t-win_arm64.whl", hash = "sha256:74d5b63fe3f5f5d372253a4ef92492c11a4305f3550631beaa432fc9df16fcff"},
    {file = "coverage-7.10.5-cp314-cp314-macosx_10_13_x86_64.whl", hash = "sha256:68c5e0bc5f44f68053369fa0d94459c84548a77660a5f2561c5e5f1e3bed7031"},
    {file = "coverage-7.10.5-cp314-cp314-macosx_11_0_arm64.whl", hash = "sha256:cf33134ffae93865e32e1e37df043bef15a5e857d8caebc0099d225c579b0fa3"},
    {file = "coverage-7.10.5-cp314-cp314-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:ad8fa9d5193bafcf668231294241302b5e683a0518bf1e33a9a0dfb142ec3031"},
    {file = "coverage-7.10.5-cp314-cp314-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:146fa1531973d38ab4b689bc764592fe6c2f913e7e80a39e7eeafd11f0ef6db2"},
    {file = "coverage-7.10.5-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:6013a37b8a4854c478d3219ee8bc2392dea51602dd0803a12d6f6182a0061762"},
    {file = "coverage-7.10.5-cp314-cp314-musllinux_1_2_aarch64.whl", hash = "sha256:eb90fe20db9c3d930fa2ad7a308207ab5b86bf6a76f54ab6a40be4012d88fcae"},
    {file = "coverage-7.10.5-cp314-cp314-musllinux_1_2_i686.whl", hash = "sha256:384b34482272e960c438703cafe63316dfbea124ac62006a455c8410bf2a2262"},
    {file = "coverage-7.10.5-cp314-cp314-musllinux_1_2_x86_64.whl", hash = "sha256:467dc74bd0a1a7de2bedf8deaf6811f43602cb532bd34d81ffd6038d6d8abe99"},
    {file = "coverage-7.10.5-cp314-cp314-win32.whl", hash = "sha256:556d23d4e6393ca898b2e63a5bca91e9ac2d5fb13299ec286cd69a09a7187fde"},
    {file = "coverage-7.10.5-cp314-cp314-win_amd64.whl", hash = "sha256:f4446a9547681533c8fa3e3c6cf62121eeee616e6a92bd9201c6edd91beffe13"},
    {file = "coverage-7.10.5-cp314-cp314-win_arm64.whl", hash = "sha256:5e78bd9cf65da4c303bf663de0d73bf69f81e878bf72a94e9af67137c69b9fe9"},
    {file = "coverage-7.10.5-cp314-cp314t-macosx_10_13_x86_64.whl", hash = "sha256:5661bf987d91ec756a47c7e5df4fbcb949f39e32f9334ccd3f43233bbb65e508"},
    {file = "coverage-7.10.5-cp314-cp314t-macosx_11_0_arm64.whl", hash = "sha256:a46473129244db42a720439a26984f8c6f834762fc4573616c1f37f13994b357"},
    {file = "coverage-7.10.5-cp314-cp314t-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:1f64b8d3415d60f24b058b58d859e9512624bdfa57a2d1f8aff93c1ec45c429b"},
    {file = "coverage-7.10.5-cp314-cp314t-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:44d43de99a9d90b20e0163f9770542357f58860a26e24dc1d924643bd6aa7cb4"},
    {file = "coverage-7.10.5-cp314-cp314t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:a931a87e5ddb6b6404e65443b742cb1c14959622777f2a4efd81fba84f5d91ba"},
    {file = "coverage-7.10.5-cp314-cp314t-musllinux_1_2_aarch64.whl", hash = "sha256:f9559b906a100029274448f4c8b8b0a127daa4dade5661dfd821b8c188058842"},
    {file = "coverage-7.10.5-cp314-cp314t-musllinux_1_2_i686.whl", hash = "sha256:b08801e25e3b4526ef9ced1aa29344131a8f5213c60c03c18fe4c6170ffa2874"},
    {file = "coverage-7.10.5-cp314-cp314t-musllinux_1_2_x86_64.whl", hash = "sha256:ed9749bb8eda35f8b636fb7632f1c62f735a236a5d4edadd8bbcc5ea0542e732"},
    {file = "coverage-7.10.5-cp314-cp314t-win32.whl", hash = "sha256:609b60d123fc2cc63ccee6d17e4676699075db72d14ac3c107cc4976d516f2df"},
    {file = "coverage-7.10.5-cp314-cp314t-win_amd64.whl", hash = "sha256:0666cf3d2c1626b5a3463fd5b05f5e21f99e6aec40a3192eee4d07a15970b07f"},
    {file = "coverage-7.10.5-cp314-cp314t-win_arm64.whl", hash = "sha256:bc85eb2d35e760120540afddd3044a5bf69118a91a296a8b3940dfc4fdcfe1e2"},
    {file = "coverage-7.10.5-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:62835c1b00c4a4ace24c1a88561a5a59b612fbb83a525d1c70ff5720c97c0610"},
    {file = "coverage-7.10.5-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:5255b3bbcc1d32a4069d6403820ac8e6dbcc1d68cb28a60a1ebf17e47028e898"},
    {file = "coverage-7.10.5-cp39-cp39-manylinux1_i686.manylinux_2_28_i686.manylinux_2_5_i686.whl", hash = "sha256:3876385722e335d6e991c430302c24251ef9c2a9701b2b390f5473199b1b8ebf"},
    {file = "coverage-7.10.5-cp39-cp39-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl", hash = "sha256:8048ce4b149c93447a55d279078c8ae98b08a6951a3c4d2d7e87f4efc7bfe100"},
    {file = "coverage-7.10.5-cp39-cp39-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl", hash = "sha256:4028e7558e268dd8bcf4d9484aad393cafa654c24b4885f6f9474bf53183a82a"},
    {file = "coverage-7.10.5-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:03f47dc870eec0367fcdd603ca6a01517d2504e83dc18dbfafae37faec66129a"},
    {file = "coverage-7.10.5-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:2d488d7d42b6ded7ea0704884f89dcabd2619505457de8fc9a6011c62106f6e5"},
    {file = "coverage-7.10.5-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:b3dcf2ead47fa8be14224ee817dfc1df98043af568fe120a22f81c0eb3c34ad2"},
    {file = "coverage-7.10.5-cp39-cp39-win32.whl", hash = "sha256:02650a11324b80057b8c9c29487020073d5e98a498f1857f37e3f9b6ea1b2426"},
    {file = "coverage-7.10.5-cp39-cp39-win_amd64.whl", hash = "sha256:b45264dd450a10f9e03237b41a9a24e85cbb1e278e5a32adb1a303f58f0017f3"},
    {file = "coverage-7.10.5-py3-none-any.whl", hash = "sha256:0be24d35e4db1d23d0db5c0f6a74a962e2ec83c426b5cac09f4234aadef38e4a"},
    {file = "coverage-7.10.5.tar.gz", hash = "sha256:f2e57716a78bc3ae80b2207be0709a3b2b63b9f2dcf9740ee6ac03588a2015b6"},
]

[package.extras]
toml = ["tomli ; python_full_version <= \"3.11.0a6\""]

[[package]]
name = "dnspython"
version = "2.7.0"
description = "DNS toolkit"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "dnspython-2.7.0-py3-none-any.whl", hash = "sha256:b4c34b7d10b51bcc3a5071e7b8dee77939f1e878477eeecc965e9835f63c6c86"},
    {file = "dnspython-2.7.0.tar.gz", hash = "sha256:ce9c432eda0dc91cf618a5cedf1a4e142651196bbcd2c80e89ed5a907e5cfaf1"},
]

[package.extras]
dev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "hypercorn (>=0.16.0)", "mypy (>=1.8)", "pylint (>=3)", "pytest (>=7.4)", "pytest-cov (>=4.1.0)", "quart-trio (>=0.11.0)", "sphinx (>=7.2.0)", "sphinx-rtd-theme (>=2.0.0)", "twine (>=4.0.0)", "wheel (>=0.42.0)"]
dnssec = ["cryptography (>=43)"]
doh = ["h2 (>=4.1.0)", "httpcore (>=1.0.0)", "httpx (>=0.26.0)"]
doq = ["aioquic (>=1.0.0)"]
idna = ["idna (>=3.7)"]
trio = ["trio (>=0.23)"]
wmi = ["wmi (>=1.5.1)"]

[[package]]
name = "email-validator"
version = "2.2.0"
description = "A robust email address syntax and deliverability validation library."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "email_validator-2.2.0-py3-none-any.whl", hash = "sha256:561977c2d73ce3611850a06fa56b414621e0c8faa9d66f2611407d87465da631"},
    {file = "email_validator-2.2.0.tar.gz", hash = "sha256:cb690f344c617a714f22e66ae771445a1ceb46821152df8e165c5f9a364582b7"},
]

[package.dependencies]
dnspython = ">=2.0.0"
idna = ">=2.0.0"

[[package]]
name = "fastapi"
version = "0.116.1"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "fastapi-0.116.1-py3-none-any.whl", hash = "sha256:c46ac7c312df840f0c9e220f7964bada936781bc4e2e6eb71f1c4d7553786565"},
    {file = "fastapi-0.116.1.tar.gz", hash = "sha256:ed52cbf946abfd70c5a0dccb24673f0670deeb517a88b3544d03c2a6bf283143"},
]

[package.dependencies]
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0 || >2.0.0,<2.0.1 || >2.0.1,<2.1.0 || >2.1.0,<3.0.0"
starlette = ">=0.40.0,<0.48.0"
typing-extensions = ">=4.8.0"

[package.extras]
all = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.8)", "httpx (>=0.23.0)", "itsdangerous (>=1.1.0)", "jinja2 (>=3.1.5)", "orjson (>=3.2.1)", "pydantic-extra-types (>=2.0.0)", "pydantic-settings (>=2.0.0)", "python-multipart (>=0.0.18)", "pyyaml (>=5.3.1)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)", "uvicorn[standard] (>=0.12.0)"]
standard = ["email-validator (>=2.0.0)", "fastapi-cli[standard] (>=0.0.8)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]
standard-no-fastapi-cloud-cli = ["email-validator (>=2.0.0)", "fastapi-cli[standard-no-fastapi-cloud-cli] (>=0.0.8)", "httpx (>=0.23.0)", "jinja2 (>=3.1.5)", "python-multipart (>=0.0.18)", "uvicorn[standard] (>=0.12.0)"]

[[package]]
name = "h11"
version = "0.16.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "h11-0.16.0-py3-none-any.whl", hash = "sha256:63cf8bbe7522de3bf65932fda1d9c2772064ffb3dae62d55932da54b31cb6c86"},
    {file = "h11-0.16.0.tar.gz", hash = "sha256:4e35b956cf45792e4caa5885e69fba00bdbc6ffafbfa020300e549b208ee5ff1"},
]

[[package]]
name = "httpcore"
version = "1.0.9"
description = "A minimal low-level HTTP client."
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "httpcore-1.0.9-py3-none-any.whl", hash = "sha256:2d400746a40668fc9dec9810239072b40b4484b640a8c38fd654a024c7a1bf55"},
    {file = "httpcore-1.0.9.tar.gz", hash = "sha256:6e34463af53fd2ab5d807f399a9b45ea31c3dfa2276f15a2c3f00afff6e176e8"},
]

[package.dependencies]
certifi = "*"
h11 = ">=0.16"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (==1.*)"]
trio = ["trio (>=0.22.0,<1.0)"]

[[package]]
name = "httpx"
version = "0.28.1"
description = "The next generation HTTP client."
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "httpx-0.28.1-py3-none-any.whl", hash = "sha256:d909fcccc110f8c7faf814ca82a9a4d816bc5a6dbfea25d6591d6985b8ba59ad"},
    {file = "httpx-0.28.1.tar.gz", hash = "sha256:75e98c5f16b0f35b567856f597f06ff2270a374470a5c2392242528e3e3e42fc"},
]

[package.dependencies]
anyio = "*"
certifi = "*"
httpcore = "==1.*"
idna = "*"

[package.extras]
brotli = ["brotli ; platform_python_implementation == \"CPython\"", "brotlicffi ; platform_python_implementation != \"CPython\""]
cli = ["click (==8.*)", "pygments (==2.*)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (==1.*)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
optional = false
python-versions = ">=3.6"
groups = ["main", "dev"]
files = [
    {file = "idna-3.10-py3-none-any.whl", hash = "sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3"},
    {file = "idna-3.10.tar.gz", hash = "sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9"},
]

[package.extras]
all = ["flake8 (>=7.1.1)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "ruff (>=0.6.2)"]

[[package]]
name = "iniconfig"
version = "2.1.0"
description = "brain-dead simple config-ini parsing"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "iniconfig-2.1.0-py3-none-any.whl", hash = "sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760"},
    {file = "iniconfig-2.1.0.tar.gz", hash = "sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7"},
]

[[package]]
name = "iso8601"
version = "2.1.0"
description = "Simple module to parse ISO 8601 dates"
optional = false
python-versions = ">=3.7,<4.0"
groups = ["main"]
markers = "python_version < \"4.0\""
files = [
    {file = "iso8601-2.1.0-py3-none-any.whl", hash = "sha256:aac4145c4dcb66ad8b648a02830f5e2ff6c24af20f4f482689be402db2429242"},
    {file = "iso8601-2.1.0.tar.gz", hash = "sha256:6b1d3829ee8921c4301998c909f7829fa9ed3cbdac0d3b16af2d743aed1ba8df"},
]

[[package]]
name = "isort"
version = "6.0.1"
description = "A Python utility / library to sort Python imports."
optional = false
python-versions = ">=3.9.0"
groups = ["main"]
files = [
    {file = "isort-6.0.1-py3-none-any.whl", hash = "sha256:2dc5d7f65c9678d94c88dfc29161a320eec67328bc97aad576874cb4be1e9615"},
    {file = "isort-6.0.1.tar.gz", hash = "sha256:1cb5df28dfbc742e490c5e41bad6da41b805b0a8be7bc93cd0fb2a8a890ac450"},
]

[package.extras]
colors = ["colorama"]
plugins = ["setuptools"]

[[package]]
name = "markdown-it-py"
version = "4.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
optional = false
python-versions = ">=3.10"
groups = ["main"]
files = [
    {file = "markdown_it_py-4.0.0-py3-none-any.whl", hash = "sha256:87327c59b172c5011896038353a81343b6754500a08cd7a4973bb48c6d578147"},
    {file = "markdown_it_py-4.0.0.tar.gz", hash = "sha256:cb0a2b4aa34f932c007117b194e945bd74e0ec24133ceb5bac59009cda1cb9f3"},
]

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "markdown-it-pyrs", "mistletoe (>=1.0,<2.0)", "mistune (>=3.0,<4.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins (>=0.5.0)"]
profiling = ["gprof2dot"]
rtd = ["ipykernel", "jupyter_sphinx", "mdit-py-plugins (>=0.5.0)", "myst-parser", "pyyaml", "sphinx", "sphinx-book-theme (>=1.0,<2.0)", "sphinx-copybutton", "sphinx-design"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions", "requests"]

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},
    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},
]

[[package]]
name = "mypy-extensions"
version = "1.1.0"
description = "Type system extensions for programs checked with the mypy type checker."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "mypy_extensions-1.1.0-py3-none-any.whl", hash = "sha256:1be4cccdb0f2482337c4743e60421de3a356cd97508abadd57d47403e94f5505"},
    {file = "mypy_extensions-1.1.0.tar.gz", hash = "sha256:52e68efc3284861e772bbcd66823fde5ae21fd2fdb51c62a211403730b916558"},
]

[[package]]
name = "packaging"
version = "25.0"
description = "Core utilities for Python packages"
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "packaging-25.0-py3-none-any.whl", hash = "sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484"},
    {file = "packaging-25.0.tar.gz", hash = "sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f"},
]

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "pathspec-0.12.1-py3-none-any.whl", hash = "sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08"},
    {file = "pathspec-0.12.1.tar.gz", hash = "sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712"},
]

[[package]]
name = "pbr"
version = "7.0.1"
description = "Python Build Reasonableness"
optional = false
python-versions = ">=2.6"
groups = ["main"]
files = [
    {file = "pbr-7.0.1-py2.py3-none-any.whl", hash = "sha256:32df5156fbeccb6f8a858d1ebc4e465dcf47d6cc7a4895d5df9aa951c712fc35"},
    {file = "pbr-7.0.1.tar.gz", hash = "sha256:3ecbcb11d2b8551588ec816b3756b1eb4394186c3b689b17e04850dfc20f7e57"},
]

[package.dependencies]
setuptools = "*"

[[package]]
name = "platformdirs"
version = "4.3.8"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "platformdirs-4.3.8-py3-none-any.whl", hash = "sha256:ff7059bb7eb1179e2685604f4aaf157cfd9535242bd23742eadc3c13542139b4"},
    {file = "platformdirs-4.3.8.tar.gz", hash = "sha256:3d512d96e16bcb959a814c9f348431070822a6496326a4be0911c40b5a74c2bc"},
]

[package.extras]
docs = ["furo (>=2024.8.6)", "proselint (>=0.14)", "sphinx (>=8.1.3)", "sphinx-autodoc-typehints (>=3)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest (>=8.3.4)", "pytest-cov (>=6)", "pytest-mock (>=3.14)"]
type = ["mypy (>=1.14.1)"]

[[package]]
name = "pluggy"
version = "1.6.0"
description = "plugin and hook calling mechanisms for python"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pluggy-1.6.0-py3-none-any.whl", hash = "sha256:e920276dd6813095e9377c0bc5566d94c932c33b27a3e3945d8389c374dd4746"},
    {file = "pluggy-1.6.0.tar.gz", hash = "sha256:7dcc130b76258d33b90f61b658791dede3486c3e6bfb003ee5c9bfb396dd22f3"},
]

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["coverage", "pytest", "pytest-benchmark"]

[[package]]
name = "pydantic"
version = "2.11.7"
description = "Data validation using Python type hints"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "pydantic-2.11.7-py3-none-any.whl", hash = "sha256:dde5df002701f6de26248661f6835bbe296a47bf73990135c7d07ce741b9623b"},
    {file = "pydantic-2.11.7.tar.gz", hash = "sha256:d989c3c6cb79469287b1569f7447a17848c998458d49ebe294e975b9baf0f0db"},
]

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.33.2"
typing-extensions = ">=4.12.2"
typing-inspection = ">=0.4.0"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata ; python_version >= \"3.9\" and platform_system == \"Windows\""]

[[package]]
name = "pydantic-core"
version = "2.33.2"
description = "Core functionality for Pydantic validation and serialization"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "pydantic_core-2.33.2-cp310-cp310-macosx_10_12_x86_64.whl", hash = "sha256:2b3d326aaef0c0399d9afffeb6367d5e26ddc24d351dbc9c636840ac355dc5d8"},
    {file = "pydantic_core-2.33.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0e5b2671f05ba48b94cb90ce55d8bdcaaedb8ba00cc5359f6810fc918713983d"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0069c9acc3f3981b9ff4cdfaf088e98d83440a4c7ea1bc07460af3d4dc22e72d"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:d53b22f2032c42eaaf025f7c40c2e3b94568ae077a606f006d206a463bc69572"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:0405262705a123b7ce9f0b92f123334d67b70fd1f20a9372b907ce1080c7ba02"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:4b25d91e288e2c4e0662b8038a28c6a07eaac3e196cfc4ff69de4ea3db992a1b"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6bdfe4b3789761f3bcb4b1ddf33355a71079858958e3a552f16d5af19768fef2"},
    {file = "pydantic_core-2.33.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:efec8db3266b76ef9607c2c4c419bdb06bf335ae433b80816089ea7585816f6a"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:031c57d67ca86902726e0fae2214ce6770bbe2f710dc33063187a68744a5ecac"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_armv7l.whl", hash = "sha256:f8de619080e944347f5f20de29a975c2d815d9ddd8be9b9b7268e2e3ef68605a"},
    {file = "pydantic_core-2.33.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:73662edf539e72a9440129f231ed3757faab89630d291b784ca99237fb94db2b"},
    {file = "pydantic_core-2.33.2-cp310-cp310-win32.whl", hash = "sha256:0a39979dcbb70998b0e505fb1556a1d550a0781463ce84ebf915ba293ccb7e22"},
    {file = "pydantic_core-2.33.2-cp310-cp310-win_amd64.whl", hash = "sha256:b0379a2b24882fef529ec3b4987cb5d003b9cda32256024e6fe1586ac45fc640"},
    {file = "pydantic_core-2.33.2-cp311-cp311-macosx_10_12_x86_64.whl", hash = "sha256:4c5b0a576fb381edd6d27f0a85915c6daf2f8138dc5c267a57c08a62900758c7"},
    {file = "pydantic_core-2.33.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e799c050df38a639db758c617ec771fd8fb7a5f8eaaa4b27b101f266b216a246"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dc46a01bf8d62f227d5ecee74178ffc448ff4e5197c756331f71efcc66dc980f"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:a144d4f717285c6d9234a66778059f33a89096dfb9b39117663fd8413d582dcc"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:73cf6373c21bc80b2e0dc88444f41ae60b2f070ed02095754eb5a01df12256de"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3dc625f4aa79713512d1976fe9f0bc99f706a9dee21dfd1810b4bbbf228d0e8a"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:881b21b5549499972441da4758d662aeea93f1923f953e9cbaff14b8b9565aef"},
    {file = "pydantic_core-2.33.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bdc25f3681f7b78572699569514036afe3c243bc3059d3942624e936ec93450e"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:fe5b32187cbc0c862ee201ad66c30cf218e5ed468ec8dc1cf49dec66e160cc4d"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_armv7l.whl", hash = "sha256:bc7aee6f634a6f4a95676fcb5d6559a2c2a390330098dba5e5a5f28a2e4ada30"},
    {file = "pydantic_core-2.33.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:235f45e5dbcccf6bd99f9f472858849f73d11120d76ea8707115415f8e5ebebf"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win32.whl", hash = "sha256:6368900c2d3ef09b69cb0b913f9f8263b03786e5b2a387706c5afb66800efd51"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win_amd64.whl", hash = "sha256:1e063337ef9e9820c77acc768546325ebe04ee38b08703244c1309cccc4f1bab"},
    {file = "pydantic_core-2.33.2-cp311-cp311-win_arm64.whl", hash = "sha256:6b99022f1d19bc32a4c2a0d544fc9a76e3be90f0b3f4af413f87d38749300e65"},
    {file = "pydantic_core-2.33.2-cp312-cp312-macosx_10_12_x86_64.whl", hash = "sha256:a7ec89dc587667f22b6a0b6579c249fca9026ce7c333fc142ba42411fa243cdc"},
    {file = "pydantic_core-2.33.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:3c6db6e52c6d70aa0d00d45cdb9b40f0433b96380071ea80b09277dba021ddf7"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4e61206137cbc65e6d5256e1166f88331d3b6238e082d9f74613b9b765fb9025"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:eb8c529b2819c37140eb51b914153063d27ed88e3bdc31b71198a198e921e011"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c52b02ad8b4e2cf14ca7b3d918f3eb0ee91e63b3167c32591e57c4317e134f8f"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:96081f1605125ba0855dfda83f6f3df5ec90c61195421ba72223de35ccfb2f88"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8f57a69461af2a5fa6e6bbd7a5f60d3b7e6cebb687f55106933188e79ad155c1"},
    {file = "pydantic_core-2.33.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:572c7e6c8bb4774d2ac88929e3d1f12bc45714ae5ee6d9a788a9fb35e60bb04b"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:db4b41f9bd95fbe5acd76d89920336ba96f03e149097365afe1cb092fceb89a1"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_armv7l.whl", hash = "sha256:fa854f5cf7e33842a892e5c73f45327760bc7bc516339fda888c75ae60edaeb6"},
    {file = "pydantic_core-2.33.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:5f483cfb75ff703095c59e365360cb73e00185e01aaea067cd19acffd2ab20ea"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win32.whl", hash = "sha256:9cb1da0f5a471435a7bc7e439b8a728e8b61e59784b2af70d7c169f8dd8ae290"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win_amd64.whl", hash = "sha256:f941635f2a3d96b2973e867144fde513665c87f13fe0e193c158ac51bfaaa7b2"},
    {file = "pydantic_core-2.33.2-cp312-cp312-win_arm64.whl", hash = "sha256:cca3868ddfaccfbc4bfb1d608e2ccaaebe0ae628e1416aeb9c4d88c001bb45ab"},
    {file = "pydantic_core-2.33.2-cp313-cp313-macosx_10_12_x86_64.whl", hash = "sha256:1082dd3e2d7109ad8b7da48e1d4710c8d06c253cbc4a27c1cff4fbcaa97a9e3f"},
    {file = "pydantic_core-2.33.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:f517ca031dfc037a9c07e748cefd8d96235088b83b4f4ba8939105d20fa1dcd6"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0a9f2c9dd19656823cb8250b0724ee9c60a82f3cdf68a080979d13092a3b0fef"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2b0a451c263b01acebe51895bfb0e1cc842a5c666efe06cdf13846c7418caa9a"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1ea40a64d23faa25e62a70ad163571c0b342b8bf66d5fa612ac0dec4f069d916"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:0fb2d542b4d66f9470e8065c5469ec676978d625a8b7a363f07d9a501a9cb36a"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9fdac5d6ffa1b5a83bca06ffe7583f5576555e6c8b3a91fbd25ea7780f825f7d"},
    {file = "pydantic_core-2.33.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:04a1a413977ab517154eebb2d326da71638271477d6ad87a769102f7c2488c56"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:c8e7af2f4e0194c22b5b37205bfb293d166a7344a5b0d0eaccebc376546d77d5"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_armv7l.whl", hash = "sha256:5c92edd15cd58b3c2d34873597a1e20f13094f59cf88068adb18947df5455b4e"},
    {file = "pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:65132b7b4a1c0beded5e057324b7e16e10910c106d43675d9bd87d4f38dde162"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win32.whl", hash = "sha256:52fb90784e0a242bb96ec53f42196a17278855b0f31ac7c3cc6f5c1ec4811849"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win_amd64.whl", hash = "sha256:c083a3bdd5a93dfe480f1125926afcdbf2917ae714bdb80b36d34318b2bec5d9"},
    {file = "pydantic_core-2.33.2-cp313-cp313-win_arm64.whl", hash = "sha256:e80b087132752f6b3d714f041ccf74403799d3b23a72722ea2e6ba2e892555b9"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-macosx_11_0_arm64.whl", hash = "sha256:61c18fba8e5e9db3ab908620af374db0ac1baa69f0f32df4f61ae23f15e586ac"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:95237e53bb015f67b63c91af7518a62a8660376a6a0db19b89acc77a4d6199f5"},
    {file = "pydantic_core-2.33.2-cp313-cp313t-win_amd64.whl", hash = "sha256:c2fc0a768ef76c15ab9238afa6da7f69895bb5d1ee83aeea2e3509af4472d0b9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-macosx_10_12_x86_64.whl", hash = "sha256:a2b911a5b90e0374d03813674bf0a5fbbb7741570dcd4b4e85a2e48d17def29d"},
    {file = "pydantic_core-2.33.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:6fa6dfc3e4d1f734a34710f391ae822e0a8eb8559a85c6979e14e65ee6ba2954"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c54c939ee22dc8e2d545da79fc5381f1c020d6d3141d3bd747eab59164dc89fb"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:53a57d2ed685940a504248187d5685e49eb5eef0f696853647bf37c418c538f7"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09fb9dd6571aacd023fe6aaca316bd01cf60ab27240d7eb39ebd66a3a15293b4"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:0e6116757f7959a712db11f3e9c0a99ade00a5bbedae83cb801985aa154f071b"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8d55ab81c57b8ff8548c3e4947f119551253f4e3787a7bbc0b6b3ca47498a9d3"},
    {file = "pydantic_core-2.33.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c20c462aa4434b33a2661701b861604913f912254e441ab8d78d30485736115a"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:44857c3227d3fb5e753d5fe4a3420d6376fa594b07b621e220cd93703fe21782"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_armv7l.whl", hash = "sha256:eb9b459ca4df0e5c87deb59d37377461a538852765293f9e6ee834f0435a93b9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9fcd347d2cc5c23b06de6d3b7b8275be558a0c90549495c699e379a80bf8379e"},
    {file = "pydantic_core-2.33.2-cp39-cp39-win32.whl", hash = "sha256:83aa99b1285bc8f038941ddf598501a86f1536789740991d7d8756e34f1e74d9"},
    {file = "pydantic_core-2.33.2-cp39-cp39-win_amd64.whl", hash = "sha256:f481959862f57f29601ccced557cc2e817bce7533ab8e01a797a48b49c9692b3"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-macosx_10_12_x86_64.whl", hash = "sha256:5c4aa4e82353f65e548c476b37e64189783aa5384903bfea4f41580f255fddfa"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:d946c8bf0d5c24bf4fe333af284c59a19358aa3ec18cb3dc4370080da1e8ad29"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:87b31b6846e361ef83fedb187bb5b4372d0da3f7e28d85415efa92d6125d6e6d"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:aa9d91b338f2df0508606f7009fde642391425189bba6d8c653afd80fd6bb64e"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:2058a32994f1fde4ca0480ab9d1e75a0e8c87c22b53a3ae66554f9af78f2fe8c"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:0e03262ab796d986f978f79c943fc5f620381be7287148b8010b4097f79a39ec"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:1a8695a8d00c73e50bff9dfda4d540b7dee29ff9b8053e38380426a85ef10052"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:fa754d1850735a0b0e03bcffd9d4b4343eb417e47196e4485d9cca326073a42c"},
    {file = "pydantic_core-2.33.2-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:a11c8d26a50bfab49002947d3d237abe4d9e4b5bdc8846a63537b6488e197808"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-macosx_10_12_x86_64.whl", hash = "sha256:dd14041875d09cc0f9308e37a6f8b65f5585cf2598a53aa0123df8b129d481f8"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-macosx_11_0_arm64.whl", hash = "sha256:d87c561733f66531dced0da6e864f44ebf89a8fba55f31407b00c2f7f9449593"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f82865531efd18d6e07a04a17331af02cb7a651583c418df8266f17a63c6612"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2bfb5112df54209d820d7bf9317c7a6c9025ea52e49f46b6a2060104bba37de7"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64632ff9d614e5eecfb495796ad51b0ed98c453e447a76bcbeeb69615079fc7e"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:f889f7a40498cc077332c7ab6b4608d296d852182211787d4f3ee377aaae66e8"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:de4b83bb311557e439b9e186f733f6c645b9417c84e2eb8203f3f820a4b988bf"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:82f68293f055f51b51ea42fafc74b6aad03e70e191799430b90c13d643059ebb"},
    {file = "pydantic_core-2.33.2-pp311-pypy311_pp73-win_amd64.whl", hash = "sha256:329467cecfb529c925cf2bbd4d60d2c509bc2fb52a20c1045bf09bb70971a9c1"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-macosx_10_12_x86_64.whl", hash = "sha256:87acbfcf8e90ca885206e98359d7dca4bcbb35abdc0ff66672a293e1d7a19101"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:7f92c15cd1e97d4b12acd1cc9004fa092578acfa57b67ad5e43a197175d01a64"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d3f26877a748dc4251cfcfda9dfb5f13fcb034f5308388066bcfe9031b63ae7d"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dac89aea9af8cd672fa7b510e7b8c33b0bba9a43186680550ccf23020f32d535"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:970919794d126ba8645f3837ab6046fb4e72bbc057b3709144066204c19a455d"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_aarch64.whl", hash = "sha256:3eb3fe62804e8f859c49ed20a8451342de53ed764150cb14ca71357c765dc2a6"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_armv7l.whl", hash = "sha256:3abcd9392a36025e3bd55f9bd38d908bd17962cc49bc6da8e7e96285336e2bca"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-musllinux_1_1_x86_64.whl", hash = "sha256:3a1c81334778f9e3af2f8aeb7a960736e5cab1dfebfb26aabca09afd2906c039"},
    {file = "pydantic_core-2.33.2-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:2807668ba86cb38c6817ad9bc66215ab8584d1d304030ce4f0887336f28a5e27"},
    {file = "pydantic_core-2.33.2.tar.gz", hash = "sha256:7cb8bc3605c29176e1b105350d2e6474142d7c1bd1d9327c4a9bdb46bf827acc"},
]

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pygments"
version = "2.19.2"
description = "Pygments is a syntax highlighting package written in Python."
optional = false
python-versions = ">=3.8"
groups = ["main", "dev"]
files = [
    {file = "pygments-2.19.2-py3-none-any.whl", hash = "sha256:86540386c03d588bb81d44bc3928634ff26449851e99741617ecb9037ee5ec0b"},
    {file = "pygments-2.19.2.tar.gz", hash = "sha256:636cb2477cec7f8952536970bc533bc43743542f70392ae026374600add5b887"},
]

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pypika-tortoise"
version = "0.6.1"
description = "Forked from pypika and streamline just for tortoise-orm"
optional = false
python-versions = ">=3.9"
groups = ["main"]
markers = "python_version < \"4.0\""
files = [
    {file = "pypika_tortoise-0.6.1-py3-none-any.whl", hash = "sha256:da15886f37b347e71f0869f9e4ee2f9259e6bb57455b45299c6c23d7927cbb6e"},
    {file = "pypika_tortoise-0.6.1.tar.gz", hash = "sha256:36ec2c88c255b9ed7ef49a6068cdeac10dafd4ddfeb828205d3afc092507fc3a"},
]

[[package]]
name = "pytest"
version = "8.4.1"
description = "pytest: simple powerful testing with Python"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "pytest-8.4.1-py3-none-any.whl", hash = "sha256:539c70ba6fcead8e78eebbf1115e8b589e7565830d7d006a8723f19ac8a0afb7"},
    {file = "pytest-8.4.1.tar.gz", hash = "sha256:7c67fd69174877359ed9371ec3af8a3d2b04741818c51e5e99cc1742251fa93c"},
]

[package.dependencies]
colorama = {version = ">=0.4", markers = "sys_platform == \"win32\""}
iniconfig = ">=1"
packaging = ">=20"
pluggy = ">=1.5,<2"
pygments = ">=2.7.2"

[package.extras]
dev = ["argcomplete", "attrs (>=19.2)", "hypothesis (>=3.56)", "mock", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-assume"
version = "2.4.3"
description = "A pytest plugin that allows multiple failures per test"
optional = false
python-versions = "*"
groups = ["main"]
files = [
    {file = "pytest-assume-2.4.3.tar.gz", hash = "sha256:983e90537660fd7aa18bb554693523020272e7edeee3e40435593297bcc6347e"},
    {file = "pytest_assume-2.4.3-py3-none-any.whl", hash = "sha256:09074220213b87cf1f400609701a44b75078b4e69588c7227e061ff9b3ecf54b"},
]

[package.dependencies]
pytest = ">=2.7"
six = "*"

[[package]]
name = "pytest-asyncio"
version = "1.1.0"
description = "Pytest support for asyncio"
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_asyncio-1.1.0-py3-none-any.whl", hash = "sha256:5fe2d69607b0bd75c656d1211f969cadba035030156745ee09e7d71740e58ecf"},
    {file = "pytest_asyncio-1.1.0.tar.gz", hash = "sha256:796aa822981e01b68c12e4827b8697108f7205020f24b5793b3c41555dab68ea"},
]

[package.dependencies]
pytest = ">=8.2,<9"

[package.extras]
docs = ["sphinx (>=5.3)", "sphinx-rtd-theme (>=1)"]
testing = ["coverage (>=6.2)", "hypothesis (>=5.7.1)"]

[[package]]
name = "pytest-cov"
version = "6.2.1"
description = "Pytest plugin for measuring coverage."
optional = false
python-versions = ">=3.9"
groups = ["dev"]
files = [
    {file = "pytest_cov-6.2.1-py3-none-any.whl", hash = "sha256:f5bc4c23f42f1cdd23c70b1dab1bbaef4fc505ba950d53e0081d0730dd7e86d5"},
    {file = "pytest_cov-6.2.1.tar.gz", hash = "sha256:25cc6cc0a5358204b8108ecedc51a9b57b34cc6b8c967cc2c01a4e00d8a67da2"},
]

[package.dependencies]
coverage = {version = ">=7.5", extras = ["toml"]}
pluggy = ">=1.2"
pytest = ">=6.2.5"

[package.extras]
testing = ["fields", "hunter", "process-tests", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytz"
version = "2025.2"
description = "World timezone definitions, modern and historical"
optional = false
python-versions = "*"
groups = ["main"]
files = [
    {file = "pytz-2025.2-py2.py3-none-any.whl", hash = "sha256:5ddf76296dd8c44c26eb8f4b6f35488f3ccbf6fbbd7adee0b7262d43f0ec2f00"},
    {file = "pytz-2025.2.tar.gz", hash = "sha256:360b9e3dbb49a209c21ad61809c7fb453643e048b38924c765813546746e81c3"},
]

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
optional = false
python-versions = ">=3.8"
groups = ["main"]
files = [
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086"},
    {file = "PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b"},
    {file = "PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180"},
    {file = "PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68"},
    {file = "PyYAML-6.0.2-cp310-cp310-win32.whl", hash = "sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99"},
    {file = "PyYAML-6.0.2-cp310-cp310-win_amd64.whl", hash = "sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774"},
    {file = "PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317"},
    {file = "PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4"},
    {file = "PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e"},
    {file = "PyYAML-6.0.2-cp311-cp311-win32.whl", hash = "sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5"},
    {file = "PyYAML-6.0.2-cp311-cp311-win_amd64.whl", hash = "sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab"},
    {file = "PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425"},
    {file = "PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48"},
    {file = "PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b"},
    {file = "PyYAML-6.0.2-cp312-cp312-win32.whl", hash = "sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4"},
    {file = "PyYAML-6.0.2-cp312-cp312-win_amd64.whl", hash = "sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl", hash = "sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba"},
    {file = "PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl", hash = "sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484"},
    {file = "PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl", hash = "sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc"},
    {file = "PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl", hash = "sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652"},
    {file = "PyYAML-6.0.2-cp313-cp313-win32.whl", hash = "sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183"},
    {file = "PyYAML-6.0.2-cp313-cp313-win_amd64.whl", hash = "sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563"},
    {file = "PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d"},
    {file = "PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083"},
    {file = "PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706"},
    {file = "PyYAML-6.0.2-cp38-cp38-win32.whl", hash = "sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a"},
    {file = "PyYAML-6.0.2-cp38-cp38-win_amd64.whl", hash = "sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d"},
    {file = "PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12"},
    {file = "PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e"},
    {file = "PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725"},
    {file = "PyYAML-6.0.2-cp39-cp39-win32.whl", hash = "sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631"},
    {file = "PyYAML-6.0.2-cp39-cp39-win_amd64.whl", hash = "sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8"},
    {file = "pyyaml-6.0.2.tar.gz", hash = "sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e"},
]

[[package]]
name = "rich"
version = "14.1.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
optional = false
python-versions = ">=3.8.0"
groups = ["main"]
files = [
    {file = "rich-14.1.0-py3-none-any.whl", hash = "sha256:536f5f1785986d6dbdea3c75205c473f970777b4a0d6c6dd1b696aa05a3fa04f"},
    {file = "rich-14.1.0.tar.gz", hash = "sha256:e497a48b844b0320d45007cdebfeaeed8db2a4f4bcf49f15e455cfc4af11eaa8"},
]

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "ruff"
version = "0.12.10"
description = "An extremely fast Python linter and code formatter, written in Rust."
optional = false
python-versions = ">=3.7"
groups = ["main"]
files = [
    {file = "ruff-0.12.10-py3-none-linux_armv6l.whl", hash = "sha256:8b593cb0fb55cc8692dac7b06deb29afda78c721c7ccfed22db941201b7b8f7b"},
    {file = "ruff-0.12.10-py3-none-macosx_10_12_x86_64.whl", hash = "sha256:ebb7333a45d56efc7c110a46a69a1b32365d5c5161e7244aaf3aa20ce62399c1"},
    {file = "ruff-0.12.10-py3-none-macosx_11_0_arm64.whl", hash = "sha256:d59e58586829f8e4a9920788f6efba97a13d1fa320b047814e8afede381c6839"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:822d9677b560f1fdeab69b89d1f444bf5459da4aa04e06e766cf0121771ab844"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:37b4a64f4062a50c75019c61c7017ff598cb444984b638511f48539d3a1c98db"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:2c6f4064c69d2542029b2a61d39920c85240c39837599d7f2e32e80d36401d6e"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl", hash = "sha256:059e863ea3a9ade41407ad71c1de2badfbe01539117f38f763ba42a1206f7559"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1bef6161e297c68908b7218fa6e0e93e99a286e5ed9653d4be71e687dff101cf"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:4f1345fbf8fb0531cd722285b5f15af49b2932742fc96b633e883da8d841896b"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1f68433c4fbc63efbfa3ba5db31727db229fa4e61000f452c540474b03de52a9"},
    {file = "ruff-0.12.10-py3-none-manylinux_2_31_riscv64.whl", hash = "sha256:141ce3d88803c625257b8a6debf4a0473eb6eed9643a6189b68838b43e78165a"},
    {file = "ruff-0.12.10-py3-none-musllinux_1_2_aarch64.whl", hash = "sha256:f3fc21178cd44c98142ae7590f42ddcb587b8e09a3b849cbc84edb62ee95de60"},
    {file = "ruff-0.12.10-py3-none-musllinux_1_2_armv7l.whl", hash = "sha256:7d1a4e0bdfafcd2e3e235ecf50bf0176f74dd37902f241588ae1f6c827a36c56"},
    {file = "ruff-0.12.10-py3-none-musllinux_1_2_i686.whl", hash = "sha256:e67d96827854f50b9e3e8327b031647e7bcc090dbe7bb11101a81a3a2cbf1cc9"},
    {file = "ruff-0.12.10-py3-none-musllinux_1_2_x86_64.whl", hash = "sha256:ae479e1a18b439c59138f066ae79cc0f3ee250712a873d00dbafadaad9481e5b"},
    {file = "ruff-0.12.10-py3-none-win32.whl", hash = "sha256:9de785e95dc2f09846c5e6e1d3a3d32ecd0b283a979898ad427a9be7be22b266"},
    {file = "ruff-0.12.10-py3-none-win_amd64.whl", hash = "sha256:7837eca8787f076f67aba2ca559cefd9c5cbc3a9852fd66186f4201b87c1563e"},
    {file = "ruff-0.12.10-py3-none-win_arm64.whl", hash = "sha256:cc138cc06ed9d4bfa9d667a65af7172b47840e1a98b02ce7011c391e54635ffc"},
    {file = "ruff-0.12.10.tar.gz", hash = "sha256:189ab65149d11ea69a2d775343adf5f49bb2426fc4780f65ee33b423ad2e47f9"},
]

[[package]]
name = "setuptools"
version = "80.9.0"
description = "Easily download, build, install, upgrade, and uninstall Python packages"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "setuptools-80.9.0-py3-none-any.whl", hash = "sha256:062d34222ad13e0cc312a4c02d73f059e86a4acbfbdea8f8f76b28c99f306922"},
    {file = "setuptools-80.9.0.tar.gz", hash = "sha256:f36b47402ecde768dbfafc46e8e4207b4360c654f1f3bb84475f0a28628fb19c"},
]

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1) ; sys_platform != \"cygwin\"", "ruff (>=0.8.0) ; sys_platform != \"cygwin\""]
core = ["importlib_metadata (>=6) ; python_version < \"3.10\"", "jaraco.functools (>=4)", "jaraco.text (>=3.7)", "more_itertools", "more_itertools (>=8.8)", "packaging (>=24.2)", "platformdirs (>=4.2.2)", "tomli (>=2.0.1) ; python_version < \"3.11\"", "wheel (>=0.43.0)"]
cover = ["pytest-cov"]
doc = ["furo", "jaraco.packaging (>=9.3)", "jaraco.tidelift (>=1.4)", "pygments-github-lexers (==0.0.5)", "pyproject-hooks (!=1.1)", "rst.linker (>=1.9)", "sphinx (>=3.5)", "sphinx-favicon", "sphinx-inline-tabs", "sphinx-lint", "sphinx-notfound-page (>=1,<2)", "sphinx-reredirects", "sphinxcontrib-towncrier", "towncrier (<24.7)"]
enabler = ["pytest-enabler (>=2.2)"]
test = ["build[virtualenv] (>=1.0.3)", "filelock (>=3.4.0)", "ini2toml[lite] (>=0.14)", "jaraco.develop (>=7.21) ; python_version >= \"3.9\" and sys_platform != \"cygwin\"", "jaraco.envs (>=2.2)", "jaraco.path (>=3.7.2)", "jaraco.test (>=5.5)", "packaging (>=24.2)", "pip (>=19.1)", "pyproject-hooks (!=1.1)", "pytest (>=6,!=8.1.*)", "pytest-home (>=0.5)", "pytest-perf ; sys_platform != \"cygwin\"", "pytest-subprocess", "pytest-timeout", "pytest-xdist (>=3)", "tomli-w (>=1.0.0)", "virtualenv (>=13.0.0)", "wheel (>=0.44.0)"]
type = ["importlib_metadata (>=7.0.2) ; python_version < \"3.10\"", "jaraco.develop (>=7.21) ; sys_platform != \"cygwin\"", "mypy (==1.14.*)", "pytest-mypy"]

[[package]]
name = "six"
version = "1.17.0"
description = "Python 2 and 3 compatibility utilities"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"
groups = ["main"]
files = [
    {file = "six-1.17.0-py2.py3-none-any.whl", hash = "sha256:4721f391ed90541fddacab5acf947aa0d3dc7d27b2e1e8eda2be8970586c3274"},
    {file = "six-1.17.0.tar.gz", hash = "sha256:ff70335d468e7eb6ec65b95b99d3a2836546063f63acc5171de367e834932a81"},
]

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
optional = false
python-versions = ">=3.7"
groups = ["main", "dev"]
files = [
    {file = "sniffio-1.3.1-py3-none-any.whl", hash = "sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2"},
    {file = "sniffio-1.3.1.tar.gz", hash = "sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc"},
]

[[package]]
name = "starlette"
version = "0.47.2"
description = "The little ASGI library that shines."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "starlette-0.47.2-py3-none-any.whl", hash = "sha256:c5847e96134e5c5371ee9fac6fdf1a67336d5815e09eb2a01fdb57a351ef915b"},
    {file = "starlette-0.47.2.tar.gz", hash = "sha256:6ae9aa5db235e4846decc1e7b79c4f346adf41e9777aebeb49dfd09bbd7023d8"},
]

[package.dependencies]
anyio = ">=3.6.2,<5"
typing-extensions = {version = ">=4.10.0", markers = "python_version < \"3.13\""}

[package.extras]
full = ["httpx (>=0.27.0,<0.29.0)", "itsdangerous", "jinja2", "python-multipart (>=0.0.18)", "pyyaml"]

[[package]]
name = "stevedore"
version = "5.4.1"
description = "Manage dynamic plugins for Python applications"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "stevedore-5.4.1-py3-none-any.whl", hash = "sha256:d10a31c7b86cba16c1f6e8d15416955fc797052351a56af15e608ad20811fcfe"},
    {file = "stevedore-5.4.1.tar.gz", hash = "sha256:3135b5ae50fe12816ef291baff420acb727fcd356106e3e9cbfa9e5985cd6f4b"},
]

[package.dependencies]
pbr = ">=2.0.0"

[[package]]
name = "tortoise-orm"
version = "0.25.1"
description = "Easy async ORM for python, built with relations in mind"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "tortoise_orm-0.25.1-py3-none-any.whl", hash = "sha256:df0ef7e06eb0650a7e5074399a51ee6e532043308c612db2cac3882486a3fd9f"},
    {file = "tortoise_orm-0.25.1.tar.gz", hash = "sha256:4d5bfd13d5750935ffe636a6b25597c5c8f51c47e5b72d7509d712eda1a239fe"},
]

[package.dependencies]
aiosqlite = ">=0.16.0,<1.0.0"
iso8601 = {version = ">=2.1.0,<3.0.0", markers = "python_version < \"4.0\""}
pypika-tortoise = {version = ">=0.6.1,<1.0.0", markers = "python_version < \"4.0\""}
pytz = "*"

[package.extras]
accel = ["ciso8601 ; sys_platform != \"win32\" and implementation_name == \"cpython\"", "orjson", "uvloop ; sys_platform != \"win32\" and implementation_name == \"cpython\""]
aiomysql = ["aiomysql"]
asyncmy = ["asyncmy (>=0.2.8,<1.0.0) ; python_version < \"4.0\""]
asyncodbc = ["asyncodbc (>=0.1.1,<1.0.0) ; python_version < \"4.0\""]
asyncpg = ["asyncpg"]
psycopg = ["psycopg[binary,pool] (>=3.0.12,<4.0.0)"]

[[package]]
name = "typing-extensions"
version = "4.14.1"
description = "Backported and Experimental Type Hints for Python 3.9+"
optional = false
python-versions = ">=3.9"
groups = ["main", "dev"]
files = [
    {file = "typing_extensions-4.14.1-py3-none-any.whl", hash = "sha256:d1e1e3b58374dc93031d6eda2420a48ea44a36c2b4766a4fdeb3710755731d76"},
    {file = "typing_extensions-4.14.1.tar.gz", hash = "sha256:38b39f4aeeab64884ce9f74c94263ef78f3c22467c8724005483154c26648d36"},
]
markers = {dev = "python_version < \"3.13\""}

[[package]]
name = "typing-inspection"
version = "0.4.1"
description = "Runtime typing introspection tools"
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "typing_inspection-0.4.1-py3-none-any.whl", hash = "sha256:389055682238f53b04f7badcb49b989835495a96700ced5dab2d8feae4b26f51"},
    {file = "typing_inspection-0.4.1.tar.gz", hash = "sha256:6ae134cc0203c33377d43188d4064e9b357dba58cff3185f22924610e70a9d28"},
]

[package.dependencies]
typing-extensions = ">=4.12.0"

[[package]]
name = "uvicorn"
version = "0.35.0"
description = "The lightning-fast ASGI server."
optional = false
python-versions = ">=3.9"
groups = ["main"]
files = [
    {file = "uvicorn-0.35.0-py3-none-any.whl", hash = "sha256:197535216b25ff9b785e29a0b79199f55222193d47f820816e7da751e9bc8d4a"},
    {file = "uvicorn-0.35.0.tar.gz", hash = "sha256:bc662f087f7cf2ce11a1d7fd70b90c9f98ef2e2831556dd078d131b96cc94a01"},
]

[package.dependencies]
click = ">=7.0"
h11 = ">=0.8"

[package.extras]
standard = ["colorama (>=0.4) ; sys_platform == \"win32\"", "httptools (>=0.6.3)", "python-dotenv (>=0.13)", "pyyaml (>=5.1)", "uvloop (>=0.15.1) ; sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"PyPy\"", "watchfiles (>=0.13)", "websockets (>=10.4)"]

[metadata]
lock-version = "2.1"
python-versions = ">=3.11"
content-hash = "2298a264c562414e1ad325a71e23999fb175c8a30bd08773d0c4c9f406cb3f90"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/poetry.lock ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/pyproject.toml ==========
[project]
name = "users-app"
version = "0.1.0"
description = ""
authors = [
    {name = "alejandra.pinzon",email = "ma.pinzons1@uniandes.edu.co"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "tortoise-orm (>=0.25.1,<0.26.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "black (>=25.1.0,<26.0.0)",
    "isort (>=6.0.1,<7.0.0)",
    "bandit (>=1.8.6,<2.0.0)",
    "pytest-assume (>=2.4.3,<3.0.0)",
    "ruff (>=0.12.9,<0.13.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "email-validator >=2.1.1"
]

[[tool.poetry.packages]]
include = "src"
from = "."

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"
httpx = "^0.28.1"

[[tool.poetry.packages]]
include = "src"
from = "."

[tool.bandit]
# See https://bandit.readthedocs.io/en/latest/config.html for reference
exclude_dirs = ["./tests"]
skips = ["B101"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/7.2.x/reference/customize.html for reference
python_files = "test_*.py"
pythonpath = "src"
testpaths = [
  "tests"
]========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/pyproject.toml ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/models.py ==========
import enum
import uuid

from tortoise import fields, models

class UserStatus(str, enum.Enum):
    POR_VERIFICAR = "POR_VERIFICAR"
    NO_VERIFICADO = "NO_VERIFICADO"
    VERIFICADO = "VERIFICADO"

class User(models.Model):
    id = fields.UUIDField(pk=True, default=uuid.uuid4)
    username = fields.CharField(max_length=100, unique=True, null=False)
    email = fields.CharField(max_length=100, null=False)
    phoneNumber = fields.CharField(max_length=20, null=True)
    dni = fields.CharField(max_length=20, null=True)
    fullName = fields.CharField(max_length=250, null=True)
    password = fields.CharField(max_length=255, null=False)
    salt = fields.CharField(max_length=255, null=True)
    token = fields.CharField(max_length=500, null=True)
    status = fields.CharEnumField(UserStatus, default=UserStatus.POR_VERIFICAR)
    expireAt = fields.DatetimeField(null=True)
    createdAt = fields.DatetimeField(auto_now_add=True)
    updatedAt = fields.DatetimeField(auto_now=True)

    class Meta:
        table = "users"
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/models.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/user_repository_adapter.py ==========
import datetime
import hashlib
import uuid
from datetime import timezone
from typing import Dict, Optional

from adapters.bd.models import User
from domain.models.user import UserAuth, UserCreate, UserResponse, UserUpdate
from domain.ports.user_repository_port import UserRepositoryPort
from errors import UserNotFoundError

class DBUserRepositoryAdapter(UserRepositoryPort):
    async def create(self, user_create: UserCreate) -> Dict:
        email_exists = await User.filter(email=user_create.email).exists()
        username_exists = await User.filter(username=user_create.username).exists()
        if email_exists or username_exists:
            return {"msg": "Usuario existente"}

        password_encode = user_create.password.encode("utf-8")
        hashed = hashlib.sha256(password_encode).hexdigest()
        user_db = User(
            username=user_create.username,
            password=hashed,
            email=user_create.email,
            dni=user_create.dni,
            fullName=user_create.fullName,
            phoneNumber=user_create.phoneNumber,
            createdAt=datetime.datetime.now(datetime.timezone.utc),
        )
        await user_db.save()
        return {
            "id": str(user_db.id),
            "createdAt": user_db.createdAt.isoformat(),
        }

    async def update(self, user_id: str, user_update: UserUpdate) -> User:
        user_db = await User.get_or_none(id=user_id)
        if not user_db:
            raise UserNotFoundError(f"User with id {user_id} not found")

        data = user_update.model_dump(exclude_unset=True)
        for field, value in data.items():
            setattr(user_db, field, value)
        updateAt = datetime.datetime.now(datetime.timezone.utc)
        user_db.updatedAt = updateAt
        await user_db.save()

        return user_db

    async def create_token(self, user_request: UserAuth) -> Dict:
        user_db = await User.get_or_none(username=user_request.username)
        if not user_db:
            return None

        # Hashear el password recibido para compararlo con el que está en BD
        password_encode = user_request.password.encode("utf-8")
        hashed_input = hashlib.sha256(password_encode).hexdigest()

        if hashed_input != user_db.password:
            return None

        salt = str(uuid.uuid4())
        token_value = salt + user_request.password
        hashed_token = hashlib.sha256(token_value.encode("utf-8")).hexdigest()
        expire_at = datetime.datetime.now(datetime.timezone.utc) + datetime.timedelta(
            hours=1
        )

        user_db.token = hashed_token
        user_db.salt = salt
        user_db.expireAt = expire_at
        await user_db.save()

        return {
            "id": str(user_db.id),
            "token": hashed_token,
            "expireAt": expire_at.isoformat(),
        }

    async def get_user_by_token(self, token: str) -> Optional[UserResponse]:
        user_db = await User.get_or_none(token=token)
        if not user_db:
            return None

        if user_db.expireAt < datetime.datetime.now(timezone.utc):
            return None

        return UserResponse(
            id=str(user_db.id),
            username=user_db.username,
            email=user_db.email,
            fullName=user_db.fullName,
            dni=user_db.dni,
            phoneNumber=user_db.phoneNumber,
            status=user_db.status,
        )

    async def get_user_count(self) -> int:
        return await User.all().count()

    async def reset_database(self) -> None:
        await User.all().delete()
        return None
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/adapters/bd/user_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/assembly.py ==========
from adapters.bd.user_repository_adapter import DBUserRepositoryAdapter
from domain.use_cases.base_use_case import BaseUseCase
from domain.use_cases.count_users_use_case import GetUserCountUseCase
from domain.use_cases.create_user_use_case import CreateUserUseCase
from domain.use_cases.generate_token_use_case import GenerateTokenUseCase
from domain.use_cases.get_user_by_token_use_case import GetDataUserUseCase
from domain.use_cases.reset_db_use_case import DeleteAllUsersUseCase
from domain.use_cases.update_user_use_case import UpdateUserUseCase

repository: DBUserRepositoryAdapter = DBUserRepositoryAdapter()

def build_create_user_use_case() -> BaseUseCase:
    """Get create user use case."""
    return CreateUserUseCase(repository)

def build_update_user_use_case() -> BaseUseCase:
    """Get update user use case."""
    return UpdateUserUseCase(repository)

def build_generate_token_use_case() -> BaseUseCase:
    """Generate a token use case."""
    return GenerateTokenUseCase(repository)

def build_get_user_by_token_use_case() -> BaseUseCase:
    """Get user by token use case."""
    return GetDataUserUseCase(repository)

def build_get_user_count_use_case() -> BaseUseCase:
    """Get user count use case."""
    return GetUserCountUseCase(repository)

def build_reset_database_use_case() -> BaseUseCase:
    """Get all post use case."""
    return DeleteAllUsersUseCase(repository)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/assembly.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/config.py ==========
import os
from functools import lru_cache

class classproperty:
    def __init__(self, fget):
        self.fget = fget

    def __get__(self, instance, owner):
        return self.fget(owner)

class Settings:
    """Application settings."""

    @classproperty
    @lru_cache()
    def app_name(self) -> str:
        return os.getenv("APP_NAME", "User App")

    @classproperty
    @lru_cache()
    def log_level(self) -> str:
        return os.getenv("LOG_LEVEL", "DEBUG")

    @classproperty
    @lru_cache()
    def db_url(self) -> str:
        user = os.getenv("POSTGRES_USER")
        password = os.getenv("POSTGRES_PASSWORD")
        host = os.getenv("POSTGRES_HOST", "localhost")
        port = os.getenv("POSTGRES_PORT", "5432")
        db = os.getenv("POSTGRES_DB")
        return f"postgres://{user}:{password}@{host}:{port}/{db}"

    @classproperty
    @lru_cache()
    def tortoise_config(self) -> dict:
        return {
            "connections": {"default": Settings.db_url},
            "apps": {
                "models": {
                    "models": ["adapters.bd.models"],
                    "default_connection": "default",
                }
            },
        }
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/config.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/models/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/models/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/models/user.py ==========
from datetime import datetime
from enum import Enum
from typing import Annotated, Optional
from uuid import UUID

from pydantic import BaseModel, EmailStr, Field

class UserStatus(str, Enum):
    POR_VERIFICAR = "POR_VERIFICAR"
    NO_VERIFICADO = "NO_VERIFICADO"
    VERIFICADO = "VERIFICADO"

class User(BaseModel):
    """User domain model."""

    id: UUID
    username: str
    email: EmailStr
    phoneNumber: str | None = None
    dni: str | None = None
    fullName: str | None = None
    status: UserStatus
    expireAt: datetime | None = None
    createdAt: datetime
    updatedAt: datetime

    class Config:
        from_attributes = True  # permite mapear desde ORM

class UserCreate(BaseModel):
    username: Annotated[str, Field(min_length=3, max_length=100)]
    password: Annotated[str, Field(min_length=8)]
    email: EmailStr
    dni: Optional[str] = None
    fullName: Optional[str] = None
    phoneNumber: Optional[str] = None

class UserUpdate(BaseModel):
    status: Optional[UserStatus] = None
    dni: Optional[str] = None
    fullName: Optional[str] = None
    phoneNumber: Optional[str] = None

class UserAuth(BaseModel):
    username: Annotated[str, Field(min_length=3, max_length=100)]
    password: Annotated[str, Field(min_length=1)]

class UserResponse(BaseModel):
    id: str
    username: str
    email: EmailStr
    fullName: Optional[str] = None
    dni: Optional[str] = None
    phoneNumber: Optional[str] = None
    status: str

    class Config:
        from_attributes = True
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/models/user.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/ports/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/ports/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/ports/user_repository_port.py ==========
from abc import ABC, abstractmethod
from typing import Dict, Optional

from domain.models.user import User, UserAuth, UserCreate, UserResponse, UserUpdate

class UserRepositoryPort(ABC):
    """User repository interface."""

    @abstractmethod
    async def create(self, user_create: UserCreate) -> Dict:
        """Create a new user."""
        pass

    @abstractmethod
    async def update(self, user_id: str, user_update: UserUpdate) -> User:
        """Update user by ID"""
        pass

    @abstractmethod
    async def create_token(self, user_request: UserAuth) -> Dict:
        """Generate token"""
        pass

    @abstractmethod
    async def get_user_by_token(self, token: str) -> Optional[UserResponse]:
        """Get user by token"""
        pass

    @abstractmethod
    async def get_user_count(
        self,
    ) -> int:
        """Get count of users"""
        pass

    @abstractmethod
    async def reset_database(self) -> None:
        """Reset database"""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/ports/user_repository_port.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/base_use_case.py ==========
from abc import ABC, abstractmethod

class BaseUseCase(ABC):
    """Base use case class."""

    @abstractmethod
    def execute(self, *args, **kwargs):
        """Execute the use case."""
        pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/base_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/count_users_use_case.py ==========
from domain.ports.user_repository_port import UserRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GetUserCountUseCase(BaseUseCase):
    """Use case for count all user."""

    def __init__(self, user_repository: UserRepositoryPort):
        self.user_repository = user_repository

    async def execute(self) -> int:
        return await self.user_repository.get_user_count()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/count_users_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/create_user_use_case.py ==========
from typing import Dict

from domain.models.user import UserCreate
from domain.ports.user_repository_port import UserRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class CreateUserUseCase(BaseUseCase):
    """Use case for saving a user."""

    def __init__(self, user_repository: UserRepositoryPort):
        self.user_repository = user_repository

    def execute(self, user: UserCreate) -> Dict:
        """Create a new User"""
        return self.user_repository.create(user)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/create_user_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/generate_token_use_case.py ==========
from typing import Dict

from domain.models.user import UserAuth
from domain.ports.user_repository_port import UserRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class GenerateTokenUseCase(BaseUseCase):
    """Use case for authentication user."""

    def __init__(self, user_repository: UserRepositoryPort):
        self.user_repository = user_repository

    def execute(self, user: UserAuth) -> Dict:
        """Generate a token"""
        return self.user_repository.create_token(user)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/generate_token_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/get_user_by_token_use_case.py ==========
from typing import Optional

from domain.models.user import UserResponse
from domain.use_cases.base_use_case import BaseUseCase

class GetDataUserUseCase(BaseUseCase):
    """Use case for getting user data by token"""

    def __init__(self, user_repository):
        self.user_repository = user_repository

    async def execute(self, token: str) -> Optional[UserResponse]:
        """Get user data by token"""
        return await self.user_repository.get_user_by_token(token)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/get_user_by_token_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/reset_db_use_case.py ==========
from typing import Dict

from domain.ports.user_repository_port import UserRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class DeleteAllUsersUseCase(BaseUseCase):
    """Use case for resert BD."""

    def __init__(self, user_repository: UserRepositoryPort):
        self.user_repository = user_repository

    def execute(self) -> Dict:
        return self.user_repository.reset_database()
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/reset_db_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/update_user_use_case.py ==========
from typing import Dict

from domain.models.user import UserUpdate
from domain.ports.user_repository_port import UserRepositoryPort
from domain.use_cases.base_use_case import BaseUseCase

class UpdateUserUseCase(BaseUseCase):
    """Use case for update a user."""

    def __init__(self, user_repository: UserRepositoryPort):
        self.user_repository = user_repository

    async def execute(self, user_id: str, user_update: UserUpdate) -> Dict | str | None:
        if not any(
            [
                user_update.status,
                user_update.dni,
                user_update.fullName,
                user_update.phoneNumber,
            ]
        ):
            return "no_fields"

        user_db = await self.user_repository.update(user_id, user_update)
        if not user_db:
            return None

        return {"msg": "el usuario ha sido actualizado"}
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/domain/use_cases/update_user_use_case.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/main.py ==========
from fastapi import FastAPI, Request
from fastapi.exceptions import RequestValidationError
from fastapi.responses import JSONResponse
from tortoise.contrib.fastapi import register_tortoise

from config import Settings
from entrypoints.api.routers.user_router import router as user_router

app = FastAPI(title=Settings.app_name)

@app.exception_handler(RequestValidationError)
async def validation_exception_handler(request: Request, exc: RequestValidationError):
    return JSONResponse(
        status_code=400,
        content=None,
    )

app.include_router(user_router)

register_tortoise(
    app,
    config=Settings.tortoise_config,
    generate_schemas=True,
    add_exception_handlers=True,
)
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/main.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/routers/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/routers/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/routers/user_router.py ==========
import re
from typing import Dict

from fastapi import APIRouter, Depends, HTTPException
from fastapi.responses import JSONResponse, PlainTextResponse
from fastapi.security import HTTPAuthorizationCredentials, HTTPBearer

from assembly import (
    build_create_user_use_case,
    build_generate_token_use_case,
    build_get_user_by_token_use_case,
    build_get_user_count_use_case,
    build_reset_database_use_case,
    build_update_user_use_case,
)
from domain.models.user import UserAuth, UserCreate, UserResponse, UserUpdate
from domain.use_cases.base_use_case import BaseUseCase
from domain.use_cases.get_user_by_token_use_case import GetDataUserUseCase
from errors import UserNotFoundError

router = APIRouter(prefix="/users")
security = HTTPBearer()

@router.post("/", response_class=JSONResponse, status_code=201)
async def create_user(
    user: UserCreate, use_case: BaseUseCase = Depends(build_create_user_use_case)
):
    """Create a new user."""

    if not re.match(r"^[A-Za-z0-9]+$", user.username):
        return JSONResponse(status_code=400, content=None)

    result = await use_case.execute(user)
    msg = result.get("msg", "OK")

    if "Usuario existente" == msg:
        return JSONResponse(status_code=412, content=None)

    return JSONResponse(status_code=201, content=result)

@router.post("/auth", response_class=JSONResponse, status_code=200)
async def auth_user(
    credentials: UserAuth,
    use_case: BaseUseCase = Depends(build_generate_token_use_case),
) -> Dict:
    """Create a new token."""

    token_user = await use_case.execute(credentials)

    if token_user is None:
        return JSONResponse(status_code=404, content=None)

    return JSONResponse(status_code=200, content=token_user)

@router.get("/me", response_model=UserResponse, status_code=200)
async def get_data_user(
    credentials: HTTPAuthorizationCredentials = Depends(security),
    use_case: GetDataUserUseCase = Depends(build_get_user_by_token_use_case),
):
    """Return data user by token"""

    token_hash = credentials.credentials

    user = await use_case.execute(token_hash)

    if not user:
        raise HTTPException(status_code=401)

    return user

@router.get("/count", response_class=JSONResponse, status_code=200)
async def get_user_count(
    use_case: BaseUseCase = Depends(build_get_user_count_use_case),
):
    """Return total number of users"""
    count = await use_case.execute()
    return JSONResponse(status_code=200, content={"count": count})

@router.post("/reset", response_class=JSONResponse)
async def delete_all_users(
    use_case: BaseUseCase = Depends(build_reset_database_use_case),
):
    """Delete all users."""

    await use_case.execute()
    return JSONResponse({"msg": "Todos los datos fueron eliminados"}, status_code=200)

@router.get("/ping", response_class=PlainTextResponse)
def health_check():
    """Healthcheck endpoint."""
    return "pong"

@router.patch("/{id}", response_class=JSONResponse, status_code=200)
async def update_user(
    id: str,
    user_update: UserUpdate,
    use_case: BaseUseCase = Depends(build_update_user_use_case),
):
    """Update an existing user."""

    if not any(
        [
            user_update.status,
            user_update.dni,
            user_update.fullName,
            user_update.phoneNumber,
        ]
    ):
        return JSONResponse(status_code=400, content=None)

    try:
        result = await use_case.execute(id, user_update)
    except UserNotFoundError:
        return JSONResponse(status_code=404, content=None)

    if result == "no_fields":
        return JSONResponse(status_code=400, content=None)

    return JSONResponse(
        status_code=200, content={"msg": "el usuario ha sido actualizado"}
    )
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/entrypoints/api/routers/user_router.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/errors.py ==========
class UserNotFoundError(Exception):
    """Exception raised when a user is not found."""

    pass
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/src/errors.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/adapter/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/adapter/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/adapter/test_repository_adapter.py ==========
import datetime
from unittest.mock import AsyncMock, patch

import pytest

from adapters.bd.user_repository_adapter import DBUserRepositoryAdapter
from domain.models.user import UserCreate, UserUpdate
from errors import UserNotFoundError

@pytest.fixture
def adapter():
    return DBUserRepositoryAdapter()

@pytest.mark.asyncio
async def test_create_user_success(adapter):
    user_create = UserCreate(
        username="newuser", password="password123", email="new@example.com"
    )

    with patch("adapters.bd.models.User.filter") as mock_filter, patch(
        "adapters.bd.models.User.save", new_callable=AsyncMock
    ) as mock_save, patch("adapters.bd.models.User") as mock_user_cls:

        # Mock para definir que el usuario no está creado con anterioridad
        mock_filter.return_value.exists = AsyncMock(return_value=False)
        mock_user_instance = AsyncMock()
        mock_user_instance.id = 1
        mock_user_instance.createdAt = datetime.datetime.now(datetime.timezone.utc)
        mock_user_cls.return_value = mock_user_instance

        result = await adapter.create(user_create)
        assert "id" in result
        assert "createdAt" in result
        mock_save.assert_awaited_once()

@pytest.mark.asyncio
async def test_create_user_existing(adapter):
    user_create = UserCreate(
        username="existinguser", password="password123", email="existing@example.com"
    )

    with patch("adapters.bd.models.User.filter") as mock_filter:
        # Mock usuario existente
        mock_filter.return_value.exists = AsyncMock(return_value=True)
        result = await adapter.create(user_create)
        assert result["msg"] == "Usuario existente"

@pytest.mark.asyncio
async def test_update_user_success(adapter):
    user_update = UserUpdate(dni="12345678")

    mock_user = AsyncMock()
    mock_user.save = AsyncMock()

    with patch(
        "adapters.bd.models.User.get_or_none", new_callable=AsyncMock
    ) as mock_get:
        mock_get.return_value = mock_user
        result = await adapter.update("123", user_update)
        assert result == mock_user
        mock_user.save.assert_awaited_once()

@pytest.mark.asyncio
async def test_update_user_not_found(adapter):
    user_update = UserUpdate(dni="12345678")

    with patch(
        "adapters.bd.models.User.get_or_none", new_callable=AsyncMock
    ) as mock_get:
        mock_get.return_value = None
        with pytest.raises(UserNotFoundError):
            await adapter.update("123", user_update)

@pytest.mark.asyncio
async def test_get_user_by_token_expired(adapter):
    mock_user = AsyncMock()
    mock_user.expireAt = datetime.datetime.now(
        datetime.timezone.utc
    ) - datetime.timedelta(seconds=1)

    with patch(
        "adapters.bd.models.User.get_or_none", new_callable=AsyncMock
    ) as mock_get:
        mock_get.return_value = mock_user
        result = await adapter.get_user_by_token("token123")
        assert result is None
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/adapter/test_repository_adapter.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/__init__.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_auth_user.py ==========
import pytest
from fastapi import FastAPI
from fastapi.testclient import TestClient

from src.entrypoints.api.routers import user_router
from src.entrypoints.api.routers.user_router import build_generate_token_use_case

@pytest.fixture
def test_app():
    app = FastAPI()
    app.include_router(user_router.router)
    return app

@pytest.fixture
def client(test_app):
    return TestClient(test_app)

def override_use_case(result):
    class DummyUseCase:
        async def execute(self, credentials):
            return result

    return DummyUseCase()

@pytest.mark.asyncio
async def test_auth_user_invalid_username(client, test_app):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_generate_token_use_case] = (
        lambda: override_use_case({"token": "fake"})
    )

    response = client.post(
        "/users/auth", json={"username": "ab", "password": "password123"}
    )
    assert response.status_code == 422

@pytest.mark.asyncio
async def test_auth_user_invalid_password(client, test_app):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_generate_token_use_case] = (
        lambda: override_use_case({"token": "fake"})
    )

    response = client.post("/users/auth", json={"username": "validuser", "password": 4})
    assert response.status_code == 422

@pytest.mark.asyncio
async def test_auth_user_empty_body(client, test_app):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_generate_token_use_case] = (
        lambda: override_use_case({"token": "fake"})
    )

    response = client.post("/users/auth", json={})
    assert response.status_code == 422

@pytest.mark.asyncio
async def test_auth_user_not_found(client, test_app):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_generate_token_use_case] = (
        lambda: override_use_case(None)
    )

    response = client.post(
        "/users/auth", json={"username": "ghost", "password": "wrongpass789"}
    )
    assert response.status_code == 404
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_auth_user.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_create_user.py ==========
import pytest
from fastapi import FastAPI
from fastapi.testclient import TestClient

from src.entrypoints.api.routers import user_router
from src.entrypoints.api.routers.user_router import build_create_user_use_case

@pytest.fixture
def test_app():
    app = FastAPI()
    app.include_router(user_router.router)
    return app

@pytest.fixture
def client(test_app):
    return TestClient(test_app)

def override_use_case(result):
    class DummyUseCase:
        async def execute(self, user):
            return result

    return DummyUseCase()

@pytest.mark.asyncio
async def test_create_user_invalid_username(test_app, client):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_create_user_use_case] = (
        lambda: override_use_case({"msg": "OK"})
    )

    response = client.post(
        "/users/",
        json={
            "username": "invalid name",
            "password": "password123",
            "email": "test@example.com",
        },
    )
    assert response.status_code == 400

@pytest.mark.asyncio
async def test_create_user_existing_user(test_app, client):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_create_user_use_case] = (
        lambda: override_use_case({"msg": "Usuario existente"})
    )

    response = client.post(
        "/users/",
        json={
            "username": "validuser",
            "password": "password123",
            "email": "test@example.com",
        },
    )
    assert response.status_code == 412

@pytest.mark.asyncio
async def test_create_user_success(test_app, client):
    expected_result = {"msg": "OK", "id": 1}
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_create_user_use_case] = (
        lambda: override_use_case(expected_result)
    )

    response = client.post(
        "/users/",
        json={
            "username": "validuser",
            "password": "password123",
            "email": "test@example.com",
        },
    )

    assert response.status_code == 201
    assert response.json() == expected_result
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_create_user.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_get_user_by_token.py ==========
import pytest
from fastapi import FastAPI
from fastapi.testclient import TestClient

from src.entrypoints.api.routers import user_router
from src.entrypoints.api.routers.user_router import build_get_user_by_token_use_case

@pytest.fixture
def test_app():
    app = FastAPI()
    app.include_router(user_router.router)
    return app

@pytest.fixture
def client(test_app):
    return TestClient(test_app)

def override_use_case(return_value=None):
    class DummyUseCase:
        async def execute(self, *args, **kwargs):
            return return_value

    return DummyUseCase()

def test_get_user_by_token_success(test_app, client):

    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_get_user_by_token_use_case] = (
        lambda: override_use_case(
            return_value={
                "id": "1",
                "username": "testuser",
                "email": "test@example.com",
                "status": "POR_VERIFICAR",
                "fullName": "Test User",
                "dni": "12345678",
                "phoneNumber": "1234567890",
            }
        )
    )

    response = client.get("/users/me", headers={"Authorization": "Bearer valid_token"})
    assert response.status_code == 200
    body = response.json()
    assert body["username"] == "testuser"
    assert body["email"] == "test@example.com"
    assert body["status"] == "POR_VERIFICAR"

def test_get_user_by_token_not_found(test_app, client):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_get_user_by_token_use_case] = (
        lambda: override_use_case(return_value=None)
    )

    response = client.get(
        "/users/me", headers={"Authorization": "Bearer invalid_token"}
    )
    assert response.status_code == 401

def test_get_user_by_token_missing_header(test_app, client):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_get_user_by_token_use_case] = (
        lambda: override_use_case(return_value=None)
    )

    response = client.get("/users/me")
    assert response.status_code == 403
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_get_user_by_token.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_update_user.py ==========
import pytest
from fastapi import FastAPI
from fastapi.testclient import TestClient

from src.entrypoints.api.routers import user_router
from src.entrypoints.api.routers.user_router import build_update_user_use_case

@pytest.fixture
def test_app():
    app = FastAPI()
    app.include_router(user_router.router)
    return app

@pytest.fixture
def client(test_app):
    return TestClient(test_app)

def override_use_case(return_value=None, raise_exc=None):
    class DummyUseCase:
        async def execute(self, *args, **kwargs):
            if raise_exc:
                raise raise_exc
            return return_value

    return DummyUseCase()

@pytest.mark.asyncio
async def test_update_user_not_found(test_app, client):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_update_user_use_case] = (
        lambda: override_use_case(raise_exc=user_router.UserNotFoundError)
    )

    resp = client.patch("/users/123", json={"dni": "123456"})
    assert resp.status_code == 404

@pytest.mark.asyncio
async def test_update_user_empty_body(test_app, client):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_update_user_use_case] = (
        lambda: override_use_case(return_value=None)
    )
    resp = client.patch("/users/123", json={})
    assert resp.status_code == 400

@pytest.mark.asyncio
async def test_update_user_no_fields_from_usecase(test_app, client):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_update_user_use_case] = (
        lambda: override_use_case(return_value="no_fields")
    )
    resp = client.patch("/users/123", json={"dni": "123456"})
    assert resp.status_code == 400

@pytest.mark.asyncio
async def test_update_user_success(test_app, client):
    test_app.dependency_overrides = {}
    test_app.dependency_overrides[build_update_user_use_case] = (
        lambda: override_use_case(return_value="ok")
    )
    resp = client.patch("/users/123", json={"dni": "123456"})
    assert resp.status_code == 200
    assert resp.json() == {"msg": "el usuario ha sido actualizado"}
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/api/test_update_user.py ==========
========== INICIO DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/use_cases/__init__.py ==========
========== FIN DE: /home/ubuntu24/MAESTRIA/misw4301-aplicaciones_nativas_nube/X/entrega/users_app/tests/use_cases/__init__.py ==========
